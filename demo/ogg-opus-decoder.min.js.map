{"version":3,"file":"ogg-opus-decoder.min.js","mappings":"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","sources":["webpack://ogg-opus-decoder/webpack/universalModuleDefinition","webpack://ogg-opus-decoder/webpack/runtime/load script","webpack://ogg-opus-decoder/./node_modules/@wasm-audio-decoders/common/src/utilities.js","webpack://ogg-opus-decoder/./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js","webpack://ogg-opus-decoder/./node_modules/simple-yenc/dist/esm.js","webpack://ogg-opus-decoder/./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js","webpack://ogg-opus-decoder/./node_modules/@eshaz/web-worker/cjs/browser.js","webpack://ogg-opus-decoder/webpack/bootstrap","webpack://ogg-opus-decoder/webpack/runtime/define property getters","webpack://ogg-opus-decoder/webpack/runtime/ensure chunk","webpack://ogg-opus-decoder/webpack/runtime/get javascript chunk filename","webpack://ogg-opus-decoder/webpack/runtime/global","webpack://ogg-opus-decoder/webpack/runtime/hasOwnProperty shorthand","webpack://ogg-opus-decoder/webpack/runtime/make namespace object","webpack://ogg-opus-decoder/webpack/runtime/publicPath","webpack://ogg-opus-decoder/webpack/runtime/jsonp chunk loading","webpack://ogg-opus-decoder/./node_modules/opus-decoder/src/EmscriptenWasm.js","webpack://ogg-opus-decoder/./node_modules/opus-decoder/src/OpusDecoder.js","webpack://ogg-opus-decoder/./node_modules/opus-decoder/src/OpusDecoderWebWorker.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/constants.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/utilities.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/HeaderCache.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/globals.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/Parser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/containers/Frame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/CodecFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/metadata/ID3v2.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/CodecHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/aac/AACHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/aac/AACFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/aac/AACParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/flac/FLACFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/flac/FLACHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/flac/FLACParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/containers/ogg/OggPage.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/opus/OpusFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/opus/OpusHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/opus/OpusParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/containers/ogg/OggParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/src/CodecParser.js","webpack://ogg-opus-decoder/./node_modules/codec-parser/index.js","webpack://ogg-opus-decoder/./src/OggOpusDecoder.js","webpack://ogg-opus-decoder/./src/OggOpusDecoderWebWorker.js","webpack://ogg-opus-decoder/./index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ogg-opus-decoder\"] = factory();\n\telse\n\t\troot[\"ogg-opus-decoder\"] = factory();\n})(this, () => {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"ogg-opus-decoder:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export const assignNames = (Class, name) => {\n  Object.defineProperty(Class, \"name\", { value: name });\n};\n","import NodeWorker from \"@eshaz/web-worker\";\nimport WASMAudioDecoderCommon from \"./WASMAudioDecoderCommon.js\";\n\nconst getWorker = () => globalThis.Worker || NodeWorker;\n\nexport default class WASMAudioDecoderWorker extends getWorker() {\n  constructor(options, name, Decoder, EmscriptenWASM) {\n    if (!WASMAudioDecoderCommon.modules) new WASMAudioDecoderCommon();\n\n    let source = WASMAudioDecoderCommon.modules.get(Decoder);\n\n    if (!source) {\n      let type = \"text/javascript\",\n        isNode,\n        webworkerSourceCode =\n          \"'use strict';\" +\n          // dependencies need to be manually resolved when stringifying this function\n          `(${((_Decoder, _WASMAudioDecoderCommon, _EmscriptenWASM) => {\n            // We're in a Web Worker\n\n            // setup Promise that will be resolved once the WebAssembly Module is received\n            let decoder,\n              moduleResolve,\n              modulePromise = new Promise((resolve) => {\n                moduleResolve = resolve;\n              });\n\n            self.onmessage = ({ data: { id, command, data } }) => {\n              let messagePromise = modulePromise,\n                messagePayload = { id },\n                transferList;\n\n              if (command === \"init\") {\n                Object.defineProperties(_Decoder, {\n                  WASMAudioDecoderCommon: { value: _WASMAudioDecoderCommon },\n                  EmscriptenWASM: { value: _EmscriptenWASM },\n                  module: { value: data.module },\n                  isWebWorker: { value: true },\n                });\n\n                decoder = new _Decoder(data.options);\n                moduleResolve();\n              } else if (command === \"free\") {\n                decoder.free();\n              } else if (command === \"ready\") {\n                messagePromise = messagePromise.then(() => decoder.ready);\n              } else if (command === \"reset\") {\n                messagePromise = messagePromise.then(() => decoder.reset());\n              } else {\n                // \"decode\":\n                // \"decodeFrame\":\n                // \"decodeFrames\":\n                Object.assign(\n                  messagePayload,\n                  decoder[command](\n                    // detach buffers\n                    Array.isArray(data)\n                      ? data.map((data) => new Uint8Array(data))\n                      : new Uint8Array(data),\n                  ),\n                );\n                // The \"transferList\" parameter transfers ownership of channel data to main thread,\n                // which avoids copying memory.\n                transferList = messagePayload.channelData\n                  ? messagePayload.channelData.map((channel) => channel.buffer)\n                  : [];\n              }\n\n              messagePromise.then(() =>\n                self.postMessage(messagePayload, transferList),\n              );\n            };\n          }).toString()})(${Decoder}, ${WASMAudioDecoderCommon}, ${EmscriptenWASM})`;\n\n      try {\n        isNode = typeof process.versions.node !== \"undefined\";\n      } catch {}\n\n      source = isNode\n        ? `data:${type};base64,${Buffer.from(webworkerSourceCode).toString(\n            \"base64\",\n          )}`\n        : URL.createObjectURL(new Blob([webworkerSourceCode], { type }));\n\n      WASMAudioDecoderCommon.modules.set(Decoder, source);\n    }\n\n    super(source, { name });\n\n    this._id = Number.MIN_SAFE_INTEGER;\n    this._enqueuedOperations = new Map();\n\n    this.onmessage = ({ data }) => {\n      const { id, ...rest } = data;\n      this._enqueuedOperations.get(id)(rest);\n      this._enqueuedOperations.delete(id);\n    };\n\n    new EmscriptenWASM(WASMAudioDecoderCommon).getModule().then((module) => {\n      this.postToDecoder(\"init\", { module, options });\n    });\n  }\n\n  async postToDecoder(command, data) {\n    return new Promise((resolve) => {\n      this.postMessage({\n        command,\n        id: this._id,\n        data,\n      });\n\n      this._enqueuedOperations.set(this._id++, resolve);\n    });\n  }\n\n  get ready() {\n    return this.postToDecoder(\"ready\");\n  }\n\n  async free() {\n    await this.postToDecoder(\"free\").finally(() => {\n      this.terminate();\n    });\n  }\n\n  async reset() {\n    await this.postToDecoder(\"reset\");\n  }\n}\n","const t=(t,n=4294967295,e=79764919)=>{const r=new Int32Array(256);let o,s,i,c=n;for(o=0;o<256;o++){for(i=o<<24,s=8;s>0;--s)i=2147483648&i?i<<1^e:i<<1;r[o]=i}for(o=0;o<t.length;o++)c=c<<8^r[255&(c>>24^t[o])];return c},n=t=>{const n=[];for(const e of t){let t=(e+42)%256;0===t||10===t||13===t||61===t?n.push(\"=\"+String.fromCharCode((t+64)%256)):n.push(String.fromCharCode(t))}return n.join(\"\")},e=(n,e=t)=>{const r=t=>new Uint8Array(t.length/2).map(((n,e)=>parseInt(t.substring(2*e,2*(e+1)),16))),o=t=>r(t)[0],s=new Map;[,8364,,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,,381,,,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,,382,376].forEach(((t,n)=>s.set(t,n)));const i=new Uint8Array(n.length);let c,a,l,f=!1,g=0,h=42,p=n.length>13&&\"dynEncode\"===n.substring(0,9),u=0;p&&(u=11,a=o(n.substring(9,u)),a<=1&&(u+=2,h=o(n.substring(11,u))),1===a&&(u+=8,l=(t=>new DataView(r(t).buffer).getInt32(0,!0))(n.substring(13,u))));const d=256-h;for(let t=u;t<n.length;t++)if(c=n.charCodeAt(t),61!==c||f){if(92===c&&t<n.length-5&&p){const e=n.charCodeAt(t+1);117!==e&&85!==e||(c=parseInt(n.substring(t+2,t+6),16),t+=5)}if(c>255){const t=s.get(c);t&&(c=t+127)}f&&(f=!1,c-=64),i[g++]=c<h&&c>0?c+d:c-h}else f=!0;const m=i.subarray(0,g);if(p&&1===a){const t=e(m);if(t!==l){const n=\"Decode failed crc32 validation\";throw console.error(\"`simple-yenc`\\n\",n+\"\\n\",\"Expected: \"+l+\"; Got: \"+t+\"\\n\",\"Visit https://github.com/eshaz/simple-yenc for more information\"),Error(n)}}return m},r=(n,e='\"',r=t,o)=>{const s=(t,n)=>(t%n+n)%n,i=(t,n)=>n.push(String.fromCharCode(61,(t+64)%256)),c=t=>t.map((t=>t.toString(16).padStart(2,\"0\")));let a,l,f=[],g=1/0,h=Array(256).fill(0);if('\"'===e?(l=[0,8,9,10,11,12,13,34,92,61],a=t=>0===t||8===t||9===t||10===t||11===t||12===t||13===t||34===t||92===t||61===t):\"'\"===e?(l=[0,8,9,10,11,12,13,39,92,61],a=t=>0===t||8===t||9===t||10===t||11===t||12===t||13===t||39===t||92===t||61===t):\"`\"===e&&(l=[13,61,96],f=[7,205,231],a=(t,n)=>13===t||36===t&&123===n||61===t||92===t&&(85===n||117===n)||96===t),void 0===o){o=0;for(let t=0;t<n.length;t++){const e=0|n[t];h[e]++;for(let r=0;r<f.length;r++){const o=f[r];s(e-n[t+1]|0,256)===o&&h[e]++}}for(let t=0;t<256;t++){let n=0;for(let e=0;e<l.length;e++)n+=h[s(l[e]-t,256)];n<g&&(g=n,o=t)}}const p=[\"dynEncode\",\"01\",c([o]),...c((t=>{const n=new Uint8Array(4);return new DataView(n.buffer).setInt32(0,t,!0),[...n]})(r(n)))];for(let t=0;t<n.length;t++){const e=(n[t]+o)%256;a(e,(n[t+1]+o)%256)?i(e,p):p.push(String.fromCharCode(e))}return\"\\\\\"===p[p.length-1]&&(p.pop(),i(92,p)),p.join(\"\")},o=t=>t.replace(/[\\\\]/g,\"\\\\\\\\\").replace(/[`]/g,\"\\\\`\").replace(/\\${/g,\"\\\\${\");export{t as crc32,e as decode,r as dynamicEncode,n as encode,o as stringify};\n","import { decode } from \"simple-yenc\";\n\nexport default function WASMAudioDecoderCommon() {\n  // setup static methods\n  const uint8Array = Uint8Array;\n  const float32Array = Float32Array;\n\n  if (!WASMAudioDecoderCommon.modules) {\n    Object.defineProperties(WASMAudioDecoderCommon, {\n      modules: {\n        value: new WeakMap(),\n      },\n\n      setModule: {\n        value(Ref, module) {\n          WASMAudioDecoderCommon.modules.set(Ref, Promise.resolve(module));\n        },\n      },\n\n      getModule: {\n        value(Ref, wasmString) {\n          let module = WASMAudioDecoderCommon.modules.get(Ref);\n\n          if (!module) {\n            if (!wasmString) {\n              wasmString = Ref.wasm;\n              module = WASMAudioDecoderCommon.inflateDynEncodeString(\n                wasmString,\n              ).then((data) => WebAssembly.compile(data));\n            } else {\n              module = WebAssembly.compile(decode(wasmString));\n            }\n\n            WASMAudioDecoderCommon.modules.set(Ref, module);\n          }\n\n          return module;\n        },\n      },\n\n      concatFloat32: {\n        value(buffers, length) {\n          let ret = new float32Array(length),\n            i = 0,\n            offset = 0;\n\n          while (i < buffers.length) {\n            ret.set(buffers[i], offset);\n            offset += buffers[i++].length;\n          }\n\n          return ret;\n        },\n      },\n\n      getDecodedAudio: {\n        value: (errors, channelData, samplesDecoded, sampleRate, bitDepth) => ({\n          errors,\n          channelData,\n          samplesDecoded,\n          sampleRate,\n          bitDepth,\n        }),\n      },\n\n      getDecodedAudioMultiChannel: {\n        value(\n          errors,\n          input,\n          channelsDecoded,\n          samplesDecoded,\n          sampleRate,\n          bitDepth,\n        ) {\n          let channelData = [],\n            i,\n            j;\n\n          for (i = 0; i < channelsDecoded; i++) {\n            const channel = [];\n            for (j = 0; j < input.length; ) channel.push(input[j++][i] || []);\n            channelData.push(\n              WASMAudioDecoderCommon.concatFloat32(channel, samplesDecoded),\n            );\n          }\n\n          return WASMAudioDecoderCommon.getDecodedAudio(\n            errors,\n            channelData,\n            samplesDecoded,\n            sampleRate,\n            bitDepth,\n          );\n        },\n      },\n\n      /*\n       ******************\n       * Compression Code\n       ******************\n       */\n\n      inflateDynEncodeString: {\n        value(source) {\n          source = decode(source);\n\n          return new Promise((resolve) => {\n            // prettier-ignore\n            const puffString = String.raw`dynEncode012804c7886d()((()>+*§§)§,§§§§)§+§§§)§+.-()(*)-+)(.7*§)i¸¸,3§(i¸¸,3/G+.¡*(,(,3+)2å:-),§H(P*DI*H(P*@I++hH)H*r,hH(H(P*<J,i)^*<H,H(P*4U((I-H(H*i0J,^*DH+H-H*I+H,I*4)33H(H*H)^*DH(H+H)^*@H+i§H)i§3æ*).§K(iHI/+§H,iHn,§H+i(H+i(rCJ0I,H*I-+hH,,hH(H-V)(i)J.H.W)(i)c)(H,i)I,H-i*I-4)33i(I.*hH(V)(H+n5(H(i*I-i(I,i)I.+hH,i*J+iHn,hi(I-i*I,+hH,H/H-c)(H,iFn,hi(I,+hH,H0n5-H*V)(J(,hH/H(i)J(H(V)(J(i)c)(H)H(i)H,c)(3H*i*I*H,i)I,4(3(-H(H,W)(H-I-H,i*I,4)3(3(3H,H-I1H+I,H.i)H1V)(J.i(v5(33H.-H(H,i(c)(H,i*I,4)333)-§i*I*+§H*iHn,hi73H,H(i)8(H+J+H)P*(H*V)(J-r,§H)P*,H.i)H+H,i)V)(-H*i*I*H+i)I+H-H.I.H,H-i)I,4)333Ã+)-§iø7i(^*(iü7I,*h+hH+iDn,h*hilI+i)I,+hH+,hH+iô7H,c)(i)H+i´8W)(H,I,H+i*I+4)-+hH(H)8*J-i(p5.*h*h*hH-i')u,hH(P*(J+,hH(P*0J,H(P*,n50H+H,H-b((3H(P*0i)I.4)3H-i¨*n5*H-iÅ*s,hi73H-i)J+V)&+I,H(H+V)æ,8(I.H(H*8*J-i(p51H-i)J+i¸7V)(H(H+iø7V)(8(J/H(P*0J+s,hi73H+H,H.J,I.H(P*(m5(H.H(P*,s5.+hH,m5*H(P*(J.H+H.H+H/U((b((H(H(P*0i)J+^*0H,i)I,4(3(3H(H.^*03H-i¨*o5)33i(73(3(3-H,H+i)c)(H,i*I,H+i)I+4)33i)I-3H-3!2)0§K(i\u00182J,L(H,H(^*(H,H*^*4H,i(^*0H,i(^*DH,j(_*<H,H)P*(^*,H,H+P*(^*8*h*h+hH,i)8(I3i§I**h*h*h*h*h*h*hH,i*8(6+(),03H,j(_*@i*I-H,P*<J.i,J(H,P*8J/s50H,H.i+J0^*<i¦I*H.H,P*4J1J.U(*H.U((J2i')o5/H.U()I.H,H(^*<H0H1U((H.i0J.i§i0i')o5/H/H.H2J*H(J.q50H,P*0J/H*I-H,P*(J0,hH,P*,H-q,hi)I-423+hH*m5+H/H0H(H1U((b((H/i)I/H(i)I(H*i)I*4(3(3H,H.^*<H,H-^*04*3iØ1U((5+i(I(i¨7i\b1^*(i$6iè1^*(i°7iè6^*(i¬7iÈ6^*(+hH(iÈ*n,hiÈ*I(+hH(i¨,n,hi¨,I(+hH(iØ,n,hiØ,I(+hH(iè,o,hH,i\u0018-H(i0c)(H(i*I(4)33iè1i\b1H,i\u0018-iÈ*8)Bi(I(+hH(ido,hH,i\u0018-H(i-c)(H(i*I(4)33iÈ6iè6H,i\u0018-iF8)BiØ1i)b((41-H,i\u0018-H(i/c)(H(i*I(4)3(3(-H,i\u0018-H(i1c)(H(i*I(4)3(3(-H,i\u0018-H(i0c)(H(i*I(4)3(3(3H,H/^*0H,H(^*<3i(I*4*3H,H,i¸)^*TH,H,iø-^*PH,H,iX^*LH,H,i\u0018(^*HH,i-8(I(H,i-8(I-i¥I*H,i,8(I.H(iErH-iEr5)H(i©*I1H-i)I0i(i;H.i,J(i(H(i(rCJ(J*H*i;sCI*i¨1I-H(I/+hH/,hH,i\u0018-H-V)(i)H,i+8(c)(H/i)I/H-i*I-H*i)I*4)-H(i)i¨1I/+hH(H*o,hH,i\u0018-H/V)(i)i(c)(H/i*I/H(i)I(4)33i¤I*H,iø-H,i¸)H,i\u0018-i;8)5+H0H1I2i(I-+hH-H2p,hH,H,iP8*J*i(p5-H*i7u,hH,i\u0018-H-i)H*c)(H-i)I-4*3i(I/i+I.i+I(*h*h*hH*i86*(*)3H-m,hi£I*403H-i)H,W)\u0016-I/i*I(4)3i3I.i/I(3H2H,H(8(H.J(H-J.p,hi¢I*4.3H,i\u0018-H-i)I*+hH(,hH*H/c)(H*i*I*H(i)I(4)-H.I-4+3(3(33H,W)\u00181m,hiI*4,3H,iø-H,i¸)H,i\u0018-H18)J(,hi¡I*H(i(p5,H1H,V)ú-H,V)ø-o5,3H,i\u0018(H,iXH,i\u0018-H1i)H08)J(,hi I*H(i(p5,H0H,V)H,V)o5,3H,H,iPH,iH8+I*4+3(3(3H,i$6i¬78+I*3H*H3m5(3i)I-H*i(r5)3H)H,P*0^*(H+H,P*<^*(H*I-3H,i\u00182L(H-33Á)+(i¨03b+(,(-(.(/(0(1(2(3(5(7(9(;(?(C(G(K(S([(c(k({(((«(Ë(ë(\u000b(*)(iø03O)()()()(*(*(*(*(+(+(+(+(,(,(,(,(-(-(-(-(i¨13M8(9(:(((0(/(1(.(2(-(3(,(4(+(5(*(6()(7(T7*S7US0U `;\n\n            WASMAudioDecoderCommon.getModule(WASMAudioDecoderCommon, puffString)\n              .then((wasm) => WebAssembly.instantiate(wasm, {}))\n              .then(({ exports }) => {\n                // required for minifiers that mangle the __heap_base property\n                const instanceExports = new Map(Object.entries(exports));\n\n                const puff = instanceExports.get(\"puff\");\n                const memory = instanceExports.get(\"memory\")[\"buffer\"];\n                const dataArray = new uint8Array(memory);\n                const heapView = new DataView(memory);\n\n                let heapPos = instanceExports.get(\"__heap_base\");\n\n                // source length\n                const sourceLength = source.length;\n                const sourceLengthPtr = heapPos;\n                heapPos += 4;\n                heapView.setInt32(sourceLengthPtr, sourceLength, true);\n\n                // source data\n                const sourcePtr = heapPos;\n                heapPos += sourceLength;\n                dataArray.set(source, sourcePtr);\n\n                // destination length\n                const destLengthPtr = heapPos;\n                heapPos += 4;\n                heapView.setInt32(\n                  destLengthPtr,\n                  dataArray.byteLength - heapPos,\n                  true,\n                );\n\n                // destination data fills in the rest of the heap\n                puff(heapPos, destLengthPtr, sourcePtr, sourceLengthPtr);\n\n                resolve(\n                  dataArray.slice(\n                    heapPos,\n                    heapPos + heapView.getInt32(destLengthPtr, true),\n                  ),\n                );\n              });\n          });\n        },\n      },\n    });\n  }\n\n  Object.defineProperty(this, \"wasm\", {\n    enumerable: true,\n    get: () => this._wasm,\n  });\n\n  this.getOutputChannels = (outputData, channelsDecoded, samplesDecoded) => {\n    let output = [],\n      i = 0;\n\n    while (i < channelsDecoded)\n      output.push(\n        outputData.slice(\n          i * samplesDecoded,\n          i++ * samplesDecoded + samplesDecoded,\n        ),\n      );\n\n    return output;\n  };\n\n  this.allocateTypedArray = (len, TypedArray, setPointer = true) => {\n    const ptr = this._wasm.malloc(TypedArray.BYTES_PER_ELEMENT * len);\n    if (setPointer) this._pointers.add(ptr);\n\n    return {\n      ptr: ptr,\n      len: len,\n      buf: new TypedArray(this._wasm.HEAP, ptr, len),\n    };\n  };\n\n  this.free = () => {\n    this._pointers.forEach((ptr) => {\n      this._wasm.free(ptr);\n    });\n    this._pointers.clear();\n  };\n\n  this.codeToString = (ptr) => {\n    const characters = [],\n      heap = new Uint8Array(this._wasm.HEAP);\n    for (let character = heap[ptr]; character !== 0; character = heap[++ptr])\n      characters.push(character);\n\n    return String.fromCharCode.apply(null, characters);\n  };\n\n  this.addError = (\n    errors,\n    message,\n    frameLength,\n    frameNumber,\n    inputBytes,\n    outputSamples,\n  ) => {\n    errors.push({\n      message: message,\n      frameLength: frameLength,\n      frameNumber: frameNumber,\n      inputBytes: inputBytes,\n      outputSamples: outputSamples,\n    });\n  };\n\n  this.instantiate = (_EmscriptenWASM, _module) => {\n    if (_module) WASMAudioDecoderCommon.setModule(_EmscriptenWASM, _module);\n    this._wasm = new _EmscriptenWASM(WASMAudioDecoderCommon).instantiate();\n    this._pointers = new Set();\n\n    return this._wasm.ready.then(() => this);\n  };\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"ogg-opus-decoder.\" + \"opus-ml\" + \".min.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = this[\"webpackChunkogg_opus_decoder\"] = this[\"webpackChunkogg_opus_decoder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* **************************************************\n * This file is auto-generated during the build process.\n * Any edits to this file will be overwritten.\n ****************************************************/\n\nexport default function EmscriptenWASM(WASMAudioDecoderCommon) {\n// include: shell_minimal.js\nvar Module = Module;\n\n// Override this function in a --pre-js file to get a signal for when\n// compilation is ready. In that callback, call the function run() to start\n// the program.\nfunction ready() {}\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// include: src/opus-decoder/src/emscripten-pre.js\nModule = {};\n\n// end include: src/opus-decoder/src/emscripten-pre.js\n// end include: shell_minimal.js\n// include: preamble_minimal.js\n/** @param {string|number=} what */ function abort(what) {\n  throw what;\n}\n\nvar HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64, HEAP64, HEAPU64, wasmMemory;\n\n// include: runtime_shared.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  HEAP8 = new Int8Array(b);\n  HEAP16 = new Int16Array(b);\n  HEAPU8 = new Uint8Array(b);\n  HEAPU16 = new Uint16Array(b);\n  HEAP32 = new Int32Array(b);\n  HEAPU32 = new Uint32Array(b);\n  HEAPF32 = new Float32Array(b);\n  HEAPF64 = new Float64Array(b);\n  HEAP64 = new BigInt64Array(b);\n  HEAPU64 = new BigUint64Array(b);\n}\n\n// end include: runtime_shared.js\n// end include: preamble_minimal.js\n// Begin JS library code\n/** @noinline */ var base64Decode = b64 => {\n  var b1, b2, i = 0, j = 0, bLength = b64.length;\n  var output = new Uint8Array((bLength * 3 >> 2) - (b64[bLength - 2] == \"=\") - (b64[bLength - 1] == \"=\"));\n  for (;i < bLength; i += 4, j += 3) {\n    b1 = base64ReverseLookup[b64.charCodeAt(i + 1)];\n    b2 = base64ReverseLookup[b64.charCodeAt(i + 2)];\n    output[j] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;\n    output[j + 1] = b1 << 4 | b2 >> 2;\n    output[j + 2] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i + 3)];\n  }\n  return output;\n};\n\nvar __abort_js = () => abort(\"\");\n\nvar __emscripten_runtime_keepalive_clear = () => {};\n\nvar timers = {};\n\nvar callUserCallback = func => func();\n\nvar _emscripten_get_now = () => performance.now();\n\nvar __setitimer_js = (which, timeout_ms) => {\n  // First, clear any existing timer.\n  if (timers[which]) {\n    clearTimeout(timers[which].id);\n    delete timers[which];\n  }\n  // A timeout of zero simply cancels the current timeout so we have nothing\n  // more to do.\n  if (!timeout_ms) return 0;\n  var id = setTimeout(() => {\n    delete timers[which];\n    callUserCallback(() => __emscripten_timeout(which, _emscripten_get_now()));\n  }, timeout_ms);\n  timers[which] = {\n    id,\n    timeout_ms\n  };\n  return 0;\n};\n\nvar _emscripten_math_cos = Math.cos;\n\nvar _emscripten_resize_heap = requestedSize => {\n  var oldSize = HEAPU8.length;\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n  requestedSize >>>= 0;\n  return false;\n};\n\nvar _proc_exit = code => {\n  throw `exit(${code})`;\n};\n\n// Precreate a reverse lookup table from chars\n// \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" back to\n// bytes to make decoding fast.\nfor (var base64ReverseLookup = new Uint8Array(123), i = 25; i >= 0; --i) {\n  base64ReverseLookup[48 + i] = 52 + i;\n  // '0-9'\n  base64ReverseLookup[65 + i] = i;\n  // 'A-Z'\n  base64ReverseLookup[97 + i] = 26 + i;\n}\n\nbase64ReverseLookup[43] = 62;\n\n// '+'\nbase64ReverseLookup[47] = 63;\n\nvar wasmImports = {\n  /** @export */ \"d\": __abort_js,\n  /** @export */ \"c\": __emscripten_runtime_keepalive_clear,\n  /** @export */ \"e\": __setitimer_js,\n  /** @export */ \"a\": _emscripten_math_cos,\n  /** @export */ \"f\": _emscripten_resize_heap,\n  /** @export */ \"b\": _proc_exit\n};\n\nfunction assignWasmExports(wasmExports) {\n  _opus_frame_decoder_create = wasmExports[\"i\"];\n  _malloc = wasmExports[\"j\"];\n  _opus_frame_decode_float_deinterleaved = wasmExports[\"k\"];\n  _opus_frame_decoder_destroy = wasmExports[\"l\"];\n  _free = wasmExports[\"m\"];\n  __emscripten_timeout = wasmExports[\"o\"];\n}\n\nvar _opus_frame_decoder_create, _malloc, _opus_frame_decode_float_deinterleaved, _opus_frame_decoder_destroy, _free, __emscripten_timeout;\n\n// include: postamble_minimal.js\n// === Auto-generated postamble setup entry stuff ===\nfunction initRuntime(wasmExports) {\n  // No ATINITS hooks\n  wasmExports[\"h\"]();\n}\n\n// Initialize wasm (asynchronous)\nif (!EmscriptenWASM.wasm) Object.defineProperty(EmscriptenWASM, \"wasm\", {get: () => String.raw`dynEncode013bc58350c1Éð|@|O*X\u0002Ø3R}@³ùÆöÁ\u0016¤½\u0002Cu­ÙFõ\u0012¶=}\u001bVònÐ¾ÑX³W\u0005\u000e~aGÕ5?\u000bQ= ÚÎN= W\f\u000feÇ¸ß3í=MÛßÇ\u0002¹HÜjLvïêÀ:\u0002m°¹30>\u0002ÉX!¿b\u000býOýn\n®\u0007Fj{øú¢ç\u001c=}(ÝñÜn moÇ°¥àeò?È×µh\n\u0011ØW¨;Ñ aØ\u0005X­æU{¤øàÖÕÀì·ÝÌ­í\u0012ø±tâ\u0017Ôø\u0016eVO÷\u001bPÉ´È~\u0019\u001bÃòs\u001bX1´ÊPyK·ÿKZçµ WÑ¡¡_ dÍí\u0006+]Õ\u0017\u0017~%Yïþîñ \u0004\u001e\u0014¾Ú\u0002·p[òß \u0006¶ó÷y\u001a\u000blhnn\u0013\u0006\u000f«\u0007²\u0006\u0007\u0007ù*¶Ìéñ\u0002®ï(éÇ\u0003ÃRÊ\u001aÆRÌ-¬ÐoÒ\u001a\u0002Ê2z+ä$:ÄsxÏ#Ït!MlBq§%Jè\t®Ä\u00003ó°á¸eÅ_Ö=}i\u0018TÐÍm\u0014o\u0002\u000bðbMpl\u0010\u001e¬EP°e,¼Æju®ix>#}NgdÿÇÄbç9\u001cW\u0006ZÇ·n\\Öá1ÚÈt.ú6bì:û\fào¯ú4\u001fÏø  ü­zå¯#ÆkM#úÿ9\u0013ë:üÒÝ\u0004ëÚà¡d%0ÒekÓ×mðÆ¸\u0015½ùÿâ¿Ò9\tÄgªÕÂ%ü¸»\tHÁM#Âq\u0012²~èn¯\f\u0011Ûa_9j= ùÿR\u001dèæÊó%M\n¨,Àæq%98\u0013a9%\u0000T2)\u0006´z«9gsÒ\u0003Ö!Zh\u0018RõRÛyÕ²\u0015Ý=M<Öcº\t»~VFÕ\u000fÖx:þrÞ\u0003ðn£x\u0016¦8.è$K9\u0004\u0011þÂ¹ú\u0016\u0016SnÍ3¦v\u0000üu\u001eºsÕñ=}1=M5ZÊ¦C\u000e\u0015ÿ\u0002SÉ2×qÒ\u0001«\u0018\u0003\u0001«\u0018Sa»ù±(\u0015¢º]ÀmÍh÷\u0000/¥3\u001a@sns2\u000b\t%7ù-Q|\u0019nÏoöjYÛ]}à2{EBêÎ6>ÁbÄü\u0017\ná,\t[DAÐuùjeND\u000bEëÔà\u0005Zºlq»\u0000J\f\u000f/Ë²á\u0014jºßCÃÝ1\u000b\u0018b)\u001døtN7Ê=}gÕ®\u0005òÍá§8²\u0000kD\b\u0012ïû¤åÒÅóºc=M²\u0016= aË.ooèf.QZj@bñ>qV©?æ\u0016\u000bxñR\f\u0014ô|_xw\u000bê\f¸÷È¡\u0004\u0002ö\"C¶2\u0017[¼ï¯¸©KmäºúZ¡\u001c%^°bóþ»-¼Ú¥ZI(pþµS%øµã*Ò±8f:t¡éþõz¶<Äfñ*öeP8AÓ¾\u001a/g×\\Ð¡\u001a1Ï\"= ¤ûGsW_¹ÔÈX\tTãàuTí\u0014\u0006EK\u0015PüÝ¸#åB¢ñ\u001b?:µßÄ¬îFI8\u001cQY;X ¶í¦k{|¦éíà/fªi>´EÈ\u0016oK= 6¼lÖr²ÿ*YÇvÄ­dà\u001aG{Ö,Gz½.gzSdïV%z¥8¶²bO¡2\\nO\u001f\u000eßV¡S2KçK´UûuÛã~f¾K)ÊÖ#´?#»ÅYXOø\u0007ò TCB}LUk,\u000ekÍ\b)]\u0015íiE^ÿyW)Ê»³= ô\u001d\u00101_½úÌÞÊçýS¡\n»£jÆkh\fÐ1\u0010G\u0010\u0015\u0010<è\u0018^àÙç?æF¦Ç/\u001bã«Eý6ZI¹tl.\u0015\u0003aëü\u001bl|!&:\u0014\u0012\u0014MÓå?N@øËÅf 6cì$w,3~17\u001cF=M\u001að¸³°aõu\\9æ\u0011k\t\u0000I\u001d&>V®Æ/\u0007\bØa´ %¶¢],ÿ:±wäé\u0002¬áS¥FK±U¢±ÓPóß&\u0003®e\u0014= ÍÍÜ¯\u000eÏ×À@= Ø#\u0007Ðk[NCó÷ÀÄ\u001fÞ\u001dGQRcnI}\u0011HGñ\u0013\\ç­= ö\u0010è^áygyDÔa©D¦'ß£Mß£P\u0011I¯à¨=}\u001e=MUÀ¸çy 9W½L\bí\u0006U·ôzwzÃsÝZòÓ\u00023F¸Áè£\u0016â\u001eÑn\u0006\u000fÕ%Í\u0006¥ká®=M×GTÀÊøf\u001bëM-UF;u\u0011åÙ#X#\nn©ï\bÖDÅñ¸q ,Ô¹Ð¸;h¿å\u0013\u000fñ#µNÓ÷¸v} *Îª_= ãýØb6N=M\u0004H§'®I\u0014u¯7\u00048ªÊÝ#42\u0014p´[/¿E\u0007= =MxåÄV§Ý\u001cm©3\u0014\u0013\u0011?\u0015;bô9fb\u0019÷\u0006Ð'¨ÈIS7ñ\f>¬IÍÜK tçÖJ\t7û6ß¥A/|\u0010B\u001cÏ\u0019=Mõ\u0003ªw¿T\u001e¼91ó\u0000íÒèÔ_6\b»\u0005\u0016Âõ\u001c\u0017ªvg2ý\u0014¡õ÷Ò=}\u0005Å3ýXm²¬bÛ}U¬0¸Ük~e\naY¬ÈÛµ¨¢0Nñ\u001b¬t³VÉhÖYvx§\u001a\"Ç5\\\u0001N'ªÂ£æKlÂ\u0010?þ{m¼ôê±ñÔ|Lm¬t\u0007_2%¤E}\u0018Ù>ÎFûalSXø²tRªÀ8\f\u000e¥£Å|ÖW(Ù)\b\\3Úwåì:\u001foíý±Y4ì©géµC³¨Q\\ÍõM\u000fÕ\u0001\n!J½6ë:Ëg\u0000ípoÒ=}I=}ëS¯¸\u001d\u0002F\u0007=}ÙT\u0016__U¾&\\íÛ ¼Âkg#ú\fÚ¡ÀsÏ\u001d\u000eÔT\u0003\u0002µ³ÑËßxNÉæGç^4Ñ¡%.¦U±O[ø¼4\u0000pÍº\u0010\u00167ÜâªcÔ¦¢:o\u0015u¹8Ìzî\u0006Xf¬56DC´Þ]Ó!=MOÀÕâGÖÓ«0¤¿Å2ú\néÎ·\u0002NóÚÄr_Z)\u00036y&2^F|#²ì3\u00156eòa¦rc\u001fLõ5\u0001Hö<r¼J!í\u0001¼\u001d©D\u000føÓ@\u0015¨åPó\u0010f\u001f\u0000Ñ£®·\u001a§hQ\u000e\u001a®õ\u000b½c±M¥W,ÝàÜ\u0017««¿¢Vmù|\tË·wj$témè±\u0015°&í9yòµfæuC:E@[RX\\.qéuDýé\u0015(iao»]\u001cW5?I!z®¡±âàkËý¼LóFµUM¨cEu\u001e¼üÃFÔ\u0016ì\u0011<@y´Üø\u0016Æ#y«µà\u000bdMå@ÛXüû¼á¾ù[\u0017CHº\u0003À[4ñ5\u0002z:\u0005ÓàV\u0017\u001d[B\u0016Ò/I!ÕÓÂ\u0007Xj\u0003«ýH&o³©sF\u0010Í&-ö«\u00117d\\X#>¦yñÜ\u0015ÃMG\u0003c~#!\u0010T\füt? ªÌ\u0007·«á¨\u0019É»ÕBms¸Û®0úBjÛ(^ÓÅ®¤\u0006ÛF¹Ð\u0011ma)'¨ë(²ÄÞÍm\u0003\u0005²¦á\b¡Bá|%«L¹a\\×Ub= -f\u0011\u0007®¢Ü¢«GÌSÔxÖXc\u0006ÃÈÄh\u0017½4e#\"\u0014';P\t>Rõo;%t\u0000ÐC$g%Ä>7\b0* *©cX\u000b!C7yô\u0007îËtO'j?ó\u000e\u0016íÛ\u0002µÁûH= Iró\u0003\u001dÛ= kòw\u0001iJ]\u000f]þßY÷{mûpLÿÊe\u0005L\u0005A¾À <½å\u0004i­WÎ\u0016?o©t¡caâB\u001f¼iBüÛÚ¯:_îOJ7\"\u0017\\¥^­EPHQ¼Cõ\u0010 *{ÎÁI\u0015ÅÅ$\u0017ÉVÇbo]XÆs)^H²®wój\u0002Ô\u000fÎE6OÙÿsR\u0019Í¨Eù\u001b\u001aï¼/²OÉQÿmå«\u0017õØÆ\u0010Za;Ä{ <}¸°Ró=MÖ²ýÜz´|´pµ\u0003Ûá!cï\fÆ,@zÃT«\u001f¶\u001dd\f³åoÙ-KyÁÓ4gß-²ÂxÊØÏ\\@q&}eÔÂè\\ßÍT1Ï\\\u0000kì÷Ú\u0018wé\\ÀÄ~<à¢e\u0018«4E¡\u0011/«Ä­\u0012\baõu½\u0012=}l°ÃNë/J­å\u0012=}ÿ®\u0005!.N8Ær)H\u0014Ö43¡C3Ôz/N\f\u000f:\nÚ7!Z1Þqö)Mî\u0007\u0012\u0010½%\"O7^+TÉêa\u000eF\u00008øc2ú%ù3}Ô²dU\u0011(³\u0006ÍZÅ±£y¤a\u0007f¿Ï\u0016\u000e][Hþs\u0014\u0015·Ù$EpFæt\u00054¦$Vú\ní!h\u0000ãV53\u0005øKéâ=}Nå22Úú\"A\bÃ5£áª\u00106WÕæYôÈ^ AÜÍ)ýYÌúë¾a0= ºvé\u001bè\u0018:7Mô=MWsE²£\u0006²ÇL¿òÞ²\u000bÜ³J+\u0002= 5æ+,>\n¸M÷7jè;/_ý7ãzÈ)D\u001c÷\u001c·Ç4*È#\u0001Ú¹\"ó­!z\u00000\tº®µZ*\u0005ìx®\u0005\nR>sÚýP7:\u0003Â¯\u0005ZZ=M\bÍ\u000fW²Dê6Ó^Nq= f\u001aÍbN¿VþÒª£;û<cVýîåª6§7dËÃ-²us¶\u0007Ò¹%\u001a·iÄs4òf N(á¨|õ-\u001eyZ$E)¹ï5¶Wí\u0014]\u0012Q\\·1U9:\u001f[-zQ¼\u0013É7÷\u0011/þiÉõ\t¿«Ob)\u001dIµñ0\nlÁNpÊ¦Ë-+Kfø»\ncù@®W¡Y,\u0005îuC6ZK¤éÏ²µI=}= óáÔÁ4´-õfÔm\u0003õVÛvFÞ\u0000Àç\u000f*=}éåú6î®£³\u000fúÄßy'GD1dÕ±È\"x\u001a^\u0004ù1)DÚ'ö\\©^6§ö_³îªZ|¾S\u0006= @$^*-\u0004\u000f 'ªÈÄb7ÎÜt\u0006\u001a7Z4\u001c©ö§É\u0016\u0001UhY{ÓÚh£\t±T\u001eÞÁÉýÒR\u001f7Ë\u000e\u000b¡t¨<#Ä¨\u001d¡@EK7\u000eÏb3\u0016Ur\u0006i)åw\u000b=}ø»n#\u0011MMuåÛÄ\t\u0018 ¼ü÷´Ò\u000e\u001euâÆ8¯¬»R6I\u001d\b¡WB\u0005ò\u0013\u0012îtnP=Má-0óà¤ÕÆ+¯KæÛcâÑG½þÛÀFä7\"AT\u0010Máu\u0010+mø\u000b¼?Ó^Ê?Ts÷ÁR7ñ\u0001³!å\u0010ogã\t\u0013_\u0017ËR\u0019ª«J$¼­nÇ\th ýõgcíÿ·ÅºÊ§~Ì= @<Ûx¿a\u0006¥L\u001c¦ÃO·\u0014òi½ eûÎL~t\u001eÞ/\u0019\u0004'­=M$x@½tZÅYÖ&¼£]6o¹åÛÑvàMfgp£7Ç6ùßk\u0007Ø5i>\u00109àlÊ >Ð7w)ý;³(JKLª.z7\u001aðfê2jÐ\"\u0002£.S\bJ®.çòìV\\3(ÎÍ­Êt\"´»µ¾¸[\n¸8÷Ê+¶Aú\u000eCñ&\u0014ÿøH]÷\bhl\u0017y^Îàî\f®\u0004ðg\u0017å\u0010A\u00066íKÊ7Ò\u0013äGo¿:\u0018¥G[Åþ\b¡«a¶GÞ¾!â\n=MnB»ªÖ1ÔIZò2\u0015\u0002»Jk\u0019ë\u0006Æwùº\u0001Ãtª¯xÇ»\u0001×ut#jà:\u0015æîOÒ6P¿èrñË×ôm2¸ÓJ±*h«koâ}îµ»¯£F÷§÷\u001c¸#a\u0014®\u0014Å.ùÌ/³\u00163Ú9VÏ[³\u000722L[\u0010Ó,ö«W\f&$/UVq*\tfÐ;F°®/Ñ¦·q\u0018o:SCÚÉ¼ñ|¨íu0\b9\u000fé±|\u0011Þ'­ÏYÍ. 5Cm;Àúñ=MmW8ÒSM³¦ä\u001bH\u0010\u001fmsA^mÞ¢£Â©}oO21*ÒÃÊ\u000fFbäT~\b¿P'7ÑDØÖ\u001aW®äO{Z»\u0004\fA\u000bØ;\u0013t£82J\u0015b^:®ÇOß­v\u0014@r*\u0019o:×>\u0014·ûxGÌt/ë*\u001cF:7ÝÁw\u001ed¾º£D´\u0019{¢= ´¾3E\u0006K·<MÉ¿8ÂìiÔÁ°r6Ö!F{\u001d'H§Ü\ny¢\u0019rÍn(2RæQ{ Û»Ìg{¸\u0000G%~»¥QÜm$BË¡[Ú®j\u0003þXè59[ô\nâRAÁïywìüwrz)\u0014y\u0011hX#p\u001e¼èt!Â1\u0006~^\u000f h6kî\u000f^C\u00196}hpB{\u0011\u000e\u001a£Q5\u0006x¿Á\u0015o\u0012Ð= à £É<ó«\b¡ìè31ÜÌç±\u00193X~:ÚÂS~«3/÷\u0006\u00029ÚJ8Æ~\u0004\u0002­\u000f^\\¨ÕÀvÈØýd9zX|ÿ1¨\n= S^bÅ]É:×\u0002l\u0010\u0013÷EÜ1= ¦¼Ê\nT4ÙCé\u0019håìcÅ\u001e\u0013»èZ³}\u0010\u0017!©\u001cð:~^¯ãó*Mï8rÚm}6\u001eS3#\u000b\bùÊ(\u001a%òY\u0014ï¬\u001c%a¶¯N½\u001c\nïõ­î/Q\t½\u0001É}I£Û£þ×Í\u0014Ltä,QM\u0015ÊÚ0la;\u0015 {Z½¥{é¹3§£:N\u0016j´¸ÆbýÖÜ\u0018ÊÝizeµvýEärìY(£Î£Ô¾oþ39hn,\u001a9øÚ¯úõyä¿Ôb4q\nÏTÊ\u0003î·ÑÚQÆï+zy¥0ob;¢Àï­\u0007\u0002üÕçIòõ[\u0017I\"î\u0004Y°âÂp×AÕ\u001d\t\u0019\u0007# \u0013}\u0007êN92Ü\u0013'Ú=}Å®Õà¹Xg[9ÿÐ58¿Cke.ÓÏ\u0017#êzü=}\u0014Ò\bGk\u000fÌ%\u001bÆ\u0017\"èÏ^q±R3\n=}*@\u001aÅ@¹æÛi\u0000r·÷Â³¸{Ôd\u0005«WÈHÒ=M®Ôææ\u0016a!RqÄ×óÁá¯SÛ®?Ãë\u001fê ¨.ÃW\u0000§r+TSóÛ5_µ®cT8_WqPãtå!Wü= ºmµ¬È\nÒ+Kq¢¢ãgõ ËÁY\u000eb\u0013HG@¡\u001dyt]NÖ¥¼~0X+ûx85&\u0004Bù\u00132×Ûßoç¤A\u0002:$'áôÑÀ9º|:ª °­zï:\f­$Jo¯«Ë\u0010ÜÛ÷àSWîK5´ÁË\u0015$fÙÓÂ¨ÃÞ1£L .uïÇ-ê{Â¹/&êÖV\u001cÆcí[\u0016>£µ\u0014Ø¢ÅµûÈ{\b-VÊm_°S³ò\u000eÀmª\u001aQ©FlaÞñíÏW¬D©lÑñ)ðss½\u0011ÎÿVBt\tLªS+¬KB\\;ªå'þm\u001b\u0007d'=}ÈnÊ\u0018u\u001c&þÚ®4Ps±\u0005ô\u001b°ñZ÷¹(Ìýl\bÜ*M»\u000fN\u0000«Ïö:[Õ.lrP\u0014½0w¬=Mâ×\u0011\u0004sWíQx_ó?CA'\n\bZ\u0014W\u0010-\u0006òª\u001ai±´¥²ÊMZ§æ\u001fd\u000fÀZÐùõ«óZófÉÑü\u0004Ô\u0011è­\\rNÀóV6Á\u001a69f\u0011\u0016~6d\u0007OgD\t\u0016Ð¿\u001do>é#Y¾u?\u001cØÞØ-Ù±¶WEÂ\u0006\f¯=M\b^\bÏèbÈ½qÚäqj\u000br½ZmFïâjÊ4áÃ1\u0011\u001bXÒ93OÊ´Yöc\u0005Ûj¥[Èñ£\b\u0016\u000f@!9+ÿI\fübFu#PB©\nD\u0002Ñ\u0019ÌYíuÃàÓ+µ\"\u001a\u00108q1·ìÚ¸óTü-¤\u0010¯ïiõæ)êI÷ïÑýÙ¤£.Ð£\u001dÛ\tP\u001b¬A-|¸\u001aë\u0011u¥ätj \u000eì¬ÔåÔ8O¥\t§IØqÍB¨|D8xò)ºmÕCÚß\u001bÒ\u001ej&çþâ&}D#²\u0005 ½\u000eAf9«\u0013 Û\u001fÐÑ\u001aWï^À\bþ°w4\u001cÌ÷ÿäÅ¦ü-yÑïc®Tú÷5\u001cYQp'ùÆ×Íçj1\u0015vaî@;åQÃÀ\u0011~¶´õ|\u001d}ñ\u0011h×ébÔF\u00134\\BÂ\u0016C&\bÿé>S\u0002\u001dB0qç=}¤+«mÜp\u0010®¶-[j7ÈÁ­(\u001bbC´=}C\u0013Ñ¼\u0014±\u001d§\u0016\u000b\u0000=}Êx±µn!üÍ@je ¾Új\u0007¯q!R\u0019ó6×üv$2ÐCÿÞ2!ý^o\u0014äuÏtmQ\u0013»ý)ËgÏ_¦npËv\fõâ;þª\u0012«âÍ×;sbû\u000eûoD³auæ³e<=}ÿaS\u0011ªrýô:kûÜuü>YÃWa³'ÞF{À¼ì\u0000ragï\u0016ÞP-\u000fn£íñN¬X\u001c\u0005ª½\u0012\u0014Z43\u0005<yþ²]¡a®\u0004ã\bK[³'·\th~ÚW\u001f6\u0017xòv2ß:.\u0014Y¢v\u0010Ð|°3_+Æ×@8±+p e+©Æû\f\u0007|­Ã\\\u000f|.\tg\u0000è+âT%ç#0ÃêÛ|ò4Õ®ü= \u00136©Q?\u001aÐ¾ô\u0016=}Vnq\u001bæö«ø{ÕÝ­£y\"ërk\u001bÜn§ÛVK\u000bý¯\u0011«¼2Ìäí½÷\u000eÁ_9¸­O$6GÌljÜÁªYý»ï\u001c#ç[Þ&0¸5á# p\u001d*zÄÉ¦/¦\u0000ßõè{»\u0017ú-%Ç\u000b.¥\f\t×¾A?Ñ¥m0!{eõR,nÖ°\u0007 íe .Ë= \\pÈ\u0011Þ=}4½²N\\xÏnYÏÁÏ®»Ö½T¡Ðº.\u0006^¿\u001cèÝÛ\u0012.@¸u9¼pÖ\u0005Z\u001e¹\u0001ÞÐ\böxjC%fÚ\u0004\u000el1\t\u0012÷þ\b¬Ñ­\u0010\u0013qâ|Tí*mc~\u001b\n4:íd;8Å\"7Jî^\u0010óðP<ª4\fïî\u0003rØ¶\u0015gc\n\nm©°áÔ\u0000ßjf+áÁC\u0003®êA\u0004ª\u0003iO!Ðp8!1ÇÒë-Jö9Õp+mz¸K#\u001b\u0005ôxpGS øQ\u0018P@c1)Ó\t¢_·\u0015=}\u001cºøÁ9VÙ£\u0010ÞþôbF0C±ózHþ\u001f,\tÏÊ\u0019?d\u0007\u001fgºPÙ6\tìÒòÐMþz²ÓR½7d\u0004~t¾\u0003óÍw¼äN×3\u0002\u0005lVªk\t·6­O\u0019@*%1ð®ÐùãÍ¸\u001diæhÔ3é6åº¦\u0005ªÐN:A6xðéÝË \u001f=}¾\u0012\\&¿§\u001cß<\u0006Í=MS¼Ê¬ü8\u0014â÷/\u001aÞä:ô*4Äê¯b(çi@ñ¼(|\u0001«¥M$.\u000f'i3ÖL>\\#qkºýþé;3éy\u000fM)\"N\u0016\\>'?9.Û6c7s\u0018íÒÛ)°tU9QA5zòfvèð.+þèÃÐg?\u001a»|îb$±)|9äáàgJaJù[\u0014ÿh:©rÎxò¼ÿ*­ h5z\u0018«Å\u0002\u0001Ø¶KÚÛ¯èß«Àú\u001a½¾]\u0011½í\u0011DØ\u001aÙ¼\u0016mñx½E¯T£E·*%eúÙ=}å>òGG7Õ.ì(ö\u001e\u0005,(lÙ\u0006³¶°çÿßr\u0014ê§@óOcZßë\u0013Ï/m|Ñ4J­ô-@dbº\u0010X­þx.I*çÃ3\u001eéÙx9dÚ*zQÙP;Ò\u0016önk·µ×ú­¤\u0001îB@ÇW[3îÉ\"­\u001aLhó Y[\"\u0005nÌH\u00158<\u001e^\u000e\u0000¬ =}µ«|Í±^·+¤\u0018¬Å/3h\u0016^\u0014Ó\u001dìçç» \u0002*ãöø\u00115a¿3uýñÌ0 |jWp.mÞ.MÉÅw*iìe\u0019|î¼ÂSÈÊ\u0019WÒ£éÜL\u001cbé4^\u0012&©SÉ«°çnx¨Jg­Ä9°\u0019X\u0014Xî\u0005=MñÒ?Ñ¢öN\u0011¿= \nA\u0018èWÜ õ\u001fþ5¿\u0004\u0018¡~ì \"3\u0006nßÐ×¿\u0012â¨Bª3ÎNdÖb(,\u000e,âÿé®wä¨\u0004Â[ þ4þè|Çaán?C¦°¼è\u001f{Üsîb>\u001cûåxmîNúÿZ\"\u001bLß+û= ÞßOüwí·¨î®Ü_Rä± \\Õì±g?Òst¢ÌcÂÉ\u0017,ÊE9<{{ì20Jù\u000bl{JDE¯= JõËaÿôÀbàè\u0013\u001f±Ô¥hV>¡\u000b%á:Æ¯î\u0012È%E\u001d3\u0015-8\u0015ð\u000b= öüö\u0001\u0001n\u0002Ñ[Q_fT\u001cpEFc½´Ç\u0012Öýc§PÄOOdâ\u0003\u000b+IÒR%Ï\u001f7\t\u0017¦\u0001Ãe¬\u001cô®9¢2Ù*4\n\u0007\u0014E\u0016òCñÔ·T¦aG¯a*1HOX\u0003®Ï=}J¦¿JæÂ m¯J1«uð¦JJw\u0007\u0014\nÄtÌñVÔkMqÛÄ=MTÏ&ïÌ\u0019Ò9}¨\u0014ânzìrµ³¤\u0002ñæ4lÔ=MÎ7l¾É-¿oÐwà\u001câf\u0012¯RìàÅ\u0013\u000fXÿbÃfõÈS$y\u001d^x{\u000fu=M~ÿõ\tK¸x}ÏµRÌ&¸ÿÕ\tLæ5;\f\u000eÂ¬©\u001fÜ¤{³«\u001e0{ÿ¹g«êD¾ÓWFäQ ù\u0011]±\u0016koÊ\u0018BÖUÁ!ìörH~.\u0013L\u0013Hþ\u000bwq>\u0016nG\bÂSÕ\u0002áÁÜ´';§§SÕþïM]Ê\"p'­ÚÅÞ«äÕãZöê\u0014Aè(¦\u000b7fa&ÁÜ´§BçoG\bEñ¡SÕ\u0002±üµÁÜ£1;Þ.t±a\u0018\u001fJ\fö\u001cL\u001b\u001f¥o:]ô\u0002áÉÊ\"\u0017¨ªh\u000eì­*GÑ=} 1\u0006\u0005Ù\u0001BW'(\u0014ßk{­T\u0002\u0014\u0003\u0003Î¾!ñ\fi2kË¼´wô\u0003|&¤Õ\u001dê·\u000e,Ú=M¡oV¡î|8H\u001e\u0001ÔùK$¥J(mËß\u0011ÝïOís¹Cÿ½a\u000eu^<ï£Édó/%í²Ýá'\u001a\u0003_dKÉ;æó}\u0000:5­®Ì\u0017\u0016\u001c\u0017?9ÈdÒ¯Gúa\u0003}{=}¡bG2\u00123bØ26Þpâë@QÃÞoÜ«\u0011í¸Äî5ß:\u001b¶9¹4¨·ó5}A·~¯m¥©ªs{?\u0019ÓüôZ3rèzÔUª¬<ur¥}uµmT\u0005{~\u001fc3!ºù(h$ÙÄ5!8\u0006Ýö¨\bç½ý½lÇ·\u001dü^VfÉ£i§\u0017³væ·3Bm;«\u0012­ä³ã\u0019VÁ\u0007©Òò\"³ñë\u0014íëß\u000f\u0018§T¬ý¦C\u0017ÝH\u0019éôtàÔ1¦<¦e¶\\qÚ$9­2¦>-oO\n!ú)h;qS£Ç@²äÃÔw\u0005×Õê99©\f¯Oñ\u0016^á|mæé4´áíiñ\u0007I¥\\¼)±Ù=MÛÈ¦cîõy4~1u\u001fh\\é=Mò\u001eðs=MËhç¬¹Ã§ ¥\f\u0016\u0019Ò$IºQfK·|ëpÆ©{Ù3?ñê\u001d\u0001ÑKòV¨ôÿ½\u000eªÝyÎ'¯4oôØäï§cX\u0015\u000bfy¬q: <|µÿ9\u000e$\u0005\u0018\u00149jÒ[\u001aÙÌc\u0004#KHÜL4&g\u0015|ÎÝ&\u0019°¥ô££Öþ(µØ\u00182u3:\u0012¾Jpt\u0011j\u0013b^/X8½Þñ!°.^Î97ÚØ\túÉcDÉ\u0013\u0019P0ó\u000b\u0006ï\u0001>Ì~y5ïÍ{ÿgµ\u0019'Næ¤ö¾\b+ÙÊ\b\u0002\u0006îiìüXRjàF1Ïñ*\n>>¦s'ÉØð§ãñ¥A<uÍ'XV÷\u001bFd}^ÿÑILÖÓ\u000bA\u001dÅÉL^P?Y©Oð)]i$pÿõ\u0019}/Là)[­Øk¹Vìå6ÃÙYï0Iß#³{\u001cÇ(ù*1$\u0007q?àôb;Mì\u0016ÁÜ´§=}qpG\bvrH~.Ó½\u0018kG\bòû1G~.\u0013pklG\böÁÜ´'u\u0013\u0013koÂ¤\\sñn\u001e}}\u0000Ì_ÜhùåÌ7\u0015oÊ¨»èVÁ!ì\u0006à£YV½èTÁ!ìL\nkïF\b1ãËÝ\u001e}ô\u001fÉFàß2¸½ò¿áW±RÄËÐðãó¾!òýù©\u0001\nN~%sL¬cv®)iUïJ«]R¸yJr\\xÿ\bö\u0004\\P¸i¯e¿)Jß\u0016ÌÂM§ÈñI\nLUz¦\n1µØ,5ôq,:\nE\bC0P$Î\u0002¸>Âì¥ª+8\u000eÌÀ\u0010\u0011]R\u0003\u001fPÄ¼£cÎü´éÿôÚ\u0018\u001cÄ\u001f\u0003î\u0004?sÜ$ÿÆSÇDô¸]O\u0013\u0000yÎ-j¦*<a\u0002¬ßÄ±Ô)é)%ÙéT\u0007GB\u000e>]åC½;DbM_ìOÎOCKà»O c\u0018è\f¸\u0018~)½=}4×«Ú¯Ù2=}!÷\u001e´âø\u0006®&Òsªï6³ªh\n¶**\u00118º7¨;Çÿ2Ù»ªõef^n^n^^n^^^y iµ\u0004ÔÙ÷Ä>ÍÒ<.ø\u0003²±,\bÀ6<\n.V\u0005RF\té ü\u0014Ï@¢®gsÖí\u001b'UQ×tF\t×@¢¼@¢QÜÂûd±ûxªÐ\tÉäH\u001f§¸Ú+\nÍuBý*\n¬E¤´a#±¯uÌy\u0014ÊQåÑÏzâØåj¨sPðÉðn±\u0000Õ¼£ááH¬óGsz¶5$>àAÆb\u0011T§¸ß\bäÓB\u0002÷ûÀ\u001cË{³á½À\u00195ÍÞæÓ­\u0006«Éz5%Úþ±c*|ð)o÷ ·\u0006Kôàþÿ~\u001eÙc0>ãvP«A°\u0000K8·\u0014¡¹ÚªÑÖ·ù\u0011gÆwÆ\u0010Æ®\u0005,céuÎæ\u0016\u000e´ò'ü\nÈeÚð\u0011?e\u001cnojÉGþ\u001f±â\u0015\u0012RÙòõòõ\u000b1\u0007~%îPozá>zwVÊuR\u0004 âÞR[¯\u0011\u0010¥J%ÕS\u0000æW\u0015T_Ñ7ËWø1*¡=MÀYµ:¥ðZ·üø\u0000¦Âõ3JÂ5ýü¤Füº\u0015QÒªÖ\f\u0017\u0000êBvQ\u0013\u001aT²ç)Û\n%\u001fçI¯\u0001«ù\nõç\u0011°|Õ\tïiÛê~b\u000f¼ZQ&ûÕN²ù\u0017C²(^Äv\u001a¥\u0017Äëk\n§.øÇü\n\u0019Ð|Q= á&\t\u0002!I$\u0015±bö½Âí\u001e9îmÔ ¶IyÖg×!Ä¼i\u001d^(¬³ó\u0019\u0004x}5'&¶\u00102ÎgL~à\"ÙÏã^ðãD~aíBÄø\u000f\u000bãS þ\u0014<@4¥è»\u001di\bäb#ïèUÑUhèÏ\bìªL[ÙQ]©â_Hi_¾°Yîµ7vn¶ieÕØÈF\u0006\u0014³Ê\u0002å,èt\u0012\u0011KýKÉýBS&\u0015Ø\u0010Åw»0¤Èlû\u0013Í¼l£\u0012[= ø5»\u0017]a8bÈUÎ-,zDÜ«dÏäsQ\n¹.Ý\u001dõã¡c\u001do$'ð§ éÞT-¦æm&Ã\u0006±äÄ1ÊÉLC|(\u000e$àÛCØ³W/¸â\u000bÉÇ@â\u0018A\u0001tVb¸5À\u001c\nÝ%Ë\u0019Þ\u0005ËÑ¼jÀß¶ÛN¿\u001d2\u0013â\u001baä_oÃ\u000f'°^ÓåÞ\u0005p\u0012\u0006òÏÏ\u001aý\u0003óJHð¨\u00156ñ\u0000 \u0012â×xà»öX5¯\u0018;|J Èº©\u0015(SèþÃ³MZìÞ+à#\u000e·7¼£\u000fW»©6zª\u0000¯w±ÆAHcËæï\u0007øÝÈ­ÐF[\u0006þ\u0017\\Wñ£Ò¨Éýóª<D éä;$\u0014-=MõmN·ç\u0003eF\u000b\u0010\u0015³ï²½öaÎ­X´.&ICÃ~üK NßÚÉXKèa2C[ñ\u0011ëÇ\u0014Y³Ì\u0001\u001eø\u0013öµÀvÞ\u0011ÿRë\u0007>S\u0003J®sºîÜwûöHÞ [8Y/£ä2\u0007Ï¾Ör÷2ûFI÷@+\u0013óWg#7,åûd¨×\u001fÞyµOÊ wë\u0016¾B-~ö×/X3Íè|êÊ\u0011¹\"Ê.A\t¦\fó\u0003\u000böDYêÖD\u001a\u0000J»5èI0*U»}:]\u000e\\X\u001b]*»>Béúûücv= }#å\nâË\u001aª27\u0019,7]òÛ¼ìñýWÅ8'¼\fê\u001ce\u001c~»7¿ªFËruÃâWë\t\u001f\u001cÄ«=M= ÄÏÓXI\u0012óoN8->Y/~6H_­Ð¥Ä\t¬ª¢c]d)Málúr57§k\u000f~¼÷aÃ\u0006ÍL}WE;ÄÛG~Mê\u0005æ¦·Å'D\u0011^ñ<zJµ,ÂÅ8ùÈ©^Î¶Ëõihê\u0010?´à¿åh÷÷\u0018\bD3Ô2ëhð\"èç°í½0°§Ä ëPHà:Yj\u0018uû])²®\u000bØXÞÉ\u0018ç]Üiù±Zp}ZL¾r\nIñ>\u0001ßv\u001f¼>O¡W}kbêîô¡A\u0016IØ²uïÖãíå¢Úpv¿!\u001b_ÿA¬¡!ò\u0012Ë\u001851\u0013@\u001f\u0014B¯~¨\u0015QÂ\u000fQ¦G<ÜclHôµÓÊ\u0016¶=}©T¬3*ÂDà\"ÃsI&\u000e=Mî¦ª\u0011 p\"E\u0006éj\u0007Ê\u0016;ÑÂ}¾¯,¶.\fÞ¦ò\u001aò¸C!^\u000bkLØJ\u001c.Ð%~Á:Ê¹\u0006:xJ'wµ+\u0010z³TÊ%\tÂ+\u00136zjx¯4ÂgU\u0018¯¬ç¨\u001fÀZdútÚ=M¯^U¦\u0015rNP\u0014ÔæO£Eî\u001dÖ÷i§Â*ÄZþ^í¿\u0012Þ£|þ\u001b\u001eÁ|:y&{6g(<«K-Y®ûðz©m\u0011-zQD¢ÄÃÅls(Ù$ÅK-\u0014ë3\u000eÎe´Ô\u0000j\u000b-\u000b¼\u0015µËüÍTIT\u0002Ð)¡âZWäV­ëã\u0013>Ûß#Ü\u0003\u001f\u001dÆo3<= 2Ó£¬è\tZt\u0001Ft\u0001\u0005Lüªó#Å\tCt-é\u001f>¯¤\bË$¿ªBex ¦\f£õÌ!Ég\u0014©åÃ¯ÍB~Å4\u0016¬\u000f}­ÊÕåÄ\u0016Ñc\f©þ{¢Æ\u0017TêU!Ò,Ph}ä~\u000e\u001dô\u0016çé\u000fU©h½Ð=}_0©ïþFn£k¨ÓýVFéýïc=M\u000e\u0001áv-÷\u0012Vn= v\u001c¹Å\u001egÍ¸^*5Ý$¯\u0012rÜ\u000bÞ\u001cRÄK&ÊfíåÃKÈÄA¦\bò¯9iië:Ù0´\u0017\u0000\b.V\u0000\ff$= ¥í\u0011. òùØË\u001fM\u0017IÆ«¦Ëý0ËõW6õ\t8\u000bI¹]&kóNgì3Û¶\u0011M\u0011\u0012²«hc.ùN\u0014= TF%É1=}Ô;ñ_Öº6@Z² î\u0019ë\u0002\u0013¤pò6]©rcº\u0014\u0017a¼o2ç¶á¡YçdDÌ±H×6íãí/\u000e\u001bf¹°\u000fÖ#Í¹G=}\u001cË¬\u000bQ°Åwõ \bùYY$waì\u0000ÿ¿³\u000bÄ§\u0014ß³\u001fº¸xù4ÐøÒ¯)Ãé*-±\u000bøÐVö\u0014F\u0001Ã©\u0015ñ#ðj^´¬N Ã{\u0006þ0ø´-\u001dvHDå)LN¡ñ2¿ÇIÜªZ{\u000fÑ ë:B6ßè>Ø=}ðaÃcJ-Á_ëâÀïþÇðÃ¯\u000bð^¿åN]ÆX¦-Ô¼^&¢\u0002j\u0015~óFÅÜSÕß¼l\u0001 bR»BØöÂÍ^<p$k(kCÚç§=d{()ÌJýv\\ e*XÉ!¢)XÂ[¿ëö Êü¢JãÛW=}\u0011±«öuÃ¯^TÔ\u0005â«9¹O$ßÖY°LtZØ= qåN2U\u0006Ô}îÓÆ\u0017¯\u001b¼ÉÃ mÉM1g%²½£\u0018\bhÅq]\u001d÷hÂÂ¨oÊ$\u0016¼e\u001e>B\u0003¥]e^Ñ'Q\u001fÿL= ó¤J¨yÉ\u0014 \u0015õ<ÛJDá\u0010hG\u0000³d[bñz-\u0004w\u0002WªxýÙcöc\u0002ÎPÆx|«AXÚÎÉRLæ\u0011\u00113c\u0014Á+ôä\\0Wyâ?î@·\u0015aº3\u0017z\u0000¦Å\u0014Áp³\u0019\f=}\"\t \u0011Ë= \u0000\u0017L\u00140¨\u0019ÝK¶Úõ\u0018p\u0015\u0013i¬Y{\u0004\u001a¸\u0011#ø³[¯zãBw¿øØ\"å\u001d³ò\u0016\f(mpß³=MI\b-Ûp´\u000b6\u0002\u0016\u001f9¬°Â\u0007e\u0018<JíªíXy\u0004¶)k\u001aô0\u000f¦8\u0006\u0010»ýmIó%SÑ'Ov³]ó§\u0002S|M\tòs\u0000z\t\nËÁ..#ç\u0014¬A\u0012<ð<£ãOà'\u0015Ü\\ò§\"\u0010ù\u0007xÓh*\u0013ÅPC~\nÒá\u0011(a?-\u0006\u0010ÍJtUÿU?=}ó\u000e\nl\u0019Öö\u001da\u0003­ß.\u0007Êl.f#þxñü÷D²WdÀ\u0002Tæ7ÔÁ'r¬\u0003Yï6\u0001£ëö&©ðÎ'ìÎð\u00159(G\u0018©òä:·kãúñêU\u000fà\u0015s\u0004±=}àÛ¢Ud¸\f!;PN4RÝõ \u0006\u0010E\u001bKå¦\u0013í¥ë iuõ½ï\u000eÕ©?sx&ÌËjï=MÍè£Ï\u0000zÞ|\u0010\\Ùâü%Ó§¿Ííà±Ço³×Op\b{v\u0002µ²Ä=}Å/Q£Ig&[UèY}oòÄ\u0011©.¥>½ö\bÔ½ÃdRN:Î]\båj­W'ÃYÒàßEqJòuJtBéd\u0017IvR\u001f\u0010ñy\u0003ÂÖe?í\u0006b{ælWÆû°uÙ3-ÇQîfSÿK²sÉÃ$\u0014mm!¼MTª(·\u0001Û-Cß?-\\HXÚ=M\u000b\\é¤JÜô¦5ta,\u0007}\u0016Z\u0012±Í¨JÃÑX¢\u0016\u001a\u001c¨ÀÌ\u0016ÝÈFk@ª)\u0016\fÄK®YvÄ}<h%&³ÀCn¶ØEß\u0019#êöp»n\u0001¬\u000fÉäNÓ²WA>t@f½l\boso{'\u0019òÉÎ·øðÂ§Å\u0017¶=}ÊûNJ%ú/\u0003%:pû¹\u000e=}'µ»\u0018K'@'! åj1l?3XF\u001b<·Úå¯nûÜ¹\u0003jA\u0013ÎFë »è®ò;1û Ç÷k{óv\u0019îæ\u001fu{°\bq±û\u0011L \u001bW\u0015ùXö\u0014ñKnî¥\u0002©ìM¼0\u0006ügUi©X²\u0002{¶vÒü\u001cË\u0002uÜ| XkÛÆmø÷a\u0005f?÷\u001b°\u0016ªBé¶@G\u0010#f\u0010ç¶ÛêHßQ\u0014¨\u0015õÒ±Ëà¤\u0014\u001cà0§H¿ÊÑÌç* WyTf|éw¼½2=}®\n ÅÃÔn\u0019­VãoM+¨±fZò\u0015|ws´+\fçÄ6Kd3\bJÊl¯\u0007Éf¯}\u0001ï\u0003Ä\u0018^Ì¸¸8'Ãx[V ¦õ\u001eÉ&+Ó\u0006\\ÚÜ]©ÃIÄ\u0013^©u]3v'?ê\u0005IÁpSy\u001em\u000fÒÙQ#Â\u00037sæ¿¿ÕÞýèIt£\u00011ªÔ=}Xàv\u0007$Õ\u001an¬Æþç-\u001cµ,Qñ*\u000eÀ·7w\u000bÊ¾äû¤z°á×K¬¿ÐtÝpWÌÄÌÂT óBGJ¦XÄÐÃkÜ\u0005\u001d^é\btpï\u00003·M\u0002êo¤\"Æ\u001d»(­Ä~jr¦æàè¨G\bñNß(1.©\u001ai\u0002õË=M©ÁuµSKù\u001d¹ãÝÐ ~ä¹s;\u001e©êÑ¤\u0000rw¶O«m¾ùé\u001cÜ¡­\u0004Ú¢ÒÌ'\"°3³ÿM{v*W¸\u001c¶]\u0014¿ÿôè\u0002xBÖÛO ï= \u0005;n¹Îf;7:ÝÇ1½cÞ¾\u0019\u001c¼W+Ã3¸)\u0007ÿRHñ¢ÞÙ\u0010ô¢¨\u0018çt[¥Æa£h\u0011ìl,\u0019 ~Ë\u001eäÔ\n7ª=Mû-ÅàêÒx\u0005ýað!g\u001eG\u001cÃÿ³Ë_½)ýÚÅÜ %#ay!WÔxÀÀ\u0015ÝåTíÏ¤¹®ø;(gU¥´\u0014(ØMÈ²:gªýü(Ï0BÝc\u0017×éË\u001b@\u0015¹\u0013¦jÎoyì¯¶'½a>õiKÂÓ÷Åc$ÃãöËûÏy_UÏwø{ÿm«9\u0000?\u0010\f\u0010cÞT#M\u001dê8=}¶Pôì_#µýì7¼c%?gÎ\u0000}Õ\u0015üéÖÿ\u0015mNÐ\u0004iF(ã\u000bqç\u0015oxh>\u0014Nä«Ï¤&È\u001bkûÈ´\u0002í´¿ªÕn?èÀ²ÆÿÔxoÚi÷ÃÚ\n]Ø;$3DÆ¼âW2ÚÝ= ÃBdQ}ø±W¢Ü\u0019\u000b\u0000ZUN×©ð´rr+ËÏ\u0015²º$)¨à>ê=M&Èt¬\u001dË,º/ê\u0016|ÈÇ*½U®\u0013î*¤ïßÚ=Má!$9\u00062Õá\u001evJ\u0002\u0010\u000fä\n°\u001d\u0004ò5gqa:\u001f#D\u00138\b¹ÈXq\u0015øë±Ã:°:ô>+K¨U°*\u000bYnçÑ\b\u001c:32ùuÀ\"öë%KæP¯]v\u001b\u0007Î%¥§\u001aÑ×@üþ±Y×Òd\f!ÀÚ_¨éH8ÄgÖíÙ\u0005«´\u001däñ«TÀW4*½\u0017\n4G\u0018?ÊRÛÁ[ý©L@§÷MyjÐÎôzG{¯ZÏB¼[UGjmGÑÛcKÔÜýH¢>Qì\"^Ý,XÇÈ\u001f~ÿ[ ÷\u0005âÑÔ«Gï/ò[3Ëm<¡IS?º\f+R|+Â¾í½ú¯e3Æ¡½úC½z\u0001\u0002Çê@ºÌM7ôx÷cC9µAç_3ÎRÉ]ÃÊÃ}üò¦?ºD9^\u001dzÎq\u0001ü\u0017:s2\u0015k½¸|9½¨´\u001ex!{hÔ\u0011\u0012_\u000eiû7-w\u0000ýsÅõ»zz¼S R÷-²ma½üDy~½E\n\u000eY¶:qgWýURDÏjr¥ú>ÏüP²¨!ê=Mº_¦æk\u0007Ï\u0004×¦ÏÃ§Ømx\t\u001e,1\u000f7Jds!¥á¨mòmý\u0004}ÉÍêÙzZïT\u0010ò%¼ \u0001óõÓµÁQ9Ôõ= §òUB~Üáìsæi_\b.zWb$fc+îÏ$vD3ôì\ti3u\tz?ªD/9k¹.r¬ó)£êðY8\u0004ü¸£\"BÆÁ£Ô¹Ëd¬jhôc¬¡GÐ×5u³Ð5è\\é4\u0013-\u0016\u0018ÊsàlT2ºá¥øÉÜ\u00196n6°Þbpw !×^ßdeÛ,cg rääÃqÈ\u0000\u0019·1¤\u001fÅ^\u0000\u0019o8\u0000\u001c®â\u0013¦dæWÂßTÎaF1sºíD¶×ø¯\nZ\"Ü\u001c/èïúÝ aè}Ååãòl\u0003êÉA\u0001îÄ<óª}V=MbÏ>OÉl¥+ì'U¢ø¨\u0007Ñº?ùZ\u0013¦ï³»ºÛI©³+ÈuóÒÿ1,Üë¨¸Ç\nY\u0005=}Dµ\u0004¤ç:¥\u000eáTdL÷Ï ï¢ G4¨\u0001Q¾îm1ü\u0001-ô\u0006îûYV\u0007=}æñoF§É·mO¯¯tÞx= \u001b¥(ôÙ¸\tðXå©Ü5XF!m\u0007ã^½³\u0018\u0006'5ÁïF×¼\u0016å×eÂc\u0001­kyß<\u0013QÞ,h\u0000òo·\u0016âªãÁêº4\f:¬kçÑÖñÂãNP\u000e\u001c»QÑ\u0011 Xy°(\u0002\u000b¯°\u0012ºm\u0012ö8tb[°rH]\u001f=}d\u001e^ØKäà=M\u000b§¾Ûä\u0011~RîûYpã\u0000¥\u0006A©ð©qpµ\u0010î\f3\u0005 (bèÜÿÜùêfÝÌ®F°I0H\u001bê²\u001d'/e\b¶\u0001éàÞ,Q:À)#Èi=}\u0000$\\Ê\\ÿù]\u001aÌ\u001d<ÒþMÆ\u0006¢$¤ü\u0005o1X¿÷9ÇHLlÑkÑÌØª6uG\u0012¶>²ÏäTÝñ\u001cvÔ\u001bÀwRa\u0005]÷p\u0017x\u0015Z\u001bì¹\u0007ð>ëê¤÷ü= ÌJvÚ¬Ø\fA\u0006ÄáÝfçë]þú·ÚÇVêym3pÊÚÀD\u0014zÇ=}U\u0007\"¾îÇÐhP8ËÂ¹\u000f\u001a\tr8_ûL\u000f.ÕìÑ^ªÐ%\t¹òì¥¿4L[ùÉcÛí8Ä@Ðhå1Hå\u0012ãYf¡hê6&ÈÔ¹~åAÇ\u0016ÿ¶ìï\u0018­\u0006½,iu¸+{\nÛ\u001b0Çó\u001dæ8ÕãÑ¨z3z?Nýhg1ç^7\u0010È·= \\\u0003ØwaV5\u0012QÅ¥FöÒÂÇ©Q'³%cog\u000e\u0004ßgÓºÂò\u00138_\u0017uÚ\u001có.Ä¹S¥©\u001e*¬h´þ¯¬\u0007²v2z-Æw\f&[ÿbIû^\u0013>;?\u0011ùÎ««nTjÅJ\u000fÑQëóÈãÖ_öÔH\u001deÞ\u0013®\u0006ËtÇ¤SÂ\u0007pnáøó¿ÌuµØ~\u0010YPL½y4æÑ;!:«¸-ô\"\u0005=}Ò\u0019±§»\u0013\u0012X\u0000¨Ýñ¡Ì§>\u0001Uâ\u001e\u001d>Yã\b¾\"çaFfe´·6e.Ã\u000e$NÉÔÃ_ü÷ÛßË:ücó'¬ð[øé.à\u000eú/hè#Nyq\u0001*¢½ûÀá\u0019Í¦\u0019Bq!9;ög\u0002MgùÊ«®ºÊ$£ûÌÌ¤K[Ïnv(ó\u0001$±ã\u0007âÉÏ-\nú{ÂÅ,<ÊT8ö\u0016¤ê}æõq¤!aü:Ê¨Ôû\\¹\u001fI}ë\u0004T5Æ\\Ïiÿ0Q\u001dEïµ*ñ\u0014Kh7b¾g\u0015æ'ÐÂ\u000ed\u001f\u001e[§h\u0011sYàm£¹\u0010KP®\u0003pýîöñè¼¸[u/Ú¸= \u0015Y6 ÀYu÷²ÖÖ\b]r[7bmj¨'æjò\u001eà\blM\u0014O*\u000bÇ·¤ñ1(\u0005*TÙZûÇIîiÁþ\u0011.ÖûS6Õb6yYì\u0017Ò$©iêãâ{9D\u001fÖ[\u001f0t\u0011\u001e\f*4\u0014ÿÐ\u0006zº0ð*µÝJ7Ð\u0016Rbå§ \u0010G'Ká\nè2xêy­.êä:kñnËÞ8Öú\u000fu\u000eqh\u001dÛâ|èä(Æ\u0013\u001d5õ}v\u0013÷êÍF=MîXé³mî´ü|pî´Ìõ\bÆÅ\u001dµÔ\u0014÷\u001b)jDoL¾6ücÖtÞÔ,Æ3 eð_Ä\u001dÏ.3,VöHDN\u001eå@ÔIØhÈ1¾\u0014¸ô\"§wt]C\u0010àñìßï÷\\k\u001bò\u001f§Ëk\u0013\u0013¡áÛØ<vÐJÞQi[\u0004ÂÇ¢Nª¹á¥¹$\u0010­t¹Ða\b&Á_\u0015r5×hzM8%\n\u0006\u0019Î\u0014f93é.¸E¿ÒZ_\b=}Ì¯Üµ±ü\u0019ù×fó ù2½NQXEÿZ ìt«î9^z?êfô0Hf4ê\u0004êfá¤>P^^'­Öâhäª½\nà§÷Ê\u001aZ4t¯.\u001b®'c\u001bÎ÷þ!%n/\t=}¤=}}Ú²Sp\u0016êw½\u0007ËÖPçT¤õßªU\u001e,2õVu\u0018PT8ÌÍ!YVÕ,,]^éyào7=M\u001fRÇt]= .&ùdD\u0005Òh­P\\\u000eã¨-FRÆx3´¿\u001a¥ûOªÄ\u001b:\u0004{·ª7A=}\u0011ÛEx¥=}VîAOúõL*þ¥ÑÚ¬,t .²ÑO\u0011·(ùqò×Q1 Iì(é¡U©ª_L\u000b÷¼Ü jmªÑm_{ÞQQõÔ}óköJ\u001c%¡ÚL£²ÆÓ\fu\u0005SU#z\u0013Ó*§\u0007ºl¶8B\u001cÐ\"@b\u00023ôÚzbÛvÈ\u0002dÓÌg&á­ê\u0006\u0006ühSÍw3\u000eÈ[©tÄn*\\2¢¦à\nv6ßy\u001bÜ0Íw\u0002)à×èS{Ñ.Ò¦Íæ Ù\u0015bÂµîÑ<eá_ñB.½®u÷\\'&n\u0007RTx)= Í=}-ûô\u0006¥Í.>éô5)\u0019 'ý\u0001¨êëç\u0016õª·õJ+mvä¯1\u0013\u0001= 9×µÄúb3®:OaÌw;\u0016±QãJ\u0016t= .÷\u0004g\u0014)\u0001^=}%9Òwq9D>èÅí:9º_À$ÒÁ{c\u000eÅ?°Nzí\u0007ø~ÊY8Ä)#2b°µ#¢ix\u001f3ñÈiæ9\u0012z¨ÿJæäë%\u0005<êR MÑ\u0005ÄQÖ\u000f2Ô\u000f½aôc5}t5ìø#Vñb\u0019\tIòj&=M¶Êwd!\né7\u0017[ÀÚU\u0011*l6\u000f\u0002¸ïÙ\u0006©¡NIn%ä\u0005 \u0006Ì%\u001fGùÑ6¨ uo·6Å\b)=}Pí\u0004ÎîT=Mìª¤){èÐSX&P2¿Ü\f\u001fÍvHÎâ¶Á3ÇÌð¹õ-\u000fêÂâ©s¥\u001b¾¨ò-õ£seø\u0019«OÛÝ·ÔnW@e¤l4¯\tÏÞ¾Qj\u0012AÞiò\u0007Èë,òPGPñ¾wfQdSu^ïÿ+\u0003l\u001c©ª£¡\u001cEõ£){æ\u0019 ìð\u000fðõâ\u0010\u0017¡ÿ¬\u0019 Ôé\n£¶p¾l\u001døw\u0017\u0018\u0018³= ¡Km=}û5Hà\u0012I§Ò%S5x÷i$¡\u0006\u000f;ÈwßôRxfaðZj&h6\u0007\u001dæé+4²è\u0017þ\"\u001añ­Ð\nú¤ UÚªôÆß\u000bØ°\u0004;¯Ê¹¸ùÊ§ÈÖß\u0004oÑZ!ÞôÙÙÊÃ\u0019¾#\u0019·/ÙÀ#P±/·/\u0005}¯\u001a1®¶¸zÉöóýaaâ%\nâ]\n\u0007÷^ï\u001cCÙã¥þ]\u0014÷FvÈ­ÅHÒJ÷Ùñs¦ÖGúìtp\u0004»²Xæßñ 3ÞF}Ãé\u0002D½~Úk\u0006í\u001a]\u0015æd®ã±êµ×èÑè\u001cq\u001c1%¹ªÓ\u0010åÌÇ\u0004-ù\u0014µFøI´ðìeò3ëí\n\u0002\b#1ñ)\u0010\u001eì)\u001eÞ÷ÔÊ0­ÐÊ\u0010­ÈÊÐ­ØÊÝ÷D\u0014\"¢×û\u0018>ö\u0004Ñ X>>>éÍ5u²m¦Ì\u0006d\u0000lÏg=MFSô\u001dSQÄ@×¬G\b\u0002\u0018\u0007ó^Å£y©Z\u001eIdÉÜÌýwË\u0012}\u0017E\u001e¬G\b\u00020Tò\u00020R\u001dñSòÜsÁ¡¬ßâ= É÷Ù¨+­Ò_)Mv«<\u0002§(Á\bQbùÀÇ=}Þk¨\u0000jl¿Ð±ðØ÷ÙjÕ²\"éñpÑ\u0007\u001a¤û\u001dØ±¸\u000eØ1\u0014\\âÙ\u000e= û\u000b÷áù\bTn¯8 1¢:«çùdõ\u0019¦ÖÝ'dd\u000e1&\"w2\u001euù$Ì$Ì%ü\u000eÕÉïÁá\u0019\u0001~E£ÄâÅ¤ÆÂÚ¤\u0000J\u0006Ù\u000f©\u0000¡¤î= Wxòý\u0018%\u0005\b=}Q\u000fÚÄ­ö\u0000ªÖþopgÇ Xr\u0007*ô\u000e\u0017\u001dMR#\u0005ìmÕ\u001a§Íõp\u0002-¥Æ\u0019ÑaòÿL¼ÿÑ­\u0014Í±P3;\u0000Â^W])³Ï\fãþm¨\u00158e»êÈÓ=MJ­UðPmr\t\u0015\u0016¹-=}®\tÄy \u0010H LúR\u0007X(,Ð:\u0010= Õ^',ÖnÂ¶jØÜi\u0016PW2(Ò7©<:\u0007\u00184Ê:2\u0001N¸Í\u0002Ê8²Ï.ýI4·I\u0012\"k¦$ôq{ \u001f\u0001\u0005\u0011øâ¹f ñe1h\u0012ªQ¼[_é2NÈ´jQ°*YÉîÍÏ\u0010¾ÿÑ\nÍv@Øiú!zÚ.>Ô\u0014Z³b]@ëú\u0016²çÝ+ ÑFP¹»áEZ¥4ÈJ-\u000bÛ£-\u0018\u0016ºzUØÛq3= Å´Ôw© P±\u0010-ÊQÊfYcÊ×Á\u0018_~%*©{\u001dØº)à\u0005ÀÒ\u0019÷ø'Ö\u0014d¯Ý²Yíì»Ço!LÍ9ËË\u0018$+À5)O½È¯¡ÉzØÊqAaûÔ\u00024\u0001IæÊxâ&[CÊ.¥iÂw×9iW°ÀC¸(^'\u0013\u0004©\u0013ÇÊTº\u0018L±uvýÀQÉënðÈ¿·ö!CvH²ÇxÎÚÉ\u000b5Ò\u0013\u0007Ãy\u0017¶\u001fôÿú\u0019\u0010ÍÅ-\n>É\u0015ÿHìæ \u0002U\u00044Î¯þ§½\u001eûmÁÈÁÈ&mGx¹¨\u0007¾Tc\u0002²Ø\nª|\u0013ð(JK¡+BN\u0010©ÅÝ\u001bácÕ®O\u0010©ÅÝ\u0015öd}´sã¶Ð©~\u001eÝî#{µ/ÅÚM8özÂ\u0011)$WÜbªÀß÷ÙÏ²$Ì4Tú2Ö©q¥VµCÙ%<P\u001fÓHùQ^\u0019h ?Ü³ó\u0014Þ38_Ó:\bMu´[@\f®2\tÈ,q~\u001b\u0005\u001b*:Câ©µÏ¶i¡Ø\u0014b´_õRàag÷\u0002Â\u0001Ö£á=MIÃ(\\\u0001|MdX^¥dÞH¿¯¨®ÎEWöroODlÙ¶£¥²\u0002r±íòq%@Ë}\\âÇi\"PÖ \u000fàÂôÆ\u001c\u0014\u001dß®YZ\u001e¹£Î ÞLð'7}=}:¢\u000fÿÊ$¬­¥ßÐ:£v\u0005| M,¯ÚE¹y5§ôLóx\u0002*Ó¶¢\u0017ð¢©½é®#\u0012;8@ðn5;UI¾\u0001w$\"-ÎÁuµí±ÜÚ.\u0013\u0000Jû2¦ÓBì+²¢!QÈ¹i\u001d¤Öù¿ìÃ ÿ¹·QlBa!¤kh)ý¹Rª\f¿}I2\u0006\u0007gÔ×BÔ¯Ï¬ª/\u000b@õ¦*;iÂØëÞ\u001dpÝ= \u000eÝÃd$= ?¦OrQÐ½Ì\"\u0001x¤Ù\u001bR\u000b²\u0007fòW*s8|¼¸2\u000e\u0016Ô\tõ ÂcÔQ´\u0013\u0013\u0018\u0017µªôÚ<ã6Ñ\u0004?{Â\u0000j®R\u0002j(ÏKáWë³½Ó\u001aÛ[\u0011¢\"kaå k¦Ðwï\u0012­±bëýF¦\u0014Þà\u0012YvôrH¨Z>èç/Å¿ËTtº\u0003ã#:}@÷\u001cæ(\u00132Ö}væ\u0000\u0005} \u0002ÑØIx\u0018Õ¨NÏxú\u001aÿIMc¶Ò\u0002åwtJ»Ç¢Ð>Q{Ôòh.\u0005ph.ù¡]Æ¼\u0017Ô¹&\u001f¯áMÐy]­LÌÆ¥\u001fµÿ³·á*ùP\u0018w\u0002ãSÛ|\">4·[U8\nI®ð,õï4\\\\A\u000bÿb\u00055+]QRL&5ãh\u0013\u0014£\\ÆE!s1ÏÄ±+2pÓôÏ\u00169¶ÖR\u0007¡¶m)\u001a\u0004\u00035!\u001c^PqÏRf%\\hR'Ã±\u000f«òSßîÃ\u0004\u0001ÍH3íÿÌ'RÝ¯þÙJñÝ©\\\\PVQÞ{ewjÍî=}Må\u000buç\u001ebÕõ·Ð?Âß\u0007mì\\\u0015¡2Î\u0015\u0011d©EG¥G= Ê}-\u0004¶Ùw¸R\u0004 ¢zy(Ï\u001f¡X\u001fê¿q½\u0015\u0005ö±»ýø6v\u0012ÞÄ7«¨¹Ü\tØ\u001b=MÕh {çÓ]ñ1)%Ðj£TNq\u0014õ~r¥à×õðè¥\u0014®x¹Bû\u001cÛèb\bÍ¿õ-Ò¹Òæ\u0005\u0012\\¤_B\u0007AýQ±¨4²|×>9WP®&ÊëMèØ¶&{ÑîGb¢è¦=MEèÀ¶eî¯a=MáÓ\u0007!\u0003jvñ#ÝÔ¦D¨¯|;È\u0006RRj\"éFÅ{\u0014\u000e1ÿ\u0010Ïr<\fÑÄwöå¾zÈùÇy© ­\u001d13'&7x.uzØ\"\nÂ£JßóÀ@ ù~T\u0003MS°\b@Ù\\ê= óe\u0013%Ñ\u0012â§\u0010mþ÷f\u0000RôAäêtjõ3Iár\u001c4&¤×ùÍÜ´¼Ý|Õ¥\u0003ñ³ç\bBä!\u000fvØéXxÕ²§D\u0014ËR<=}~aXuä·%Ì\u001a\u0012\u0002 Ðñ\u0007+µÁº\n%*\u001fg(Xâ\u0003±3÷ñX0ËOÊGË>Å=Md[[hg®\u001c1·D!v&/íjo\u0004ô®bü= T?iBÔØ= ªX+\u0005óq6Eô\u0004yã\u000ba·ÂX\u0011I¡ªbp¬{q¦-¤É­õ¢ÀÕgÚ\u0006CD®±±¶ÑN\u000e?fÇ¢Ò l\u0012Ù­ûnHê¸!zþThl¿VÖY5*\u001aTº\u001b=M-füf\u0010è\u001d/4;)\n«éáh»¯ÜdFÎrhÈûåJSùá\u0010ÎW¾^7<gøò¬\nÃT\u0018{(êwq¥â\u0001\u0010~\u001e-ß§O\u0016 yú^yåæ;\u0006íÎ\u0011\u0001\u0007û\u0005PyÉ?\u0006÷øÆñÊ\u001e\u0007µâþu\u001f¸|pa\u0001×ÅÐøj&\u0018\n>c*Ò¯\u00001½\u001cxÈ«µw\u0018Sî\u001cÃðIð\u0004O3X\u0014ËKÉ(tì66þ<çÊñ2J /bÝ\u0001}tä\u0011\u0000ëåq¦¸â\u0018$à\u0011±\u0010­GSC°Þý§îá.è\u000fKëí\na\u0001/Z¸ðWöI¦(|\u0019R)Ç³ÖL²,¦Þ\u0001ëJ¡±âM\fô{Ö\u0015ã¨ñµ«¯\u0016Î'~7,[¸\u0014Ì,:Ø'z\u0016Ê9WÊlLA\u0012ÄÊK/x¼<\u0010Æí·\u00181ä\u0007Õ:½Ö¦ }È\u0001¦qÑûÚá~p.\n\n-Ù0\u0014ùýÈ= H3Âm°nOzªxBÂ 4$o÷·\u0011V\\nÐ\u0014à+wÅV¬® \u0003âh\u0001þ\tä\t\u0014t¶5Nþt*6\u0006FÎ§û¿¿\u0012}¾Ë\\¥^igiî¸×/._'*öÃq=}Ì=M\u0012½£á9\t\u0004?L\u0010ÕÓ&­sÄ& Ø\u0015>\u0000:Áê7WP7'z4üºÓ.¦0àr\"ËNÍ¨\t°Yñ!Uñ¤¤Ó&¤0\t;ä\u0010L= ÝD¨K\u0015Ã÷Ò¿\u0015ëYFb\u001f#2¹ôñ¸ÑÑxì¾[/Ë·Ø¡ß\u0005y9?\t\u00017\u0013s*$OaìÃ\u000e=}\u0016ºñËÃàÏ¿ZC\u000eÉà×å}ÆÏ³ÃyÈ\"¦ø7ã\tL1\täÛqhlfó=MÈ¨ÐZ^sfúì¹9ÈLsrÂÝ\bå|\u0001.\u001fÁ%J\u0003ðó\u0012×zÆZ¶C÷òKI\u0000ÉÕkd\nÜ\u0018¹\fÚ·/vÍ6²å®v±i\u0017·4M0ñ\u0013\u0000d*\u0017-\u0017ÏÿFË\u0000Þ\u001a,X\u001a,Kîºi´å\u001f÷\u0006¹)\fZ6\u0005\u0014Â±\u0005Êl\u0013ãÙ,\u001b -\u001eG¡\u0010\u000eY$Ò\u0006+þ\u0016\u000eÒ\u0006\"\u000bY8\u0004\f/©\u001btxÙ\f\u001e$îæ±\nÝ±ZîÊ'\u0013bG0}av1¶µ\u0002y©\"²'\u0014ä\u00190ô-^1Äly\"\u0006â(\u0014-7pè\u001a½þ<Õk5}JÞ¦ýé\u0016\":­Rí²g:\u0001»®ðu\u001fv\u0013\u0006²Io¥ÇUÝ{èÐ!Õ\"fl.W²½'>4N¨cóxí\f*ÃÅöèì\u0019¼qiï\thò7\u0002·\u001eUÚ£«Ü\t¬g$Ýèõ\u0004Þ¨\u0018î\u001bÜ1cÌ(ßçÉå^cãÅ-\u000b%Q>ø$\bÎ kKÿß·µØæ¬:è¼Ãyzµ.R­w\u0011ÃkÈ\fÚ,Ñ;Õ¸»^O¥' \nræï½|Ð:¯7Ú=}|ù¦õÇk'ð¯\u001d÷0Å·Ýêwµ\u0012²xï.WMyH¡Æ=M\n\u0012ÚÏò©ì/3\u0013_Ö=M ²\u000e\u0011ü|a÷\u0007²=MÄÙ¶We©ÏäN¹?ï\u001c×Ñ^W*szý~Næ«¤ÔèímÜ¸«óä³\u0019Ä´q\u00079òKKZ³Û]\u001aÂMÞÐµ\u0019uÚÓOôxIäõx¼H&D'\u001f#È8Æ\u0007ö¥ÃrÉi\u0012\u000b\fª°ÅÎYGy\tñ\u0006ÃÐNXÛ³ÙªO2\u001d¨X¦Y=MÓ\"¦&Æ'\u001e\fZô2¸\u001aIÓÃ\u0013\u0002w6-®Ð¯SïÉ÷À\u001d»-Q9ÅÛ¡TV\\å>CÇØ¡òo[+\u000flÞé\u0006Qn\u001aU¨k®ïn \u0016³_Î>ø\u000b9ß-§¼?A(QD]>ýßOÉªÝ:ï´hy'ÍRÔeL ÐÄº.jÚ-jÌº¤4Ò(põ§°7­\u0016\u001d>\u0001­·G|wÙP¦êyÉ[YÚ/Þ5?½³wòZ= V}Äú\u0017;5l>û\u0002(ôûíy ¬Ú}\u0017bT2W\u001e\tlI7&Ò´\u0017j~\u0017®ÇvbñÁskóJ¶\u0017Â\f@æ\u0019\u001bÞÚÀ\u0004\"ÿ\u001a±\nÕ\u0001±6kVñ\u0000ò\u0001òpù¸ÅªT\u001ay\u0005ò½ÄE&\u001cÞë^·\u0007U\b­I¼HÍeÈÝ'\u001a©L½8\"ýÓTÆ#Pº\u001cnC6ÉÏàWíPÜ\b\b}9ÅÅhoÃ'ÃR9«x®]î\u0000*§__G¦TtòÛ×ÎJ}Þ(QjÈ\u0019\u001fü³å /ìúJ®ó·ÿy'N\"ÂÚV\u0015ô\u001a/\u0000%7IEô@ä\u0003µ,»jlg~=}UQÃÌÉ\u0006\u0004Á\u0013 d\u0017hÈ\\SPbTzÒUUÔq\u0011øÖ±\u0014\u0005\u0015ÈÌ\u001aGÕY.\u001eN\t¾h=}\u0016ÔãiÆw{ÈèLºÒ;·$­k¥ç<p®×\u000f\n*¥2ÕÁbÆeý\u0007£³å¢ØRÅRwîé\u000e'øa\b&\u0012a-þ*Hl¶bai\u0017\u0006ç%¦/EÐX\u0016\u000f3\u001a\u001f3\"Ý³êé|hÈp-ÆVÊ7= fþj<ÚgG°¹\f\u001bÊp\u000f8ÆAº\u001fù\u0010\u000bØ¼óU7S7hH9]G9ÑAºLAº¾ú\u000b\u001bêB3HBºS\u001brW7\u001a\u0005s¬ÞünÏ}éì·ïQA:Q\u0002,ÑAzPfô\u00043cvüø \u001a¥Zð>ßüf\u0010\u000eÃh\u001f\u000eÅ7 1¯ÃOEã®»\u0005ga\u000ft|¸\u0005\t@c¼âp³Qû¤ºßA*Næù \u001di¸\u0016O²\u000e\n¬ÒQP{\u001e{×ºÅ¤ê3TðÒAó@U§â\u0001¤éóÃ\u0000¤+ØÞ?Ò×â\u000e0TØq©\u0016ùÆ\u0001Á^úÜ\u001cùëw©g-ÜÀ\\¦ùý¸K¾4Nï×ÿ.>Oª²\u0005\\Åm>Â,Ò\"·ÇKU3ù²\u0014\t$4ÖùÃ\tÐäO:»\bÈ<ÔøæU=}Ä¨J\u001e¥:\u0015¶¨éÚêòÏ§\bàÓÆx¸í0\u0017ËÜÜ±è\u0015üx\u0006\"R¹÷l\u001d±\u000fIm°¾3wA­\u0014ðÄ(îB·2)\u00017d×Ö\u0019Äê71÷·[çW.\b©ShêÞü6®àù°íNVR-0S5\"aÄP*{ 3[9\u0002\u0001 vc\u0001Xî\u000f= ¶lJ±\u0019øÕ¥4CqèÈ´Kõ\u0017æk\f>\u0004âæiÚæo'ÇóÓÆö\t3!7ìË¢Ö/õïæ\u0002\u0019âC\u0019²,\u0016Z\u0005Ý'\u001d\u0000)í)¹Þ!iöFÆð¹>\u001aïþTTwj\u0015d\u0005\u0000æäsºRø\u000b\u0000ÝI9EyFEÜ\u0019ß\u001d¼X?«d\u001e\f\bNö&g\u000eÊ6/\fÝÁA:\u0005ÂR\u001b§5\u0004m1¨|Ê\u000fÑ\u0015O\fë»±´\u001a=}3y½>i )JFß¥öÐ!í(¸\u001f×VcØS,£\u001bàe]ÅÛÓi¿cZäÀcHò«¹µc´ªy¾/÷Ò\u001818\u0000Õ÷¯\u0017ìHyñ²Öð\u0001ëä\"ÙÈdBt 8±YªJ\b2Ûx6×JÈré\u0015îe)^#!¢ê;-WY\u0015\u0012û9\u001dÚS\fvM¹Ù^4<YÌS¢\t6wÙ\u0006h}ÿn!c ôN*5l\u0016~A¿â¶¨^2¾-2~Âc\u0004çØù-£\u001eò)¸ËÆªºtM\u0012~á*#xbÄõËD{ºöü\u0016uòª19NLO)L\u0018ªöçªûY\u001dPô8z:µ4Çêººï¥L}æJ×U¹UJO(\tuó\u0005yx!PÍ<\"\u0012= ô\fj·ÆèÆé¤\u001a0É©òT©¥ù\u0000ÿ¡Th\u001c-í\u001cÓ½\u00063E¶ó19O[©ÕW«IoTø~ÊCN\u0017;Ò\f<X\u000b\u0006\n8NI\u0017Y$'ÕJ¢¡Ô·¶¨î2.\u0013b8¯²X^ÚØJØï\u0006Pþ6ø,\bj}\u001c\u0003\u0015)S¬\f\u0006D­\u0000C\u0013Ór¿ÈXYìt\u0003ï¯³§[r'÷t\u001fªìbW\u000eÊà|hÍj6;æ#1Ä\u001c2à\nÏ¨]ºÄturUÀ<xd\u0016S§iÖÑÿW´ÆHð×'Åæßpº<}sæj\u0004ñ×\tjþ\u000f0LÔ ì¢[$;3_\u000fKT%'Uì\u001d¹¨®ªðv!ß*þÒY§\u0007\u0012¯¾ïÆ·¼²·ä\u0018= <2üF Ú¸\n\u001c´ñÝÀúÇÉTãN>å\u0007s&j\buZ\u000b´­¼3RøÁ&~ë\\\u0019rÑPÊç'iIc\u000bY{\u0015ªþ]»\u0018âæ\u0002ãZÐÂ+~ðZpj Zþ\u0017Ã×ûÁ7îßpräÆçýÀûqEâ¾,¶éV\b¬tû³¦.ø\n¼æqÆQÆ¶\u001aö¸Ó¢°ÜbKmjgøÃÖ×®²T,f\u0005IZa\n]Õë´U»°F°Ý³ÑTw<\u0019hÒühÇ üE¯ÐMë>\u000b\fÉ³Tä©lW4QJÂs©r'©> <e\u0018\u001f Ò¾Ys¨£¹@¾\u001df¶È\u001dýíZ1\u001f¡DØê£Ù~Ò>ÞÅòñ\u001f2aÆâ2@gÕùñdªÉ\u0014#¿.ÙN\u000bë\u0000Îr:·Û-tÉtÜ®½¯qµ=Mû|èÏï±Ù}<L\t\u0003%?g xÐÂfÈM¦N\u0018î~ïîð \nÓ^iÙÈÀ­K÷R\u0010g\u0004ÛÅ%\u0014ÈÙ¨Þ¢\u001e×Ãp¡^gZ·t¸\u000eã|­z£*Ø*2£\u0018Æ1ø\u0012+-[\u0011£çR°bb§8«sê,f­µ\\\u0012Â±\u0015aß=}ØèÝ(ÜÈk\u0003ÓÃ\tÔ>¦½Ø©³ZÒÐ2\buAjXø1øLDâU¼,gFV¿ãªèíB-Þs\u0000Xw­Nc\u001e³RI+ Xjr<ä-ëèn\u0014\u0006ÑÚå©|Ãi!K1yH{ob\u0016 iµ)V\u0004ÏR¾\u000bçh\u0005¢Ë÷Þ¨vg \u001a§±<EøÅ¥Þ¿/½=M³,váÂ ©ù4ûÅoÑÒ\u0002Ñª~&3]ié\u0014\u000fª@óÃÓKíÈ\u001díå².e\u0010,ÈþèJµôØ²'|bò6p¾ø\u0001eK\u001fß(ð¥ÖnÄ\u0001Ýh\u0012óîú\u0014¨\u0014&\u000bù\u0001ÙîxE8\u0017ó\u0006¢vÛÈñøMl¥Û|Z¶\u0000@Õp\u001bÿËÏåÑS\bÇP²¶­Ï³h\u0014õºÜ!n¨kÞÝm7\u0004áü²ãüFrðý\u001câ\u0003.s&ò_åì\u0016$=}U\b@ã\u001d$üD%ZJfo=}\u0010ó´\u001f\u0014(\u0016c×\u0019}^a¥Æ·\u0015Êâ'\u000eBú5\nª}\"mù¼Ñü?W®\u0004ÑChÍ\u001f\b©\"ÃÀù¦Ç\u0014E\u001cgIË´ÄÑ®ðRÕfËøA+ö©\u000bø\u0019P\\GTu\u001bà-yAQä?=MÇì²Ð®$T~nÐ¢\u0011òG¤õph0\u001d¤¶Qs¹ù¶­\u00021®öD ý\u0007-ÝZÇ|é\u0011g®\u0005<p\u0000p ÌEÑÖ\u001fÛ|A\u000f\n>Ö>·\u0016AäÞ¡ï\fDïìoàÈ= ·N¨¯\u0013BÆïìoVìá@õvÖMA\u001a\u0016ã@&æÉÀABL'?Ê¾)à¢Ñ\n\u001e\u0012+oëR\u0014¡ÌÑF«nv5°ÏÙ%åiùE\u000eqÛëXã÷\u0015míQ\u000bN1Xä!\u0019H\u0006c\n\"°tt­bïØ~Å>)qcÔÒ\u0007­)\u0000Òqv}ßÈ\u0017ýÈQõ\u001aç¡.¼º\u0002|Ñÿï¦@Ðo®uØ×½|\u0001:}Ð\u001cpÜ±·ÿÖ·Fy£(Uî¶\u000fK;\u001a¦3>Y@ÁèSYÀ\u0001tÛQèyM\u0014©>ÕÁÖ%ù¨\u0006\b÷¼J^Â\u000b¯ôtBíü³m¡V! ûÚ/\u0010QA ¿¼&Ñ/R\u001c¿qW.Û¬¼ñËÊhTÁºå\u0005{Ãâha]NÈÆPÙ9\u0000;bKwF[ñó\u0006+²æe²ÊWeÌ^2¡\u000eã>1vÛÅ\u0010é¶x\u000bØ÷\u001b5¸©\u0003ð\u001ei=MiMH!UQ5çR/\u000bEÅÖm³Úö¬ûF¤ÑZjå[ÌrP\u0000=M\u0016xÂ\tÈ®ãÄO/ÕÈ\u0000d\u000b¢Ø4Wì=}·'~T\f\"Ô¶°\u0010'ûóu\u001d3\u000bý îç&5MÉQ[7s¾¾¥©c\"cë­\u000f¼'lÕà{î¦\u0011\u001aÿVÙ\u0011\u0016èO\u001bÈ\nYAM%£r¼Oª6TEú ?!©ò\\\u0010Ký©1\u0000d¦ÀÙ;Pª>kdÇjm\u0002Q=MßR\u0014D>_®ð/by©§9ËM¸\t\u0017pð';hõîêe;\u0001R¤¦Ìù³ô @ãÛöa\b'Ã%´#= ¡¾g»ê°+9ß#,³è~\u0013>1[ð@÷X\feñ¸ÑÊ+>\u0002ý»ÃF;[\u0002aÿâ÷wKVÍÚmÌ\n?\tô!¯Ú\u0007d\b\u001eiø<f[2Ìz\\Y8RÛå°CW\u0019§FÆ%â3ìÀY-l\u0015òÓE\u0006ðÙ_²ÞW{¸£ ®(_4!¶WX\u0012x_0\u0000cHü\u0007Ü\u0017|ÔÑ\u0014G¦BKÑrwî?¦'Ô\tÄ<­Q[Y\u0011Eý'\u0015ÝWÛæ8TÂ¯\f\u001ekÓ©z- Cîry­´OÈÑiù$I,ò,Þ\u0015¬Eà\u0015¤ÏÁ{\u000bÙ×\u000b¼\u000fLá\tÎà\u0012æ\u001c\u0003ì\u001bÝÕ\u000e¾ã\fX\u0016\u0010ò\u000fF0\u000eã-¤·\u0016rê!nu[\u0005jZ\"Þ¹ûq[cJkÏÑìö14k\u0001òo«Ûzä©u¢2\u0016U\u0004úu}!º\u0001©ñ6øx¯ii'GBä«XÈp7\u000b)D'×æ\u001d\u001dWm2[\u000e\u000f)íë8\u001eéª5D\u0014cNçZ),\u0016,ð+»­6ºÂ\u0006ìßÇ:Áâ¸\u001bÙ3ZÀ+\u001a¡³PY\\®ßi?ns(\u001cDõ¶ÈÇÁºëO\tÔg]eL\u000fÓåW\u0006¸1Ï\u0016\",\u001f{4e­æÑ_ÄöoÅ<7?rLèÂ¶\u0001±Áç&k=}Î%L\tÎ¡)Q¦[õ·E§k\f\\Þ\u0016\u0012\u001f,R\u0006ø§§\tÄ×å\u0006J\u001d\u0000 þ ALÊ­Ãð¬7Iã|X¢I=}¬#Vúo<µ;×²®w\u000e÷\u0012º\u001dU\")LíîÈ\u0002ÂNúEnMV5P³I\u000eH,6~)Øe\u0017ÿ0¶¬= 9´MjR\\þ\u0014õËÓMVã¹I\u0015%-ªc\u0002öÇ.JJÈÎ\u0016è=Mä ÃõV$õ1¿H+å<Tz\u0007?[«bú{·>µ=MÄHÊAN¦É{cð\u0013þlÖÑ\u0011-3Û\u0000\u0007\u0016u¶Pö6p1\u0001Y9UÊöL­£¶¿l3Ç²Ãð{¼Ê\u0019'h1yZÍ¯8ú>ÉJH¨If~«þy3³ð½Àjþ\u0015\u0013= Á«t;\u0016\u0010FÊ^\t\u0013\u0019R³²\u0015c#\u0007ðÓq%Ë\u0017\f±¦½çcÀÕ\bòkwé{éÿMèfQ\tßß\u0012D¥ð\u001f¶ÎSË>\b\"ÿmå(\u0014<\u0006çó£âüï·B-]²ãñÜGþ¾RFÃbg®Ý.ì¶§ÎN\u0016\\y©\u001e½\böZshàw0ønÄ\u0005¥X\u0019¶ß\u0004ù\u001d\u0011\u0004\u000bF³Ñ\u001b´Â\u0018¥¸µ!t\\=MIÔ±:S\n¯\u0018E*\u000et9|§äÅ6\u0014äÃTï9(×\u0015Ý«ÕôËWÉ¶©òó#í\u001d\u00037¦âHoëÚUfðd0·\u000fh\u001eWÓc0¨\\0Ë%#°´¾½f?[´Öò\u0007\u001epÕ-¿H\u0000uH\u0011',4\\âæ/=M]=}yÌ\u001dâW\u0005i\u0014¶û>\u001alõÂ\u0019Æq+IñA= =}5ëïx©ÆI\t$Cùó\u001a8{Ñ·o\u00058ÃµJ^¼+¶è\"Ï\u0000\\ëli)î2»\u0016B¢Ã tÁ=Mu/g~k\u000b\u0004Y\"Þü=}à42YÑì½\u0007ÅÈ9$sS@7ëHëï¾lQÆ\në¦\u001d¶è¿ÁÒ\u001e\u0017eÇ\u0018£'»ïïZ4Ðzsñ\u0004Nùá·\u0000ôá= eË¸¬f&\u001dàÔ\u001eD\u001fIÏ\u0016Â!6\u001b[µ¨Ö\u0005ýù«j+ad´_R6ÂÏóâÏíð'záaXD<Ç\n\u0014¨Çä\tni?P\u0012-oP\u0010æ¡¬-ÀÝóïM/Ð-¸½Åã<nyµ W\u0015L(H\u0013«3õ<4!:\u00049Ù²©Öh+!8N¯ûÅ(zæ9B*ú¦oL´V^ÿ;öKåSë\u0002ÁÙRÓE²«W_x7\u001ckÒß8\fð!Æ\u001dª\u0005 A[ QÅôy²Ù°wyf=}\u001e4µ'g~L´#ÃÕ÷5ÈÛ\u001f#\u00033÷1\u0001¬C= J>èG\u000fL\u001bÂ=Mîtºô\u001ftRÏ?Ùôyê\u00071?´u\nî7\u0003&­0L÷zãE¼.Ê¹\u0006N6)6?sG=M¹?BE.WÕ³\u0004!çÃÓ\u000e\nzÎ\u001cä}\"ú3Ö\u0005¢/µIê\"þøÍ¢DZ\t(ÕÿIõÒÙ\u000bTIzL0fõjûNHÛ\u0000û]=M£WÐ\u0010Ór@\u0002\u001f\u0001Gúi<\u0001ò,\u0003¾8bo µ¸\u0006ê \u0011\u0016ÐN\u0010Ø9¯.eáV\u0014H^cxùê<÷pÂÆ¼&ÆmQ6þý¥XÖuE\u0011»Ö&´Ù<\u0010¿>Aö4K®%\u001aÇ\u0000äwiõ/#\u0010\u0005\u001boF¦5B\b024¾ÞCYZ\u0016©eYêgðÂú³G[¼°þUõIkòs\u0003ø0$­zY6ÒÑ\u000fo<ño\u0012\u0018å&&\u001fw÷*Px\u00074H<Áë\u0019\u0006\trº?¯\u0002WìW®×î3¤öÚ6Ét\u001d´\u0002WÕ\\\u0006.ô<\u0014¨ïmÑddòiV³\u001b1\u0001;J\u0013U&æI4A5\n9Ùz.Ö\u0005Ê¿>9ÂgEb§¦Vá\u0010>¯ËE»£À\u000eÉ\u001cûÃ%TY%yrßMÁæ÷%\u0016n\u000b\u0012SÑZ\t\"¯Ê\u000e\b×H}\u0007Oþã\u001dmx9:\u0018M?\u0002+ ÃpY\u0005¦*þ\u0010\u0016Å2\u0005³æÏ«àjð7Ó6T³Ó6\u000eJ\u00169Ü\tóÚþT2nê²¾·< ÆÛ!\u0006÷\u0011\u0017+æzÂ·¿ä¡=MôÌpPýØU\u0016b÷_\u001bâ÷Rãm\u0016Î\u001e\u001751Êï}·?þ³ógk\u0018'X/\u0013\u0001/³Aþ0\u0018ËwfÌ\u0015òYó[\u000eèu!áôÓ\u001a3\u0014$dY[¿\u0005Í)¯g$Â\u0001\u0005åÈ7íHE¬\u001a\u0007ún~ÇÊB'y&Lãë\u0002ÅN¼ãÑ>¹µÓÄ\b¤50ì$\u00199\u0007¶î&!ò8mÌh\u001c¹Yº\tK/wºyÿÃ6(\u000b&< {\u0013¥á¹\u000e«?'ç(î£Ý\u001ff(þ\u000e\u000f\u0012§ÝÒwD¬]sãµD\u0015gÑE¢x¬\u0014{C[Zý>\u0013>VvÆåLH×ÝîÅ³gÚë\u001cÉÊX\u0016ë§\u0002Ú?\u0003¸)Es\u0017uy¥Êu\nÄ~Ùå8[ÈÛÏÆÕ\u0003>\\\u0018È´©@âñXÇGN%@Ý\u0007OþW\u0014ÛlÇ\u000bìu\u0007½äöÙ:øYïªpÜãr¬\u001c\u001c®2(¬Ú½õâêG×{È\u000ec\u000fxQ«vºx©Oÿ\u0012%Ù\u001cÁÆõfÈä\u0005L\u001b>ZUÀ¶J\bÃÐ$µ=MHÒ¨Ñ(Én\u000e7§4:¶¹²\u000fÓñgÍµ_M\u001c\u0013ý'^½Ð}\u0011=M\\¦E³-}ÉYâ£w¹Éâ\u001dGY\\\u0018½«]=M\u001d­\nçªr\u0004\u001cò\u0000¬&Ð\u001fÍà©îór\u0011ÁAìà\u000eÖP ¨Ý°ÔìÑîa´¸\u0000Ïë¹è{¢°µ\b\u0003\u0014¥Þ2x æ\u000eô²âú-~ê\u001aì\u001e\u0014\u0007\u0014íXÊ%ÕÂ\u0015v\nô~)hbüX\u0000µ¨Õ\u0005\u001e4~\u0014ìÑ_ÜIÏ\u001d¦\u0001\të£\"¤$#ç=}ø5(\u0005 yW1N\u0017a.Ð\u0005êq\u001e)àüfÑüpà½fæ5®y\\\u000b\u0015= ú/+\nÏ8«\bâP\b\nê\\.°ûé+<¦³º\u0019cËJ@Ò0\u0010Ê°zµ$&EÄ¶\u0010ÁÏ2(³\t\u0010dö©´kèqTß\u001eù\u0015*ÆÊ°óÛeÅ\u0017k»)p;§UyJ¨ë¦Yò\u0001O\u001e\u0011Tr\u0017E÷%´\u0017e\u001d\u0011Tr\u0017E\u001e\u001bT¯\u0014\u001eÑ¦0\u0011aZÞàò¸ãl²¨%Îñè4<¶E¢XÄëf¡\u0013Lð}ó;Ì}= Þ\u0013} ÛË\u0015ðQZÏLÒ¨!@È\u001b¦îö¤Õ\u00185oöüoöP â·\u0015\\\u0012\u0017îÅ¢<®w}fÿ¼T\u001c¨T\u001c¨ÛÇ­Æà÷öÂÕïhvPöG6ì \u0004P\u0005P-nðþ$\u0015ôpû_~=MÃ«NXÃ\u001e\u0000ínîeÛÞµ[\u001fmª4ùG\u001b\u0011l\u0014»@i5ï9¾lX©\fëîN«6G0´÷#\u0003J¸å×ï>RoîPîcV\u0018¡C\u0003.°\u00072Olè\u0004o\u00039\t¡üGü)g\u0013ëâ[¥=MÝÝÒ£â)\u001c\u0005îr|tSZKÀpX\"fìà§»¬= HUmÍÔlôa2Ví9Y§\u0002¬k\u0006±W\u001a¡ñ\u001eÍ\u001bjéñ\u0000Z\u0010¹\u001c¥Ê«ú\\É\u000eL)zfBÞ\u0000<_^>\u001d¬°p¥2= ûìÀàÁð\u0010\u0015uäe«¼\\{&\u000f;Ç'v¢\u0010»óÄ_¾¸\u0000\u0018\u0017\u001cÐAÕ%H<J¡Nß?ßj= ¢©'a\u000e\u000bÉ°i> ;uËD\u001e¸XCï¦$;\u0005³w\u0013DÑRùJ®ýà/Pä%²ð~¾à§k)Ä³r$R:\u0004Y®¹xv6ª\u0004ÖJ&CÖç}È´Ý\u0001Ö\\×?¿Þt¿ð¨×´]kôCÍnaØý¹\u0018õúä\u0005øt8\u0003àv{ln3û«\tÓÇmË½×µ¡zü\u00157eÏø\u001bVÙbø@FE\u0014§,î9 }~T)ÉªÂ\u0019¸\u0014C\u0002·-¸?\u0007zR\u0004f;êÈagÄî\u0012ßÆ\u0019m7JòË3aJÒúã¢\u00109¹I¿f\u0017WÇç\u0016\u001c{%¨ÐÌI¡1Y¯Â\n½Ý:÷M²ipÌ²õùÇqgÜ5«w¯\u0004hI.[+¬Å\u0003\u0001£Ôáj¯Ï´^8O\u001aµ\u0010­øþ\u0007\u0017Ò¨qÜ?\u000bX\u001e÷o5é\f¢H¤èò¨@¹Ú2\u0014PY\u00065¯DèFþRwy\u0003(Fg5\u001a8ÿ'\u0007+ DÂhÏ|I¨EÛcD\u0007¤J\u001f'K\n\tËBðö:ò= ð,¼=M,yí¤l\u0010\u001f£b\u0002\u0016í\u001e\u001btÂ¶ì\u001fpE,óÑ¿3\u0007Ä$H\u0019r§^+5Ö\u001bóP¬0_V®F¦\u001b\u0000=}}ä3y¸\u0015ñé\u0015%HíÓHÊ\u0010;é Ä}<\u0017?zêÀòp\u0017\u00041W§0Æ\u0010uáãE¬/E¦ÒZ8òÒêÏÚûïö\u001bí°¹\u0015!º6äBÔ:I\u0019\u0006*x5K\u001a,5(Øjz\u001bÚº\u000eP~q\n\\\\=MçEW\u0013^\u001b³\u0002æû\u0012;)\u0014!*ÊÁÍ¥8(7\f8\u001aæ\u000evuüÿI×¡ÞEe\u001fo\tOôCúÞ¹wp£t\u0005-¨YÉÑ}Â¾ÁJ ç¦B¸´¦\u001cþ-â5hô ëG\nRgêUjë\u0012G¼CÎ0íÇNUjPä-:5Úý,oáé-\u001a¼ðr\u0014]\nñ|â39&9¨oe¼qô\u0005ä nñ¯\u0010Ë$reú\u001d¼æ×Ó<Né\u0011\f\u0003^MÅ¨\u0011Ð\u0005~N\u0006ët¥/\u0015Sh\u001f6&«}7©ÃÔ\u0006ñl­ÙZÞè½Ð¹·ãU§'Ä\u001c¬¡Ã>²\u0017®Q4!i\u0004Àé\u001ac¬ø{ËtÔ\u0012U3 7-_ì,?UÎì ;p¿;PÖ»õ\u0003'cîÑj1çjÓ\n«Ô%àõo\tþ\u0007vìÙ!íçsÌí\u0003\" >ËfÎDL(D\\Ï\u0014Ccð\"Wà±{d¾]³FsHÄ´w\u0004ý6\u0007= \"\u001dÛèÌOÞ'\u001d\u0014Xñ,\u0018½Øä¿±QÆB\f×\u0003©;ËÏ\u0003ã®ÞY\u001bÍJóUýí\t~t©V~Òl\u0006Ô\u001f{Ù(¡Dk¨!§RrN®X3\u0018ª\u0004ÏE/;¾3bH=}D¸ÿUÃ¹h¾»nO@äDø\b·ÎsËÒ\u000býV\u0010××\u0006/\u0013n-<¢ÝxTcÉiª\u000fm¬NnäÑìÄò¿{\u0001®OÁ\u00172¦w0\u001b\u0005cmw\u0001\u0003§J\u001a\u001faq\\c¾ðÖAQ\u0018ÿ\u0001íÁs°N¦ôg\u000e\u0002v2QüûAÆìúÑîÕ8{æ%!¿\u000f1¦æ\u0004±&ßÒp±\u0016¶ÞD3ÇªtV\u00105'Ñ\b\u0017d/×ëÝH°5Þ.Ï\t¡È®,­ÿ}þî\u0010phËãý7\u0018Ú\u00197\"ù=}ýûö\\\u0000¡\u0018p;\u001d5ftñQ¦¯WyÖ\u0012&$Á>GÂU®µºÂåqöót¹7\u001bÃïçZ\u0001\u0004ñ\u000667o@\u0014\u001dÄ:@¼­N6­e\u001bñÀµ,ðË3= ë¾p¾+m,³Ão ý@J\u0004æAtª¼.í}ö­\u0005\u0001©×íLs= ¨*R1ú¬tar!ù %þb^ø\u0011\\\fQ×Öámf\u0018ÏØ\u0013¡àdÚ\u0003º¦Wð\u0006]íÓ\t\u0017Ø\u0018a¨§¬o\u0004ãÏ³FÂZ\u000e\u001bJõÖ2\u001cAkæè[&õmD\u0000Þ\u0015\u001cU\u001fÝ\u0002\tänçòmÂ0\n\u001bá\u000eà\u0015®¥ÒDÕ=MÕí/\u0003³²ù+)ç+'&RIÙn0õ¨\b[<\u0007:OòëøÍ!¦ø±¨úÈßO¸~Ñu>ÿ5lçF\u0015ùD\"é¤s²\u0010Ô!Ò\u000eNU§mRu@\u0002â÷pÿ\u0003Ò»qRNlÒ÷Qv0¡8ä¤ÿP\u0006.ÆÌk\u000e¾ògih\u0015Uc=MÙ= úÓ\f9\u0006@ý6ôB²mUn(\u0012ÀÕ\u001f\ný\t)C!y'¿Wgõ#\u0007ïÜÑøÃ§«ã3ÔÛq¥m×3WÉ³÷.}Ax$«Ü9hÊ{çÕú²\u0016­t]¨oo¯\n­Ì\f¿Â§©ú,\u0006ê÷,M\u001c5)AÃN#Íp kÃm!?ê [\u0007%¿½¶\u0016¤¨{b>\u0006\u0017\u0016PªnH0%V®ÖäçÙv×\u0003þ0\u001b·}ôWOÅt»\u0011MÌ=MpeÕm¯WñÈtüb\u0013»½i\u001d\u0012Ø3#sgHÙ,º\u001cÏÇ\u0019!Êû[ñG¢s\f¹ä\u0017\u0001fI\u0004±E]MeN\u001d¸¿\bFÈVy\u001a4®È[\u0005.:=MÈ­G¦Ãä\u0014\n\b\u0001\u0002\u00179¯ñ:)ÿÓ9\u000f\u00175M¹AR{ëå´\u0014Y¸43ÓÞÉ\u0015©/Y¦Uµ!­)r\u0010Ñ\u0006H£;s1V8\nÌO*\u0005Gã0d÷\u0010@è5¢öDt';>ÁÿÝltÊÛø Z1æ¡e,+©Á ×Þ Ýâj\u0017\u001eÒÚ9\u0018\u0004»DbÓ\u0011\u0010åHS üì\u000b±H51\u000bq|¶íÂ*ÑÁ^ïªØÛb3-Ø°=}©}Ô{?jt\u000fÛÁ5ý¶?ÐôbXÐrhÞ8\u001f¯ð\u0005W\"Úéî¦Î\u001fNûò;ÊB¶Xê/<ÿçÀk\u0006¿ÖTg\u0001m\u0006÷ùÄEDö°gåXë&_/¡¥4Gö7\u0013ðÃ\u0018Mf9\u0019ã\u0002¥G\u00049ËÏ\u000f=MÀaQh±Xì\u0005\"Öô ï[ãGgnâ_dU}Æ°}[íáÀýí4Ú \u001aùù@Ë¥\u0010= gæý(\u0007p1\u0001ÇGuÆ3ìâ\u0004QFÙ\u001d\u0013ôLÉè»\u001eáUJÔM\u0006£'ÇÔ\u001aKöÖÀ\u0018Q£õ:gxq/c/\u0003-kMpí¯J\u001b\u001c%Ö!§ï<n§«\u000b\u001e¨Ø\u0000RGÿøjõqY!\u0013±¥¶\u0011°*Ô\u0015YP9h\u000e\u000b= \u0006\u0012¯Þa]¡¹\u000b\"\u0007º¥= Ðh·¯fGÙOéve^E\b¼ç¡ö\u0003\u0000\u000eãH1¯Jä\u0000Ã¨ØÈ\u00110¥\fÄ[\"³ïys/Ö\u0003¶¤\u0019nR<Ë\"cg¹\u0004\u0016UÌ\u0017­a£¼¨ç\b­Æ³fuåÖ[\u0010\u0002÷JÆ¢9|\u0000â@­ÓD$Á= ÚÙ)üËæI\t\u0002sm\u0012O\u001bùÈkþRòI­aëÃlÑ1:Íi{¤\u0019w­²E¯\u000fÔóm¦7kZ\u0002ÚÈ\u001b\u0015Y{øSeõ4\u0002\u0001\u0013\u0012'n:Ú¬(:ná:\n×*BåÓè<\u0007´wCP\b!\u0011ØpæÎ¿çÎË°%4E9{\u0004xÁU[\u0001ø©qéÒÿ­gÑw\u0017æ¾= 4\\\u0011´ÉB-Ú©Ý0ÓÊ¼h\u001b§HeÌ:£Àø¨]-BÕÏï2w3xÓ®º°\u001cù\u0001ÊêDÊÒæ\u001fyólÇ\u0011p\u001aV\u0002Í^µ¦ù±¿Ów!6Qòý*\u0017\u001cï»\u000fFkª¦;ÿÛÞ¬¹\u001e\u0006¦­\u0005ÜÖ\u0016LÒ×\u0019ó\u000e\u0017ÓF<Ùäf\b\u001bÒ\u0011ãã3|À7ñ\u000bêÒAu\u000f»ùª\b$\u0004Õ½ð3è\u001d¯ÁO¬(µ+6\u0011Ý^äÕeMÚ\\\u0002åÄôä>¹0Õïté¾)xêl©È\u0018û\\&kf\u0011Í5[~pv9¬ÊîRï\u0005:ÈtÅ\u0015ã\u0010¬äiÑ]\bè#Pï_ÿéA®\u0006\u0002Þ²#¦ân\\¿³âC´w*W9ðpð\u0018O®W\u0001#¡\u0001\u0003\u0006F-C(61Åõ\u001bfÃ\\¿Y´v¯\u0018»º¥Õdî\t~¢;ÅvÊº²¿_1ðµmjW\\6\u001a\"h»%:ÈðäZÙ¶j6%X\u0005\u001eªíËr7{O\u001c\u0003ÕhUsWvÉ\u001eÃVã\"\u0002Æsë³PÒB?Ï~²\u0003Ìß\tx£z¿t¬Û¬´ ­\"¯}4\u0000åàwK\u000e·´Õñ°ÿJjý\u001a@_ÉÓS·~Y¶Ö&÷+AY8\u0015\u0015¦ª¹O4Ù¾ßRøÛüYl£Q\u000e¿þÝwþô9¨¿ÐZÙ\u0010ª¿2j\u000b6¿\u0011ìiîF6{\u0006íT\u000bjÎ&\u0017^-·ÃJq\u0007jqy~lÞS!ºdaâ¿bé[\u0018¼'®\u000b\u0013NªI²ÀÌ\u0005\u0000Jù\u0006NÔ\t?/7-¦\u001dtIç´\u000e=M\u0010¸^\u0007\\ðÚcÏ\u0002ß\u0013%\b|Ú8µ\u000b¢¶,G58J58M\u000bu=M-ýúÁO0zªÓ»®o%ÎÿaN=}Oï6.j*ÄÑ¤Ú9[q³èr.üS¦¹\u0014Äæ1\u0007ã1Q¨óú{Æ5^¬\u0000®$:}iQ\t\u00139ØT\u0011Iáâ¤\u0003<<¸4@ífyë¼EæÓ!\u0007×ðk_8*6= T¨DÎ/®¯\u0013!ð½-ÑVª¨´[¯U&TyðÓÊÐ\u0004\u001d=}\u0000cÆÒ:ç*ü£À\u0017¯k\u0015»EÊ>õ \u0015Ñp¦éiÝ5ÓÒ¢\u000b¤@·Ëôep\fÁ#qú®×\u001dnÍ÷â Sk@ÑÂ?3pIÑAk¯»×ý ½6÷þ öþ°@2Õþ0±Â&D)î7d±BM\u0013:\u0005Ú\u0010\u0018üE¼\u001f\n\u0001)f=}6i9§(Iñeë¨9\u0013)&=}6P7tëv\u0013ÁûùÈzÂ±B\u0016O\u0013â3®²ëh¼¸×zb±Bö\n-\"\u001f)aë.7tðv= ëJ,\"9\u0018üIC'gºY\u0019X'ÛGñ×\u001c\n[¼àFI^Ö\\­òl\u0011ñ ä\u001dÇÚw§ªÈ¬\u0010õQW\u0003F¾ßÓfá%})¶»ä©\u0007q¢^âè¸FÂ~aR9;È<Å3,\u000fÉR\u0003O[P{ñf{;ø<m<Oö=}¯@ëõf{;Vö=}gD¦»ÝDp{õ;\u000bÐfù4A'M7ìU÷¶¨¹ì;Y\u0019P[Pû8ö=}ï?«¥»;b²@#E\u001bÿé;x<W\u0014P;Â±@C\b±Û¥F;ÜV\f°\u0016\u0015Ý¦ù\u0012=M°n\u000b°Ï\ns¹\u001e&®7ÊúfÁ:'ö\u001e2\"\u001aXö:\u000bö\u001e1¢\u001aXòz.)ó8*É\u0016z7)ó88*É\u0016Úµ²\u00179\u001f\u0012 1ä®«¬6ªSJ\u001f=M§D;\u0007Z3XV^hÄyçäÐ=MÍÑn çp\u0014\u000f­Þ§¦\u0014 Âô=MrË¹ Õùü/·õ×\u0003fMkåÒ¥Ü(Úµ\"2þìÔèr³Ýª2ìV\u0011¡ôÿóQ\nè\t\u0015\u0000Ñ\u001a§~-]D\u001dþÆOjÚ¦xµ5è5ù°A\u0014ðóß%}+à©¾ðÑ¶þÏéX\u0019ùâµª,øð\b¶o8D®4yÇØ5¶qB\u001a\u0010¶\u00072Ùúf\n= ßå6BË%Zù\u0012zT@\u0014çº\u0015'ZDÉó±OýÂ\u001eÁòÊ\u001chÖð&Y#Ì\u0001oÿO- \"d¶ø!= X¦_QÄA³/×\u001d¨\f=M¢\u0010-\u0006,\u0018ÇÁî¯Vñh\u0019K1\b\u0005\u0007DóW:²­¶5Ìó\u0004\u0016ðu£Ln7ÔráÔr%\u0007Î\u0000\u0007.¹ÞÃä{C<\u000f\u0003ÖÈ]¤\u001fN\u001aýx\u0011C:Å¯n¹³/*\u0017¸\"£s\u0015Wh¾Ï+\u0006Æ(³âóÆYt<0j]9LMsScÒíß\fr¹aÍ3\t= ,­ýø¡\u0016\u0005\u0010U\u0000¥9^f,u\u001053\u0004J\u0019µ­ìíÉ³Að#ç¾õH­¨hüÁTJt¶Md°JÛ\u0003ÝîtÅ+~ÈsOggËóÊ$«c§-,uY¸Ù\u0017ZýÚn\\8\u001e¾¼âé\u001b\u0018\u001c\u0015A#¹'à×Á\b\u001fàò&v¹É>\u0018\u0000=}7#PbWU<w\u0005íî\f\u0019\"ÜV]Åx%U£\u0004¯ð]\u0006ÖÃçv\u000eâõ÷/S±@ÝË>DiT:ÿ\u0002iHiì+;HQ]\nßãT´j\\è\b´gl2X£\u0000\u001e/+\u0011S\u001eÒy\\+#ÈÆ\u001e²t\u0007>äÏ\u0012(ô%²ÞóuôëÏ\u0001ÈAC¡ON¾\n\u001ap¥qTXü&ÛC\bæáÆhLH\\°<ìñU*ñhÜlÙWîtxç\u0010Üd¢4É¦ÑèÕ\u001b æëdw÷HÏ~~äÀ\u0015\u001c/µ$ûE2à¶\fKÌ©KcfB°î»Q'ëÏà~¯¥+Þh\\3víÈ\u0017Oÿú¾\u0002ívUÈ\u000fWí¹\u0015\u0002ÊIWsVþl .\u001a\u0014²0K\u0010²·&%÷?=M\u001f\u0005SÝì\u0007^júï)r)\n³#\u0004eó§þ'6- \u000fÎ²ÿ²UR\u0005p§/c°,}êùzI\f5Ê\\¦r(/rí\f\u0016³ZPRÁñÁo;\u001eë;T\"¯æ*£þ8 u.1= J¢iY8K\u0003mÙ:E\ni\u0003Þæ½õíÿò\u0007èÊÁ|°±\u0016ð0¨]\u0013ï°s!Ê­Cp:Ýx5\"(\fz¦æ/Ü<Õ,¨9cÝM9@4= ¬À\u0001=M=Mæã\u0016HóO\u0006×ªÊ*õD¼Ï¾j<\u0000\u0015·WÈ%Bd,´\u000f?x\u0006\\W¨ÞË=M/üÔÜ÷Ía¼H*ò\u001dûGm­4I8ÖR²¨÷*N\u0012xÇÝeU¸I]îÝ[Çð@fzc\u0014:Ïy÷ÓgÙaS\u001cçy\f\u0019\u0000½DP0D'= 1d\u001fü¸ø~Î^.ä×z+GBû0<o= È¯(Ôí{ÇM¬Õ«-u\u0002Ëá3\büæ\u0014ßb&hX\u001f\u001d ¤(ÛæÄCYÞq\b\u0010\f8K\\sÌðdØëÚ\u0018ðsvÍ\u0006\nk©ÖlVlXÒ\u001bÛ{5ÿ\u0000ÇVaNîç5³¾YRPôä= wµ\u001eb^Ùp\\= )\u0003\u000fmbV\u000f= h\u001c°¦á6u\u001f\fÕbæQ!e°\u001eYª\b¢ñ\bN¶ÄLü,\u0016wÆ\u0015\u0017ìh\u0014-æxAûQÚ3uÿ\u0012\\\\ävòe¶OÏl8%µaª\u0012\u0004ËeÒjö½dòìwÎÊãtÒ§-´×¿\u0006\u0013\u0000ïYY\u001c¦Ë[Q=Mòa:yG/bÞ\nõ¦Kz0læð¢^D= \u0018\u0017\u0002^Þoâ\b\u0018Û\u001d²@Ð÷fãÏ0)À.u­ùa¥/iÌ e¥ÐÈïU¯=M\u0010Md­ÍÅtaæsóãôV\u0012ÒpÚê³SäÞ?q¦¶]­î\u001d¥úpUäÙë\u0000¿È¤ýQäù\u0013Õ\u0003§\t=}³+VÑ¾ÿü±¬Ï:\"O%oo@ú2¬l»{p©\u001d®\u0014\"¬\u0007ÚÅñ,¤\u0004«\u001dæ\u0014ÆZ\\9©2³Ø£±ä0íg|C\u001e\u0019ÍDP¬cËa8»@¤Â\u000fnà\u0002U'­Ö\u001a[¦ÙÁ\u0002×Å\u0004d\u0015\u0000Û¥Æ\u0004ò&G:r ¢x:j\u0016\u0017$¶âD¨Øaï\u0018Â³¸?\u0007\u0001Æ\u0000ÿ7¿j×-\u0005oúFÆ3>}U[é>#ï}cÐå'ÍØnÒe!,gª2z YÎ°V\nu|êÂÖã\u0017mÉçñu1àX-\u0000ªbO&dùoVx\u0003\u0001\u0011Í\u000boÊÄy­ãhúkäçË!¯\u0012äÂÏ\f©dá_µÛh£ôY,É¥\u001cåK4\u0003\u000bzC\\Q.aïE,#\u0004´é\u00066§,(¡ú$-3÷ÀÚËz¿^j)hâù&ð4³R\u0004Ä¸³êPÝ\u0019¥ó1ýÄ\u001d1\bw:= ñè>éÄï$z$Öh[Ü½KV?F{ÕÀ¡Rö!;|ì\f·¨oF*À~<tK ëØ-vç×Åd,?ß?1Öó\u001a¢Ó\u0018\u0014Ô´¡9nöwö²%Äg¦\u001fØ½Ld§ÆyÂ\u001dæ\u001dÀÝ}Û\u0013åß«\u001bÅR-\u001e-­´è4i®Z.Ñ<BAóI³ñ\u0005Gr\u0006qðqhp¬pô¥'©·\f\u0003\u0019#óÜÿ«¾ü¢ëçeÌ\u0001%\u001a\u0010Î&\u0000©ÆH\u0000e\fTåÎ/]\u000eÄösÉK¡ò@§¼bzÄ²Ù6Ð\u0004D¢*8ÄKU\u00021 2ù\u0010S¥½¶ñ±¯0°õ±a7÷\u0013\f\f)\u0017ùé(\u0001J'\u0002\u001fúîúºöåòðqñsò'¤rÀqØ:¡7h0æ5\u0006½j\u0010Úb·é7\u001f6$1\u0002ZÚ¸¸#³ú\u001e8\u000b2ò\u001aú\u000eº²ø¬Þí,¨~þ½ÁÜHX0ò&®%Î%¢\u0011¶\u0011Jèrç\u0002&\u00140ãY´*\u0001Ä|û= IÖý´·ÜÃÀ¿·IÒÂì\u0013½íH\u0011WNLñü¤pLbÙ­ç\n\u0011\u0017¶¶\\xïÓ\u0003Í/Ø~§éº.\f§oØùÇÇí!Á,ÆÛ¡õÑÉ{â#\n¯[¦÷AþB´]h¨ô\u001e¬\nF= Þ\bïMÈ¡Ü\u0019{ñÎ=M\nÊ?Æyëí#Un\u0004¢\u000f§%©Bx?ôÝ¥5oØ¿\u0005\u000bèù²øY\u0012û\u0006Å,º/÷4¾ÁLJp\u000bpïÁ1\u001c;3k5dX\u0001Y\tZÄ\u001a\\zøÚüö\u0000|º\u000e/²ÕÈ\u000b[Kp*â\n\fÉ\u0004\t¹\u0001ü³ w\u000f6]f0KÄkÿ}X/õÌéÂ^B\u0014]Pe{zËB¦xæÓ°ÂÀ5$Ue#ýÉÇF$%Yg©_µ¾Eu\u001dpïY6&\u001aZ]Y\u000eX'¨%÷ô= ¯AbùÐz 5ybðp]z¸ÂÎàY\u001d±Ó!g76Ç¸Y\b\u001ew¥Ö¢j¡:1.Ëp8v&ò)½Êsû|gWì45s\u0004§ce\u001fEóÃ~E?C0±ò¸´µ,{'Ý¤¼)^ÁÓ\u0000O\\ÿ?·YÒþ¡Ü%\u0002Jæ)\u0017÷ë^¥ý\u0003|¡mL\t\"íÌ2¬LÈ\u0010\u0018ö¯%!õ Æ¡Á3¶uv\u0015IìÓTV#_É,ðÆêÑW\bs\t\u0001O´ÄÜYþè[¼ËÆÉGÌ)Ñá:5+ø\u0013\u000bj&JÙø\u0012[ð1Ôðe\u001e\u0014ÎÊßÄ\u001býßøâ*\u0011Ô\u00155Àê\u0015­ç/|> seoupö/ü¶ìÄè3%X@Ðªà\u0001ÙÎöFéznsÁaXgçµ¢©\"Xø){ ø·ÿÿÀ¦±\u001f¹-|¥m=Mº©\u0017\t7Vêhxbi\u0013¸å\u001dà\u0004{¢:\u0014f²!\u0011Tu@iÇ\u001a4¡)siw¹üèrÁEBÚ4,¶ÛÁ,{âÛó\btà²&HA3\nÃòúë\u001dà$û\u001dJP\u001aªkî/Ùúo #Ô%AÔ¤\u001b\u001dÐ¤)ùñï,CÙö%#ôBZÇ\u0007jÒ´-ýÎJ-ü\tîM­\t\u001a8y'ï v\u0019·¦!KOôd\"} .\n!þbg²ë\u001f±¨.{¦Ê®\u0012Wx.ãü·\u000fÇPÊO¸7\ty­¥\u0015¼7\u0006ZAt³È\u0003y²*S¼FT©\u0000lãüÇ{F_³ó«gVlX*üiDÐûõ\u000bû&c\u0017yÿ|\u0012\u0001P\u0002ëUÃ\u0006QQ½j\u0002Û½2[àa}ûê\bàè¾Î¹_ É± YZG³\u001d\u0007X²\u0002Ð±ðdQÙa\u0002EÆìiåñ]ÿ\u001e\u000f¬eZ\u001a¾\u0010{pÃuÁÈýWÀ¬}^¨ sh¢¾9ªÌØcBU>°K±ÌwY\u0001 ÿÃ\u0011UëÂºË*\u0004Ö³BùN«\u0010²ûmE®\\-Ã,s\u001bÂE¶û±B+Xa\u0012Î\u001e¬T\u0019Ã¨ý;r+û\u0012}Ñ=}\u00199\u0019ï¸3Ì²\u0004§\\@Ð6M[\u001a¿ÛåóHÚ¼¦\">ø¿.ä\u000f}£ëW|¬:¯a¾ä\\\u0013\u0017À»É[¦Üë]u C³SâØq\u001b·\u0017Àõ¼dYÈÀ{à\u0006»£ô£÷#Æ\u001bW©>ÏÐ\u0015´§\\âÉk\u0002{]Ë=}Ñv]Á~HtÆVDÞT\u0007»ÓýU\u000b]\u0003\u001c³·V«R/ÙEÎê\f±å?oþü5Ñs±{\u0018}\u0003Dvg¢Mÿ;A¨ò+j«2kòtÝO\f \u0007ëDöÄ\"\u001ef,b«Òù\u001bn\u0004·\u0003fbÙûý\u0018a'$4¸dRÖWM\u001f\u001c!\u001d'oýü\tµ\u0013\u000büÀ\u0017»ÿtgòòp¸¤³°ø\u001f'ª6òéPlvgû¸ßÈ\u0010;ÔÚ_³#}!ñ¸B2Zy³m©\u0017òt¼å®Ë²íL,Ä= |{Æ¸Ïà= \u000bOz \u0006óCº\u001aÍC*¤ùÐ¬\u0016J Pád¶ÌÌ\u0019ÙPPÜ-0x:å÷÷ë(\u0000ÐfÀ¨é÷\tÇwÙL²$#Üè$j\u0006\u0005E®QX\b¥6øç÷k2\u0018æ\u0007¢vêùe£\u0016ù0£|¡(&ç\u0017\u0012ºù\u0003có\u0017ÙP9õwà\u0015çÅë/04Qø´«%\u0003\u0011c:\u0017ÉÝÇçÇÞê¢\f¸øh]¡ºÞ6oêç¯2ré$ãCûT\u000e¯¤máùÐÁ&l¢¸\f}tÒÄ¤eÙzû}\u0019¥ÝÀÝ¤uÈúÖ¡ã¤é³¼äÓM+ÁÇò/t<\"%H\u001e¨Å|ôòyûüpPÏ7\u0013,iÙ\u0010o\u0018î\u0011¶ÇêåÃ8\u000fÈsÃJýkò:7»ÀË@ýÌ\u0007\u0000[{#sA\u0012?}F{ÍD\u000b¿»\u0017;LSHY(rPÒñ2ÿ4ÖÊ&dÎ7ágì¬\u0002êå¥Öÿëµ?\nÄ\u0019ë0\u000bä-BH¥\u0017{$sq¹'Á(úQ¶+áq\u0003\u0004h³\u0007\u0015\bB­\u0006Y\u000fæ¬ìÀ\u000eóë@f±\u001fOö\u0016¿TG­-Iï­~!\f½FrÙ÷]\u0000Ñ\u0001A\nÕËñ*´\u0010&aÄ\u000f}$Wm¶¤ý\u0011^Ò*\u0012qN>§b\u0007Íï {¤ È\u001a4Í¼1)N\"ÿç\b\u00039ø7\tîA}eò°¼»pI8¹4\näôøû5ù÷Æ²·\fníí²IÕNø±n\u001bø:ñß¢r¥'ÿlæ\u000eJQ¸3hÏÓJ°IÓTÔÓ¬ß#\u0015¾ò\bMä=Mü =MÇ= D$BÐ:4åÄ\u000fnZXKqj¥þ\u00118ôR*ø¤QJS)Tí«°\u0005ÉÞ@àPÊ&kÌ\u0017\tn³\u0019-ÈvÊØø,ãéyýn5)\u001e¢é\u001aê8aÍe(wa\bõa.\u0003¤\u0003\u001a}%f'\u0017b\bÉÖ´ß#\u00058rÏÙý¡Ï:Ï\u0003¤6Ü:\u0015¡x~f¦\u0012\u001bôì&îÉQ¸ê\u0001ÿÑÉ\u001eágØñB)\u0002Î5m\u0007¢7/4\u0006ÎnI×÷/ë\u001cöÙ\u0004ÛÌb\tÄ\u001a°7'ZzP^÷âã\u001dr(8(\u0007Ðöp*9\u0011Ç/ØTTú\\®:\u0004®GyÄ4«Ê\u001c\fÄK=}4\u000f>fÊ,\u000eR\u0001aá§z¶6.³\fm\u001d:\u001eøû\u0006CtìÆß\u0003§}HÜ ëþlVqdt«yYey^\t^ñË\u0003?}HQ³Hk&\u00176ã\u0000ÒLä0@Ü[æº©\u000b9\u001cÖ3°$°¤=}\fôûæÂ]ÔÈ¢a\u000fqÙa\u001c\u0013ùa$ÈÍ§þª\u001d\u0014Ð\u0004Ö8YãêOLu·iBéA÷Ú[!p4Õ\u0007^\u0003îÇ'»ïÃòdR{u´?îôª¿Hçÿ\u0006?5Î/íÀÿb#\\ôLj\u0000Ô)ûJÌÉ[¯7\f,º$\fÍh<xA¥v\u0007AWeû\u0003\u001bõK= ÝM\f¤<lÇrK'DËT­¦\u001eóC!òÀáÑ;0ÔÇO\u0004\u000f\u0011ìG\"Ä\u0010®%e CjÌE&½Z\u000b\b»Y\u001f\u000bìÔix-ÿfäÀSlÈlêÏÐ\u000b>³©Ï\u001f¼#p\u0007¯zùj\u001b\fD[»ÃÒk:ÿ%o\u0004\u0007zÔ{Ñ×AÀv^äÌ\u0013ý&§F\t¼\u001dËWsæÔ5= Z-æÜ\u0016I!0ANH¾\u0010üûöÅ¥!¼s^x¦léP\u0012õfØpÊ<\"<æDTçÔè  Ë°ÎÏßÀÏ\u0007÷>ð¬»ÆISop\u0007Já:\nNÜx16;hi\u000bê\u000eéßÓöO÷ÀUG(Gñ\u001cÞ_\u0000kÜ,Ý·÷Q¢Ë|¨¨Aa½\u0004Ëc¤ß©\u001d:À7úå#KÈÑô¦ëc%¼#[= à\u001f+\u0007Xß½Á\u0014+EúD\n:%RÌ^ôÙoâÓâF£ºÞp£½\u0012±Y7-\nX\fy\u0004k~h~\u001ba[Í||jd®%ï©ñ8.æ½ÃkóA\u0017ÛfûBèÂo÷|k0²Ìê¼JÝÐyùDy\u00043«÷\u001c9øí¢®ÉW\u0019Íóµ 'í\u0000Æ!Â3É¯¯ëîìÓ$\u001eW2·63/ \u00004bJ¡éÆÈEJÙ\u001f*\"¢¤§{k:\b»\t)v­ù3)ônÐRª\u001aó#&$\u001eYSzhw&üX\u0002²W\u0019ÚANr\u0013g?÷\u0006ÐÑF­­\u0005\u0006î]÷·\u001bÊQÊîñ:¬ã7£\u000f½Ýã7ÃÃÃ¯Q=}Í#í\u001bÓ-ç\u0003Yz\u0018Ù·³¨ßM¤Ä Ûv3©ÖÓS$ò\u0003rmd\\\\]\f!èúÑw×ð4¬|\"ÿ¦v\u0012ÿÇë¿7µ'%ª¦\u0006nÑ§ï= %Ý%\f¡ÐúêúÊÊ Õ¹¿êÍ\b}Ö\u001c§¤$Î9ï^bfa¡¿%05º _áê\u0015Íìßc\u0015\fm2\u00141Ø B\u0012\u0019ë\u000f\u0010º÷§ýÐ\b\u0002m]Ê_\u00073= ,RÿàÊê\u0010½\u0017CÐMìBÙ\u0005wNÜÕ\u0005¡æÍMÐòÇL·vïÌ8\u001aI0¾°\nNRé¤6òÚ$4qÛðãjR¤Ð\u0011.î wu\u001aØü\u001dmÇóþá¤uÖ¶¿¡#¿³ÉäÔW\u0013ÿcBaHW6G\t\u0012\u0012?\u0014ÇdBàx^û\u0001hÆ¬à4s5ÿ\u000b¯¹\u0017ßlÞ\u0011\u000eo%bP\u001dÛÜ[G.ËCS?#SM]<×¢¦ú^_c«LFë{G]\u0003F<^m¿{Ë<=M=M×zêúó²ßl6\u000eú\u0015)¦­qNàeÎC.DQy~­°8'£ª68\"øöò\t±®Yn\u0015\u0019Ë_«Ü;´Üå>#4ú.\u0012\u0002{ËªBM1}Ú®«/L8³®\u001ez;êUû,¼v­{Q\u000e\u000bH+zsM\u001c¿¥ÅÍâ\u0014Û5V\u0002ÎR³|ÿÄ»>\u0013&\u0013ÅÔÔ2p\u001a2r\u001d]\u000e³\u000f¾9Xêh\u001c\u000f\u00189ðeû\fµë\u0010{À4;nN^~>3\u0010ÎÃOÛ5ê:aùëS@s\u0016ûiZ´\u001aë= ­*\u001f(ò§ü\u000f;Jb¦F^lÁùr7°\"\u0005\u0014\u0017þv=M\u0012éí¡£ÛÒÆÞ(\u001b¼!\u0001mDd\u001fìÌè\\ÇG_O¿\\i\u001aû~ÃÈKtSà4dñqLì5wÂ8'S\u001fè\u001c¯®¸?ØM\f\u001b\u0019¼ãÚcþ\\_è/m&)ý\u0002\u0013#ìSÆ\u0000ªÚk%¢\u0016Ó¨j¢éÔ\u0001¯ÃVâÎÈ½CâÜ¨òã\u000bÏ^'Í8=M\u0000 ¯ÖÝ*>¸\u0014¸'6ÿW\u0015{mç\u0016\u0007Cê\u0018µaÒ\u0010\")\b\u0012\u000bx\u001eØzà.\u0007º]­lÚÆp\u0013:\u001bëdI3¨¥ö¸\u000fºë¾L64+\u0015\u001eHvöÈ\u001d\u0016s×\t4>óX\u001d[2*o²XþTw\u00103NÖíáOAU¢¶ÕñE4\\(-Ù4.ªTr§ÿvTÕ\u0003¤ 8ïØ\u000e\u0004%p/¯\nZ\u0011\u0001VmÝÜ)ßlðz§:\u00008W\u0001^s=}qM\u001dnÎ= [\u0003C¤¤øÎäù3º\u0017Í\u0016'G:âà!\u0017OrVFCO½Èþè\u001d\u0017A9¶2Âæáv\u0004àOÉ0õù\u0010Ï¢b,T x\u000b\u000f{Êý\u0012òÂôD|1¡MÛÆÜ¶ö¦:\u0003×!m\u0003Ç.ô§ë/¯o\u0012sï©\fÿl~\bHÿ\u0007ê4\n\u0015N\f\u001eçB#Î}yg~+\nYDø*\u0012\nâ\nÓk¿%©9õh\u0015 Ãy.êçÃ¾ç/\u0007U¸q{¨ ¼?%·Ñ§h{ØHÀÜaw\u000f\u000e¯¶þ£¸I%©4&\u0013flJ°ºåeÙt\u0005¿Êohj\u00052hHSå\nøzU)\u001fbÂöccI%&3-/=M\u0019 \u001e¨È«»\u0011èéöHY\u0012¼Myîîï¸å9ÊxìN(Y\u000e¢\u0006Ö\u0005\u0017\u001ft)5S\u0016\u0014\u001aZYÒ)ÄØ\u001faM«Ó\u0001L\u000bàÛÉãdÁ\u0015\u0006>¬\u000fÎ\b\u0018Èú\nk\u001eÝÙjPäÙmi%©µ¯·,«xIÝ\u0010jjáÀH^Óx&\u0006ølYmqãYQa²oM»\u0019\u0018---ùà9~/TwÕZÈ²<Øî×\u001dm(ÚÙk\u0010ÂÖKhõ!\u0012PbÎ\"µIÍ¥\f0°ºª·«©2-KbôÓJ¤\u001c\u001a/¤\fÈÇ¶\u0014³W°zT\u0001~Õ\n\u0000\u000eÈtã¸r\u0000\u0007ø¨j®\"H\u0001ãòø,µ»Ô;ïÉ\u0002ÑsVl[uú\u0010\u0013o¨óÏ\u0002\u000f3,á\u001d÷:[ö&±¹¸G6Ã¾\\\u0001\u0011Ñ\u0012\u0016Znd\u001c&ñ(Z*)<1l!OòÚ²·è!©Ã®T¯%Ì»iP\u0018°Ú\u001c\t]\u0012îVy¾©A¾)¶ÕîÃH2&\bä´SFYð\nrøÈSSxèºØ§b!m%Êõ\u0006¤NAMW(»y9Ôîÿ\u0000Æâ2\"ò¢R=Mâ\u0015@8#%eÊè+Å°#µÑ= \"Él^sõ¦&ÖÅ×3\u00115\u0001\u001bø¢o\\¡.¿]ÔÔÐ(£*Û+ãÿh«öN¼¸^\u0001@Ùö3qÜªç\u0015\f1yün!xQTv4\u000b.ÝÑèØ\u000bt\u0005j¯!7Cÿ}ÃLQ\bÝ\u0014¸'yj¼¾\u0015\u0002|\u0019dÃ§!X@\\\u001b;A5êúîü>e¿$wo.~î[ZöÒ\b$\u0010«o©JêöÂ\u001a\u0000\"z:Â[ázÕä\n{»= §+;æZW}ÇÒÁZ{þ$&>§\u000e|@!/¼È\u0006( 0¥3UyêB&)$M-Ô¨T¿>Í·@Ü_sV/Fum¦g=M-A#\u001dkßÆ^{%ü1\u0013WOtC¯9µ@Wá]\u001fkHÜ\n[QQC¨@_)Û¶[\u001dä~\bÁ£i\u001d\\yM{WÌ¿_ÁÇ\f;ÄÁ]B\u001fÉ½ÌE´òöK\u0010ç+\u000bÄ¹ØGðoÒ$\u001eãÚ\u001c¾>÷Ø'ÁÓ\u0005Øl\\q­)/\u000bÄ9\u0019©ÞÁJSÄôC£~\u001dÅã4îá?B5óÊYyÿýÊ?ÖraèÅs¶Õ\tu\u0007\u0005\u0017½î± ßéT.\u00067ÔÎb4¶ô{!¼á\u0011Ü\u0018Ô$¦\u001eÒjo¢µ#¿¬Y\u0013c çN2(\u0013ï¬\b%àLFýâA@{x¶t&¯\tÜØT¤&Næ!\bC{\u0016\u0004)1\u000e(ÖjØjisÔ®³O-é²^É¬lßÄÑH»ÈÌtG{Ä¯Oxö.\u001ff­§è¦¥.GòÇ\u0000\"\u0018s:Dõ;:e@wk\u0017twïy²wWÞÙw\f-\u0000w9Á,wÖæKx@èex¿ýx!xLÄ½xÂÚÎx\u0006íàx\fùóxuú\u0007xê\u001cxOÅ2xI= By\u0014/MylZy£\u0012fyÅ\u001esykyÏZyúyÉ\u0001«yëÒºyÂyJÊyÓ Ñy´\u0016Ùy«)áy\u0013Vêy6òyLöúyb\u0003yòÝ\u000by³e\u0014yÏö\u001cyG%y\u0019(-yAÄ6yùK=}zZAz_ÚEz\u0019IzfQNGÔ>{×WûÖ¨\u0016±8í¨\u0016ó\u0001\u001cÈô¡\u0016ñ¨\u00161\u001d§\u001e¶ñ\u001aÚ\u0015±Jma1\u001c-Ï<ÐJ\\t=}½\u0001\u000b¨ëI\u0010Ê0Ôr\fSØI!×eî_\"ØHý\u0013¼\\ä\ti«ÞíûÎJdyS5ÎVÃèC\u001c\"Êkm=}^\u0014ícÕâô­nÙ±¢NôùoT³eYH\u0002-´Å×å5$WE\bÛ\níÉ\u0005ý: qf®Ó®xÒRV-\u0003\n¢\u0003K@\u0010\"PgEÝ2}\u0004ý{PÂÉæc#Þ!ì\bÁx¥é·n³ÓÛû«sk¶Ù\u001b\u001d±|\u0002n½Ù²?NCYøQ'9_c4is6«6ÊÛ\u0004züe\u0004\u00129Ê\u001fàþ$\\QQpp4bÔUL=Mâ#f¸Æá=M2£cD¿ÐXÐï·LÚ\u0002Ô®Á:ßùPÍ5fÓ,U2âo\u0002¤ÉÊ=}\bò^ Ú Jà5Ö½\u001fÆ½dbß41FI¨L×d#p«ïëCâDíÞ@\ty=}ÔÈ\u001bìÉ¹ºüÅñ½Úº\u000fgå¹\bÀ¥7qåTxÈò®u¼öÕÔ5¥\u00190nòùÕd\u0010e©LòÀ\u0018¯PÔÔey3åsãê\u001d¢PáÐ·÷ä\u001f&±= ÉÐ÷-û|Ê¼\u00118³ü\t¨EoO7É\u000b\u0000ü¿qE\u0007e.¬\u0013Ú\n-Å·ÞßïynÖ\u001fÞ´jÊ&.C\u0005\nÞ\u0011lÊî.3ÐÆ¢i©\u001e®\u0004«\bàé¦i\u0016\u001f«¤I\u0001tt7[Â!®Ë\u0004¡\u000b'§\u0001¿\u0011jV\u000eågg\u0011¢lbpFf\bggz¡m®aaÔÔS#¡3d¾Ì\u0016nSg\n[¶A\u0018&=M$óuØÓ\u0003¯Õ2â\f(o7âßÜ\u001cË\u0001úº­·2\u0003äjÎ\u000e³Û×ã¶$lÑùÔ/A¦ ³B\u0004s\u0015}üüàß=Mæ¢e*\tâ\u000b^jÀ ¾S²^Ô>]TÊL\u0004\u0017Ý§M\u0015þÎ\u000böÌ\u0003G]é>MÄtÚû´=}¦vb«&{wLL,soÇ¢\u0005Õs¯×\u001d\u000bºX\u0006×-7\u0002Í®tÁjäl\u0017§T~6H\f§®Ã¡¦ O¨b¬èOÚ1Í\u001eX\u0003ÖCQ\u001b\u0011b½\u001bx\u001c«F¢¬ SòO\u0003\u0016À\\X\u0005°\u001e!I\u001c¯C¼Ú¾,gC¡®Ò=M\u0012Aì\u0003kÃ\f¢>T\u001dZ ;)T<CÈ;õÏ6\u000eðÖzN5\u001cr\u0001ÊT6·lñ1\u00004ÝJ¢··\u00137\u000bÖµl\u0019Wä.Ý)À3%\u0004?ÀbZ:´« ÝB\u0018Ö³«ø\u0013ØÚh\u0017Ô)\u0001\u0007\u0011©oÖ\u001d\u0005Ö\u0011éó\u000bãÐFaà\tw¦%\u0007Ê\u0004ç*¿v-1Â>mXS3\tÙrD1G¶©\u00028[vo©\u0013íû\u0004ÑÈ\u0002§\u000bqï\u0007¡¦ÑJëá·éP*¬±×= \u0018zT¢ü\u000b¶$?xIÕ®¬ßt\u001aQÕìãàTÂPá¿\u000fÔËP}.\u000e\u0001/=Ml¡\u000eM^Iïkýy\u0002K\n\"A\u0017²l\u001b\u0000©¸Í6%Îç\u0002ÚJõoD=M \u0001lXÑI\u0010|®ÅqïóVß\u0000Â^ÕG\u000f\fS·Ê¡÷6£ïòÊ]ì\u001ecÁÊ_4\tCGGu²s,\u001aÂ¬\fºS6²Jö\u000e¯mÁ«\u001f%©ÊU\u0004[\u0011H_=M¥[&QH{0øz÷5® zV2^s÷j\u001a2/\u0016ywÊ*È!Ìï(\u0017Æ,dxÔ¯÷B\u0018ö1ûuðvU\u0002ö\u001c\u0014ôV5\u0014±ãF\u0002\u0015±\\yõnf±°]öbÙ@¯\u001f õIÃÚ(\u0014\u001c\u000fÙ¬.\u0016\u0016ÑUþñe§þ¼èäS\u000bÕú-oz\u0017ÍX\b-\u000eê@Ñrb5¨nEÇÕ\u001csädVjr\u0012a3p¡üÁ7\u0017Ëq¡HlÖ\u0017»qÒ%\u000bìy\u0006½&Lô¾d\u00129N?J;}{<;\u0000í¨\u0016ñ:\u0006ñ¨\u0016ñ¢\u0016ñ¨\u0016ñ¨¦¦:§V>E+µ\u0017Ç¦^úr\u001btëYb4µçü{òEðôÐÏÏ^ô÷GD\u0002ME\u0011PÞ\u001fÃ\u001c\u0001=}Á¶\"ÌùtÒy\u0014©\t\u001dÈA<V=M´\u001cÑ\u0005Úðd/«]ª¤]F\u0007\u001eÚXÞ±Gª\u0002®iÍË<L\u0003ºF^åp¿ò½gE!À;¡\u00005Üù\u000eÒé\u0019Ïg-ý\u0016¾\f^\u0017\u00046)\u00057¢eªuì_\u0004¼\u0005Ø1g¯ïà§áHF çã%¥\u0004%Â!¯n \u0013iNQ\u0015T\\l\u0014Ëº/dê\u000eà7½Iª½ïËå\u0004AP°°\u0006XPoÞÐËÞ\u0003C´Q0Ï^.ÉGîÞß#öÍ*\u0005:¦:\u0006ü\u0006º\u000b-6À\u001f'Ú5.Ø> Ô­\u001bF-ÑÚëS-Ìï÷²S%ú\u000165FQ\t·)~õ$\u0017\u001e,\u0000\u0016çÖ«¾cËø3¼®Ç$¶ÕKÚ\u001e\u001føxý(PBtñR²\u0018Ø\u0014=MËh\u0003B§['è\u001bþÍpÓ è\u001bç=M9)ÿá.´¦pÖ¡[t·e27aÍ7§Wn®r©sEÂ«µ\u0014{×í5j\fÆ^¯áónPÆÊ°\u001dôõá'Ò\u0007M\u001c4\u0004ýÿÅé=Mý^\u001aè0Oe:Ø¿²Ñðóî\u0017cº\u0012NN\u0010À5W,)ðÏãF9hu;º;»:FWÀxÂ\u0012·x±ªxOx\u0011ìxôxK&tx Ágx{]ZxgøLxí?xð\u001e(wR\u000ew±ówF¸Øwmê½w5üw9_UweJ\u0004vÔâvvi¸\u0011ô=M¬öæ\u0019\u001eöáÇb÷¼d÷\u001cÄ÷Ûkß÷'8ù÷î\u0005\u0014÷\u001bÑ/÷lìBøÎQP?ü>SAO{ü\u0014¨\u0016ñ¨\u0016ñ¨\u0016È¨\u00165jñ¨\u0016q*\u001f\u0018\u0018\\-º\u0011Të§ùSUêL\b\u001a±\u0002ô\u001e}ÿPd$45AøË-Ö* \u001a@tÕÛa(\n¯ ÿN\tíÍºzs\u0003WJ$c+LîjüMozñP= \u0003Õj$kr1\"Ð\u0003Ð²\u0010Íyð\u000fuÆ\u0012²ï82NfÊ:\u0005O\"z«6 Z=M²:ÊÅJµNðázf\u0010AìÜ³c\u0014n-\bÆlS\u0000Éb±\u000bÙÙÚÁÞ&É:sÒêÖQk¸l¶-ÒpP\br\u0012­\b¦>6º\u0014½8\u0001(\u0015À\u0015\u0001Gt\u001aÎsª¹×¼ÐâSr WE\u0012ií\b$E¢UêNv.q*ª\u0019~\u0004$\\\u0012*w¡´*âóuz^¥6F\u0010ù_6\u000e¦\u0001ú \u0003vG·\u001b\u0015²Ú\u0003\u000f7\u0019çêwÉû$÷MÊº\\Ðÿ\u0014%WÇ\f\u001b1ThÁ¹âþ<=M\"¹»<Â1TL¨ûF1p¢Îð@çãÊò!\u001edg':\t¼F8Ø3\u0002\u0005ÔFÄG²ÞÚB@À\u0016ÙG7\u0014ÖÜEy£J-\u001eîÀzn>Ä0D\u00035K­M}4:sÉL3Åo\u001eZ\u0001-/\u0002³Ñù\u001b7z¯e_\u000e\u0017fÐ\u0018U¤/ZÓüE\u0018Â\u001eèÚþzþ-{zÚë\\À\u0007=Mh\u001dÖ¼= G\u000ecêt²Oek:öÅäªå4*Â\u0017ê^íùÙi½\u001b<{é?<Ûwñ¨\u0016ñ¨\u0016ñzñ¨\u0016\n1Æ¬ùðv\u0001¶v97«2j¬\u0014À.:\u001adÍMzc×8ãCqU¾7ºóv¢g\u0002\u001c+©W\u0002\u0001.&?-§bÍ2þ¹oÄ\u001b= g\u0019fì0ÃmVÓªá\u0005\u0006:å-¡ÕU\u0006½\u000f4:°1ª\u000bûyÎ\u001b¬wwáÀª¾q\u0001ÁuçõÝþ\u001c|%W0s3ÈYá&Þ\u001c¢»\u0010h>éhot\u0017ÃYUÌ÷ýÓ\u001fSN¹¹¥ý¿\u0010á×Æp~&ÔTjÕR¨|.^Fyiìÿ\\\u000fÅÚªr\u0002Õòq¸¦~éÿÑê¨'ó®\u0000IÜ\bÙIÏZ®~Ü^\bºvýubqsÞ±þÔ½F¦áØ®â\u0015Hâ©\u0015\u001b\tþkJÑ9\u001bü\u0000|/÷s¹\u0003Æùoª\u00182Ó\u001dþz\b·®ýÒ\u0002Ô¹·,ûJ\u0018\u00049woE[%;ÁÄ¼¯9W}ªK&Ð½$Z\u0007 *KE\u001c¹cZÂ-M\u0001@\b«\u0001ªI\"÷²?ª\n«[vÍÚ©mènÅX*ÞÃÙVÙGrò\u0000«\u0012fÑ¥´g´Ä¬c9R\u0002\u0001=M³9óN\nÀ1?a9Ùûã_ÌÂ\u001eÎÓnrÄH\u0015\u0004sç\u0001\u0015gÀÀÖ#í 7\t¡õßlõjÈuÊ¯B\u000eT\"Ðü\u0016¾T\u000fµ¡M­[NÔQ¹¶íc«\u0007!9\u0011§)!ËøqB¢¾uQ äÍ\u0013\u000fwiù\b\u001eªyÁÊ.ô»)²@Wj\u001f\u000f4}×=}ÆSîòÃÆÙie!\u001e\u0013MÁ6côý\u00117­iÐ=M#\u0001(h \u000fe\tä fã[-·@\u0001)ÐOèç\u001f*Ð·¥éÝ4:3ÀöôÕrÎ¥ó\u0012~#Òp÷Gç´hÎz\u0011\u0002=MÆ°óv\u000f\u001ekîY\u00148µ½MV\u0003\u0017\fû ,Èçè¤\u001f\u001aÅe\bÕ\u0003S¥(Òÿ¶oÎqæÔ¾rÖ$E¤\u0019ÍQaw¥\u001cÂãñí7f\u001d#qÒò-ëÈçë±qj£b(v\u0019XWÓ\u0017|þ:uSë%\u001fb\u001fØ\u0003Ðö+g#\u001dê\bÓx(rÎö·øVh\u0018Y)Ò/ÛòàÂJµ#,# ®ªjÉâµT6éR\u001a\u0003y)4ÀyiÈ*b= ùZ\u0016$8'\"\u0006ì>'ÉU\u001b\u0004;\u0014¢Aë4¸»?*|ù£X11|±9mÃÜ\u001cKzG,5K-\\¯H\u001csÇã¯S\u0012ÀþóØZ5¡SVÂLGFcÚtý&N^7³²?xL¦Þ/°Ã\u0013ë¿\u001c LrÃ3\u0006×S\u000e±lñ\u0006\u0000Ã\u001fçªÆlÑ)\\\u001c É¿êA_^á}üjM5yód ¨ßÏ¨P\u0019Åà§^ $d¸dà1ôÏcPTh±m©À\u0006\u0013[\u001e§ÂGîTméêÎ¬$ÃGÈæmñ9_\u0001FTb\u0001D3UC÷²O\u000bFQSQ«eQëªM#WKÓs\u001b\u001c]<Î0=}f±DXP#ZP3)íûÇ:C4\u001b\u0015j=}P²@]YFïùKó.\nÚ=}-\nGÇ>¯<OÎ\u0015ñ¨öüöì¨\u0016\u0011Uúñ¨\u0016ñ¨\u0016ñ¨WÈ\"\u0002:\u0018ª *Üz:4 *ÊúE¸:cg:é\u001b4|Ü\fnÀ!rPýe'\u001aáKôÜ\bÀ\u0011´EL<E¶öe¿£4\u0007æø¡ÝaÕtÑaøöT6úa·ÊÔÓm\u0001È;NbæÔ\u0013°\t\u0003\u000eÌ÷ØÇ÷8©\u001b/e>\nÞGsÑn«¶ÎÙhµ\t%$ï\u0002TXV)¤ôà\u0012\u001dÄàU/\u00107:.c\bÌveù_æøcýdæÃ\u001fÒÀ\u0017h\u001c8=}I¿P\u000b2¯y \u0004â\u0002Õw±\u0011\u0006\u0019ÛYø\u0007¿INrhÖ\u0006txÙ\u0004\u0011aÔW \u001b¹gØù°=MÔÔ×)õ±·ücd§&Ú)¼_Q_LÎ\u0003³=}æ\u001dT®jÉ+¥¬çìÊ ·G\u0000â¡ºO.Ù­ñ§_\u000e\u0015+\u000eh×\u001a\u0007pÂ-³­C\"?ÎóvÃ4â>T°n»\u00118ø.~2\u0010ÒYú·4\u0002Ööº÷ó/\u0006Î\u001awc2üØ»\"©_\u001a¬\u00000÷Fz2vn£ØNÊ¢t=Mã>ô1/CñÞµóS1þÁ\u0012ç\u0014ï\fÅÞ6íqäJ\bçµnìj\u0019(¼¬²ùVõlûðf°æ±\u001cûðc®uMÍ\u000b<òQ(Ä³\u000fÑ¬F\u0015+máp4°\f-}F\u0005Iª®¤Á%¸Ng§\u0007À»wí£Ã(%5\u0017Jè\u0002Æõ\u000fÖ\u0019ð,ùAúb¢~Ê¥×õ@ú7\u0005sçÿÝàPk\u0015Ð\"/\u0010í\u0007\u0003iþ®\u0006=M'ÙÍõè·l\u0007Ño3­±7ÍZ¢ù\u0006Ä¶\u001f\f\u0016Ê\u001d:&Ø\u000ff0fùÏ¶Ú\u0004&%Ê8¼Gè­Ïú= \u0000êö*Ò \fæF­51¶%Ï?§zi¶RYÌz^JØ½¸fò/\u0014\\2¥ªÐ\u0018Úr\u00057.&-\u0005\u0010í\u001bEtVù²_Vg!Æ)7§TwªÁ\u0017\bÙe6Í´\u0000\u0002øÞà\u001fÿLÍTq}UGÍ\u000e²5\u0004QG ªÌ'ï\tÌ\u001eÖ\u0000ö÷¿jÃËúp½ÿºëò_¹¯LÒvä³÷ê×#=M\u0001$[@z\u0005»ã\u0001­X\u0012êaÅ1Z¾\u0011;\u001a\u0010\u0016æt\u0016©±Ù).Ø¨\u0016§q¹óh\u0016ñ¨ò(ybJ\u0014\u0011ö'hJ:ø¸³y1¬b\u00119ÉeVM\u0014]\u001f°4eSøOÍ*C\u0019xæ@\bÅ\u000eýäÓ¸ýoÐÈýÍ(Æ@H\"¤}\nõÜh{\u0007g¿¨À~¿ÑxX¿u$õ+ãpq¬\u0018§i)çïQ\u0005½fï×Ve¶yã-Øîî\u00056¤¸ÏÑo,ÈÈbýßJ @=MûHn= 6\u0011 3Q¤\u0001Ä¾²%ÖbèÐ)\"öúÑ=M\u001dUàß¾¨Íö}ØâÉ#ýÖ\t2\u001dÚNB­\u0010L·\u001a¡xY[Ó-)2\u0002,\u0011·ÁåxZë\u0005ÐÒU3+ â½³ë_z«xÙ\nI\u001e2Ù.\u0004l÷\u001fô×BYc\" Zâ¬Føwj©i\u0012î»v\u0018\u0007êåj\"è,jT¦´ü5HóíÔ\u00169\u0018\u0001.ð²,&¶ô\u001c<9£\býÊ,|j-ÅñE)l¿.¥Æî\u0002:=}Êæ!¬\u0005u©ù3eê\u0015·¾òv¯Ör\u0019\u001enjy\u001f:I÷7!zê³6º·2(\u0012÷$\u0001vi9\u0003z×:ýr+\u0013¸z3Õ°ú4\u001bt7´|f\no¨BÐ\b(=M@ª\u00057HÌU+ç\fÿ\u000blXÌìáN\u0001ï*½Ç\u001fé#\u0012Ha\u0001xëªg5\u0013F²6Û£\u001f9\u0012J¢½B[¹:{3°SÇt|~Ûð®ci:UÁfÉ^Ûð³_\u001fÊ|BèÎ¯\f\u001cËY\u0007ú&\u0015s~o V\u001c\u000b¢N£#ÔÜy\u0015WrÑÈ\bS¦UÆÁ\u001e,i¯=}¹ÖÃIBhÛ¬\u001aMeè£S©¾&1=}\u0011ÿn3a÷¦Æ\u000f\u001e±ó¯\u0000Y(:\"»¹zXÜÝ)ÇFøKwýPbÇ\u0017+­çv)µù\u001bDh-½^.Á(¾ª\u001e¸L©%Â¨ºó2J{Ø[¹:Dÿð\u0012|+õLÇ×\\Óó\\O&\u0005þëdyW\u0007i=}À~]2vMé\u0014\u0011£/iÅü\"/Åþþ¢¬K²\u0001²¡=}=}b}\u0014ÓC\u0018þ«\u0006\u0001¦\u0018O7´Õ½\u0004\\®þö*¤sú¤Mu¶ß\u001euÙè\u0007{Ýa·Z ¬Q=}µ¡^´qYI±\u001a\u0005ü\u00183·\u0006ÀÐgJôe4£ØÐÊ¢ØE\u000b<£P]¸\\QñOÝLßóOÇ9\"Å¬ÿó?ÒÐÛ-ªD/^,ëíO6ÒÜ~¹T&\u0005qA(T}\n\u0003\u0016ÉÝt\u0011\u0006l àWjeWâ»\u0006µ@·)dëÛîMåñW\u0005\u0004A= ±\u0012e,î|Äý¹]Gç¯JRgÝìÃzö'Ìg÷i6nLÚzÃ9\\Ý.z7ÚÃJ¨]ø9^=MÉr]Ô\u000fÅ_\u001a_=M-GÌmé=M\u001c4%Ý_uæ[º²@ô\u0011\u0003\u001aúò\u0003¥fÞ\u0004¹ \u001fõåÏÁ\u0019d\\hðM% \t\tïjóË÷^F\u0003]_ÚÅ-ãÒiH\u0011\u0007ÜHJí£6ÁíH\n[ â¯zÍ>·¤\u0000\u0006¥]1i¼!\u0001\u000eÂìÏäR~õ\u0005c=MúW|\u000eöÁ»¦c¨hDáôV>¤ó\u001fr¸¤&NªÍÙ´=M\u001e6)\u000fæ\u0001Ð\u001fBØ\u0004¯¼^\u0014= \u0015\u000eð\fñ/$Ò+Òç\u0004y\u0010Í12Ù\u0018ÊÞT|\u0003\u001b¾T0dqÜßQ~UáÖú$\u000bàÓ¯áµs(\u000eZöâGÝv²6Î6\u0003ùÓ\u0015ÆÑ)'\u0016¯\\ê¤æè\u0004¥/±¡Bm¬©Lôº\u0014\u0005\u0000\u001aÔ1\t\n\u0007$\u0003¡®/= .\u0017.3º°Ò\u0010\u0005énY\u0006Ù&Ú¢tÈ'\u001f\fNçt\u001eKfZõÂhä\u0014\u0005-\u000e\u0012îGÈÐ'\u001dõç\u0015£Iv¸§eæ\ti^=MnÊ\u0003¡\u001bKûÂvî\u001cúgÓ)´^ñ¨\u0011¡\u001d=M¾Àïäëç¿\nýt$Ñ+ã&d\u001c\u0003µÜ´0OÜ¥ÚÊËo³ÛëõèÈ\u001c¦Öî= 2eW®æ})\u0012´Ñ&\u0006õ¸\u0017¢\u001c%\u0016ß\u0007iÈ¸c´²5\\\u00106¤«îø4*6^31)¡·ÂØH×\u001f\u0001ø!?.æÖMó*9W)¯üö?\"V¥!-iQ³\n\bæ³í\u0005É#(7üÌøwè(kr­w\u0000Z!\u0017+3@93X\u001aé­ÎvHô\nFÙ-Áì0÷\u00037xzn-fÚ\u001a,b6ñÄ\u001aÉ§BFPwYÝÉðzpL\u0018DúÒ¯£J31&Èæ\u001264;\u0017kYÇ¼rÂ]n¦?1å¥\u001e\u001fOGm{0^g(¨Å\u0005$!\u000b8uAb¸\u0002^£\n\u000frý\u0018\u0004AnSaýQ®ú\u0015^ÛÚNEbó\u001bÌâV=Mþx\u000bx\u0001Fþ¸û÷7ë¡};É1H}\u0019\"çC\u0000­ s©]9¸OgQ\u0000û\u0011_Id¢\u001dì\thL\u0012¥Í+|8é'\u000fÕ?ø\u0013¯?)\u0006ûëjÔc\u000e\u0004ãºI1Q\u001f] Yÿ\u00104³öñ;\u0006ÒQ}tôCf\u001dÆ¬\u0002í?¡%à\u0013Å¹\u0005mgnËÜØG l­\u0017¸j:o@\u0013@§ØÐS÷ÄfúÏ+]\u0011ÐÄsìÿ%Ö]WyÄs\u0011gÖ\u0006%òßf\u0015]&L@\ftTiÏ\f²æmõ}xõP\u000eêÄÀ¯²·y¤¥ þ\u001cg5¦Ù|Æ¡ßÌ\u0014\fEsÔ{\u000eÑ\u0001Íò¦Ot\u0018F^PQÎ8d¤ørê«âf$\to¤ãx8x[Ë(%ÍtÉ\u0001çnÞÔ6G$\u001eAXÝ½\u001cÏ¤mÃ\u001di2Üiy\u0018d0¯*ßá.9*oíÁ\u0001r·2Ã(s´È\bÅz\u0002÷zY¢Á¼öÔ\u001a\u0001°ç0\u0015}Ñ4µEöÖ\t\u001dr5l®\u001aÄ'1Æüç\\ã>Æøi\u0003\u0016èLïÖÀ|\u0016e¨ùRBaEHÐ¢MßÏãØª$Äß=Mç\u0004.\u0000·\u0017¼ªnD õ\u0019´÷\"\u0003T·ñ\u0015y)5¹ùÊÊ(·ÕJÏ\u001fL\u0010r4\u0010jô*\u00122÷5=Mù#¯v#Ñå~¶¢\u0007z\u000f>\u0004õ8ySæ\tÉ{Ú\u0012õ«:£¿\u001b\u0016!ÃrYØç\u000bµÐÜ ×>åÛ&¼¤æ¸kgz;Ö0}Ë«]WÒÁþwqI\u0018\u0005M,[x@U\u001eb\u0013\u0018G'1\u0003\u0001ÿôÃê\u0003(\u001c}/Q\u001e\u0012\u000bÇÁÛâm¿p\u0004\f/|¼éBÐc«Q\f(ë3º(z2é¹:ºoû;@ÕS?¿\u0010GSk\u0017«70>³r<ÞaåUGÒ;\u001cBAi¤°óGåÅ¥Û7BëUi~vJ\u0001;ãG}@OUm½ÛXKÁn\u0001nál!kýKe[kWG\u001e¼ëÃì½ìÉìÔLs\u001c4F³\u001eSÆAvÌ{¾\u001a\u000b\u0003\u0013ÿ\u000f\u0007\u0017\u0017=M\u0005\u0015\u0001\u0011\t\u0019\u0019\f\u0004\u0014\u0000\u0010\b\u0018~\u000eû\u000f=M\u0011ü\u0004\u0010\u0018\u000e\u0016\u0002j[cowmuai\\dpxnvbêÛãï÷íõáé|~\u0018\u0013\u0001\u0014\u000ezswuil= hnvúóçíáéìôøöª\u001dÏ¤n¢\n÷§ Õ°Vrf\u0006Su5a¢R\u000fð¯/×u®9=M\u0010Vñ'\u0017¶\u001b3\u0014\u0006r)w·5\u001d8\u0012\u001aÝÅ9Ä@ðØ!iò¨*\u001cÎ\"ªy¹84òÛí¸°2ÇàV²Zx²(\u0019îòú_ \bøÞnVõa\bó\u0018ÑØ6ó¹*$&J:Fãs!pÓú±\"Ì.rZø5/Æ\u000efø5Õ8RZ¹7\nä(Ú\u0012ð³\u00124\u0002\u001a³\u000f\u0018Îæbg\u0014±'\u0015ÎÊºt°=}F6Wó15zö8½8²ùîT\u0002òèu8Åz÷µ1Éfª\u0014Mv\u00123û¥Ôp8û®&7´âyîÕâ\u00198»\u0010á«\u001côZgÉ&Zës\u0012ª¶@JÛ<K'\u0017ô®\u000eáP¨ñåküJ{«974\u0002ñ>Óëâ@\\S@;ýn\u0014ñð\u0005±æ§\u0016ñ(\bñ¨\u0016ñ¨\u001e+ò¨ !5¶½ÔTT7}÷ÂØu°\u001bû\u0011\u0004\u001c¼jÿ¦°\u001e%\u0010æâ(ØLT7}÷â\u0006ÃÛR\u001dðõµ$=MàÞ²ÆGy0âÚy³«\u0016ÏÃÛR\u001dðõ¯974^±ÈGa\u001dúºM:fÍ\u0000cîK\u0000úD²à\u001cç?´=Ms¯\u001d]üoÓÄ·= rÄÈÿìÎR}j©Í\u001aÔ!¢a\u0006Ø\u0011b' \u000ekÃÂO²Ü\u0000\u0003\no-ÛÈsUB4\u000bSï\u001egtW¦I\u0001-º\u0005ô\u0011­ç= Á(w¦=}õ¬Ð\u0017pr4×¥©ðUrêÕ½¹\u0017àë®h\u0007ùâÙ¶è\u0002\u0013\nö¡Sd(îÏ\u001a¤!Ö¬ÏGI.ä=MÕ°ÏT\u0000ºÃ«ÐLç}¶\u0005ó¯!M\\m¿·} rÔÿðîÒª©ûQQ\u001a\u0016\u0011¡R((h\u000emÓÏ«Ì= ÿjo1ËÈtB6\u0003Óï\"W<Én»¬·{´\u0012Ù°ÿïø\"²éÌ\u0002¤!U\u0018¨¢VD()p=MÚ¶O¬ÙÓ\u0002J\u000f²Ú0\u00146¶\nÇG\"T ¡TÑ,B\bx¡®ÉÌ\f\u001cynU¨sqÖÈ\f7ÒV\u0004¥Ý\u0014\u0001\u000e\u0001ÞFÒ\u0004$®mÔä\u001d¡æëÔ³±,í\u0004#þ¨Eu\u0016½\u0007!%ó\u0016u'aÔ¸÷¨uÁ+ÓÍiñ_Æ4ÐaYñDÂ\"KZVÆI×b\u000b,AmÙJä\u001bµfëÙ±+÷Ä#ü°-u\u0018÷\"¥ó\u0018U§bÌx÷©eA«ÚÝ\tòc.4ÌA)ò<6 ;*ÖÄLwb\u000f Áí×z¤\u001c¬«×É+ô\f¤\u0006Tív\u0001'Ç\u001cºÏ°È ~¯\u0016µ\u00013¯ Eô×iá+T\u0018ñK\u001aélt¸ô~\\\"Ãt·2Òx_òê²\nÙ\u0005= ÑDú\f\u000f^q C$X%N\u000eÌF?tü[a+LP\u0018qK\u0016Éklxô|y¢ÓÊT·²ÎX_ñâr\b{Y\u0007@Q<z\f\u000b>q\u001f;äX#>nnÍºL!Eþüï/¿ht|¡5j\\eGÃ¥6&zfêº¾ÞyTTQê28ÞºH¼°@{ë±V\u0016ñ\bÄ¨\u0016ñ4\u0016ñ¨6(\u0011ñ¨\u0016¡)®TòÙÑ\u001d$Tü¡ôO)ýÁµdOyGNùvùÜ[:=}Âýxý*ÔM¯ó]'°ÎÛ¹\u0002v\\,çSf±âÎä'´f\u0012\u0003ë\u0010à\u001dLyÒ\f\u0007((3s\u0002ØìXBIB\u000e¾\u001dq×¹Í{ørñ+Ú-·\u0018½\u0003¹\u0010oâ@® /]ãTªÁGà!7a³:S\tÈÈ£gÖñÝAÕ|ðh0£®Ô\u0006%ë\u00055OÆø\nïH·ØrÌ\u0019\u001ae¯Q(Ûá^Ð3ºSÏpß=}ªJ=Mâ­\u0017\fs|\u0015²¬W\"½\u0004¤#ÍlyÑ\u001aÝÁÀ:»uæPÛñ1TÈVÚÂÙÀª\u0003/IÝy\fÎ/§ï7|ò±#\u0002mmÛ,ãFjG~.¼)wºEù\u0007)\u0000Í\u000b\u0014Ò(©a\u001bÁ\u0016;¹6x)zÉf¬½P\u000bÃÁ¥æmº\u000eÉÿ¤Fp±F\u0002ÄæUwíc\u0019Æïô\n\u0002[S¥#,4F<C\u0015§û4ü\u0018\nÓâï3\u001b\u001cDQ÷øOüN¹´\u001b\u001cf\u0011\u001a'Á\téñwl\u0016@ÀÆ(:l¯Z?;ÿkG>Ô\u0000\u000bh2¶ïY]\u000bgªp¢Ù\"9\bÓÇØtÔvU\fU\b£Ê÷\u0001n\u0019Î\\aí\u0001Ø\u0007\u0004yX=M uà\u0016¯\u0012$×)þ[gÁ\u0013GÞëU¡rGþ-kH\u0016þsçJ.ëºÁ$»;;KC}l:å\b ¾ïÓa¤nÈ=M¥Õà\u0018o\u0006¤Õñ\u000esèâ´\u0015Ê¼SNìl \u0007ÿ\tSÅàlPg\u0011\u0001'ÈüWÎìt°\u0007\u0001)SÉ lX\u0016w\u0011\u0002·'\n>´Ù\u0003V.t\n\u001fØ.u è.v\n ø.w!\b\"\f÷5w\u0016âÓyCg;S»\u0001;iKKÞ£ý6©\u001aZÇaj¸²4¹±8\né\"\u00140µ±øÚ&ì¦¸±(\u0002é8\u0014°Y±ØÊ\" \u00124\u0014°Z±\u0018Ê2 \u00128\u0014pJ±\bÂ.\u00127\u0013p±\bÒ.¡\u00127\u0014ÐBö-'\u0005Ê´íf± \bé7\u0014\u0010B±0¾¸º\u0013\u0010b±0Æ¸:\u0013\u0010±0Î¸ º\u0014\u0010¢±0Ö¸¢:\u0014 ¼y\u0013 À¹\u0013 Äù\u0013 È9\u0013 Ìy\u0014 Ð\u001a91Ó\"÷\u0001¦ø\u0002¶èh¦\u0016Y1íâøØü×\u0004\u0014×\fØ\u0014\u0014\u0018ü\u0017\u0004\u0018\u0017\f\u0018\u0014\u0018\bûg\u0007ÿ§\u0007\u0003ç\u0007\u0007'\u0007\u000bg\b\u000f§\b\u0013ç\b\u0017' [FÔ\u0003íÍÔ'cÔ\u0005\u0001íÑô'°{R¯}r¯¯²¯Ò¯ò¯\u0012¯2¯R°r°°²°Ò°ò°\u0012°2T¼DqSÀT±SÄdñSÈt1SÌqT Ð±\u000eng\u000eüP»kGþ\u000b\u0000U´1\u001f-ÊwÛ§$.7÷ºùz:Ú.\t4\"ù®:Ô\"\u0007Ò´nº1\u0004¹\u0014r6bÊ\u001fÎ÷Í-ù\u0004v4âÊ/Îù=M5ú$v8ÂÂ+Lý³E\u001ch7HÊþ\"+u7I\nþ2+y7ÊJ\u001e\u00023m9Ç\u001e\u00123q9ÈÊ\u001e\"3u9É\n\u001e23y9:g\u0011D<»{;»kÖLýÇ±ì\u0010øf<J=MÂ/]8=MÒ/a8Ê=Mâ/e8\n=Mò/i8J\u000e\u0002/m8\u000e\u0012/q8Ê\u000e\"/u8\n\u000e2/y8\nJ-Â7]:\u0003-Ò7a:\u0004Ê-â7e:\u0005\n-ò7i:\u0006J.\u00027m:\u0007.\u00127ñ\"ºú¨£z\tÚ.&7vz\n\u001a.67zYÃJ\u001dÀ3\\ÙÃj\u001dÈ3^YÄ\u001dÐ3= ÙÄª\u001dØ3bYÅÊ\u001dà3dÙÅê\u001dè3fYÆ\n\u001dð3hÙÆ*\u001dø3jYÇJ\u001e\u00003lÙÇj\u001e\b3nYÈ\u001e\u00103pÙÈª\u001e\u00183rYÉÊ\u001e 3tÙÉê\u001e(3vYÊ\n\u001e03xÙÊ*\u001e83ºíB@;»{K¿Å´î84¼Q\u0007B!B.À4þ·¹l\u001aÓº\u0007-Î·= º\u0004¢-Ö·b:\u0004Â-Þ·dº\u0005â-æ·f:\u0005\u0002-î·hº\u0006\"-ö·j:\u0006B.þ·lº\u0007b.\u0006·.7.·/7/·070·1714)6?ü>}[;;;ëØ¨\u0016ñ¨\u0016ñ¨\u0016ñ¨\u0016ñ¨V\u0014xÜÈí5&éï%U¦êò-¥¦éî9ãÝ¼qµcÞÁau#Þ½u#Ý{p\u000f \u0010\u000f¸PeàÕ\u0015$à×Õ$ßÚ%¤àÖ]\u0000z&\u0017Îx\u001e'.y(\u0007®\tzÄm\u0003aÊ=M\u0003_Â·bÆM_Ô¥Á\u0014!Ô§ÕÔ!ÓªÅ$¡Ô¦ýß\u0006cö÷Ífî×-døç­Ï3\u0005&ªø6=Mæª÷8\u0019\u0006êø4\t6jì\u0005A\u0016'ì\u0007UÖ'ë\nE&§ì\u0006½= \u0018«\u0016xÒ®\u000eX2¬\u0018h²ó\u000f¥V¨ò\u0012­¦¨ñ\u000e¹fèò\u0010©ÆÑ{@>§+{AH«ûB@¯ëû@<ÍãÃhÙ\u0003ÝÄdÉ3ÝÃiÑó]EpÇëþFtïkþDzÏ\u000bþErÞÉl1³^Êq!s\u001eÊm5\u001eÉSì¬'\u0017>Ç_;»\u001cúõ\u0002ñ¨êÞ\u0011¥§\u0016ñôW\u0016¢\u0016ñ¨@\"Ó¢ÿ\u0004$èP.Ï\u0005ñZ¼4ôôDk r­Wkt7\"9ö= ¦î»÷n\u0000ºP>.mJ±Î}HQ?Û\\ÂQWÃ{DxÓ\u001b¾½GUë\\¿_E#ûÀSIü;MÙ'\\ÐgD_Ù¬_M>à/Åjm¤ÿÑÍdßNt= ¾\u0003+j¤\u000fKD\u001f\fÁNSdÞJn7ÌN±¿ÜàÃi\u0017Ã\u001eKG\\\u0002Ö¸ßÊpü_Ív\tîÚ­5l\u0002Zp\u0014osuÅ$\u0001ØWáÕ»ôtÆ_TÅB-ÆF¸¸êsv5½n¢\"lëg\u0014\u001b|Cölü<Z]¼F<ÿÛ|ýQ}\u0014¾dÉ3MÄMD_Ñ³\u0013\u001cS¶lþDzÝÀV|ÿÌ»W¶÷D¢Z!s\u001eo¥ç¬bÓ_Í¯!Ua\u0004<§ËÚ\u0016þè6= &ÓÙ}K¶C;\u0017Ûà  Nh\u0002¹K8.;\t\u000büB\u0004SyLÆ\u0017a8\u0004ô!JDï4±ñfR\u0018(Hº\u0019<a{.V«+n³ \u0016®Àz\u000fþ\u0016ý\u000eýøýèýðýÕë_j'CVý\u0005\u0014\u001ch\u001c\u0017w¢Âêyvø\"ÁJ\u0011ú\u0005ÉUÉVÊTÉ$Ê¤@8ìÅçÅ'Åçí'¼\u00039ÃùÃdêdê°\u0002§Yñµÿ\u0015\u001eì\u0018Få\u0010Ï­nèÙ= 2XåfjdfpÑ*ª'\u0013vMlQVØðrzæ[ò_øcè3«¥  ¢\u0003\u000b\u000bå\u001eõ\u000eÁ.èq²x¥9½\u0014ÆQÊõzå%\u0012pT&I\u0011âÐYih\neh\u0005äk%ÖMÖÎÍAP\u001elFü\u000e9ðÔì\u0004 Ðè(Ìì>øxN\u0019®\ti\u0012\u0014\u0018\u001f«Þ\u000eøñÊx¢,í\u0014~ÑrôyÕ\u0013°ócøë[ú\u0017Í×ÌÒ=MÕ\u000bé%/ä¶o\u00022'?i4\u0011@¢È\u0011SvÝö^A\u0001>}Á>ÊA\t?hõ©õ(­Þ\"ð²õy\u001b+ï(\u000evñÆ1©Ê%5=M-E-f-Õðpdp6V\u0016µ\u0010~Å\u0000Ëxö¢y7Á»°\u001a\u0015û\u0007C£=M|ÁKaÛáÂ×ÉÙRï·×ÜÐSÉz]\u0012\u0013usöõ¶³´6354B??A@@Æ7uÜ\"Î¤\u001b!­ãã=}Ò³öYÕ[ßPÑ\u0015[àXÙRgu{j\u000fC^ýÏ;[ó8d\u00045ÐD3\u001a:9ä\t÷ÐüWë?ç\u001c·\u0000iÉ»n\u001bEó>Ù»r\u001bF3>¼{k+R¾/OkDM¾<«¨*ª\u0016ñ¨\u0016w\u0016ñ¨\u0016ñ¨\u0016ñ¨6ñY¥w\u0018\u0004Ò_Íe$Íi4Od h0o=Mf(¯=Mj8Gm\u0007c\u001em\bgVîdÖî= îh\u0016î^vîföîb¶îj6®[B®cÂ®_®g\u0002®]b®eâ®a¢®i\"®\\R®dÒ®= ®h\u0012®^r®fò®b²®j2.[J.cÊ._.g\n.]j.eê.aª.i*.\\Z.dÚ.= .h\u001a.^z.fú.bº.j:n²é4îË\u0000g tf\b\u0011NkÜ¿NoìÿÎmäßÎqô\u001flàÏpð\u000f\u000enèï\u000erø/n\u0003kÞÇn\u0004o1\u000fõÒA\u0014ÌNôPt$\u0004ø§\u0006à·'wvþð7&·n µRÓV¼F(Dmõ\u0003£§¡\u000filnuÒÕDiÎdâi\u0012.E®\u0000ém1hÎp!ÿÀ¦((uÔèrb)Gë²¼µEÍë\u0007~\u0007Èp±ªÓØEò²L±m=MÙ\u0014\u0014£÷É0×*\u001d8aüªN8b\u0004ºÎØ\\Ëýo¢ávvþXÔ)\u0005­¢Éö®\u0010ËâÑ·pPåèÈ\u0000¥h®Ô\u0015\u00060[\u0007æ/èòx\u0011$ð|\nÈµªÑ|Æg\u0015=MiÖT°\u0004å¡¸í&Ò\u001cÛgÂu]\u0016lTÊ\u0006µ!\u000eíÚp¾È\u0007Nn\u0014\u0007§ñkÞè\u0007¥¦n\u0016\u0011'ñr~~W\u0017\u0014²p\u0016\u0018\b³î\u0019\u0016Ù)¦¢2\"{êJ1\u0014Üùv\u0017ªÉ/\u0016Þ8\":x\u0019Tbu&¢Ù%'n\u0017¬Ñö\t¬\"´)ù{HRæ péñf\u0010³Èê.H¥úJò% Ix\u0018àò¶/³úZ\u000f.^µºA\u0005\u001d¤ÔwbÖR/íçÐ\u0014Ví¶Á*\u0005->Ô¹g\u0016 7ÀçrkI\u000bì_O9åBxÙsä¢nñ6íñ¨\u0016E¶¦¨\u0016ñ(\u0019\u0016ñ¦¨Èút7\b¶º½ªº¼æºBB\u000b»<\u0001?sQãK×SATÀûAÐ;Î½Q\u0017¥\u000b0\n=}tZ÷= [Õû¯û\u0013;³Þ\u001bêBb©<­¢«2>:ck\u0002~)Cé<¬j\u0013\n»·J×Z{ÒûD\u0001ÑFW= \u0016Cw[\nM?òÐ0Ò@!|i¤\u001cq#g'Þg\u001fÐQ\u0019.Q\u001dFnvÿ\u0013õ\\÷,K9è\\7g¿çI\u001eéX\u0001\u0012\u0007Þ­:ÀDõ]Ã^]\u0013JË\u0000C\tO¸O.Ïì4q\t|q\u0005òtìaÁ\u0017b\u001b\u0002î\u001dÓÞ\u001d\u001f\u0019Ê\u001e1= \u000bÒbëþ\u001f9÷JÍÃpÓBÇè\u001eØ\u0001ÚÌ\u001cÿFm\u0003\u0015g)@\u0014í¼ôõ½\u0017\u0005½ÂeL¦ºÀwßUb¾ùìAîhz\u000f\u001d×Â%è\"ÿª%Ì\"pKç\\= Ä´Aô~¢\u001d±\t}:zF6\u0004\u0014\u0003\"\u001b¨xR\fsJ^!n1,·÷ÂQ\u001bÒÄ³\u001d/]\u001fÙÆ¬r½zõO\u000eîÇ\u0006­½Ðf\u0005,fìVÌøsæpÞr¦ü'\u0010\u0005Ó©þôÝX °Ï6²]n\u0018?>xã>µl\u00120Ì6÷Z²)[µ\u0012\\'\u0016ÁÌtBªXÀóµ?S §\u0016\u0010,÷p+Òè\u0019º¨·\u0017Þ\u0012þjéÊÔ\u0015Ë£½nq|\u0007\u0018G6ù\bÌV§Ä.\u0006#îòü/ª\u0019º¶×\u0006²¨ìnb\u0011'Å7r½æ1{XóR¡Z­n2þ\b*ÊM«î@,C3lTÃ\u0012ü\b.ûªAÜ4KzW/ÛÚÁ3ºë÷[a@9&½Öh\u001dãô\\7v~ÿrH®®]½5[½¹w\u0005-\u0002§\u001d*\u0000K$?æ%uF\u001bóì_G2ÎÁ\u0019ÛÔ\u0002E×\u0014V\u000e\u0013\u0015kÓÔ(psÔHIby6\u0007aÀÔHEnnnnî\nÕÕW¸0922\u001ahPåcA3åWãÜ·G»ñm=}ñ¾D\u001b=}n\u001b\t;¡Hs\u0013Q\u0013kB\u001b\u0001s>5#A\u000fÕÉ»Ò³;®þBÓÇi»äKÛý¹BïÝb«\u001cûIÇ¨\u001aÔG/ýg\u001bIQ;ÉY;'*ÛRÇ>á³efæ<â\b<o¸T[:H»®²> ¬CÓ¿®{v\u0018Añ7@\u001bL\u001a»ÎLX§ÄëLÀ\u0013ú@[©Z¿!ß\\\u0005®;ýt¥UKïUTÂã\fÒK\u00156M¬²?¶\u0016Éû6>CõuÉ\u001býBMóè½è]#¿^?^¹}6lÄ¦uÍV|ÝL¾wúÌßÙrÌ\f>ÍñE¤R<I\u0005L«Öæ?/ãa<Ù4ûUãÀ\u0017îC\\-gR2òDì%ÀË\u0014)g)âÆ+÷Ô]%,´Lu_!ÿ'3l\tócá\u001aó©\u0014M×\t\u0013\u001a\u001a#ZU\u0007\u000f\u0005\u001bu\u0001º±ÑÝ.\u001eàã\u000edÙ\u0015øÙg*\u0005£Ó×\u0018ö{É\u0012]@²w|²séûb¸Ð§&=}= bã\u000b\u0011\fe%+PI\nl5p\u0000U\u001dâGäÄL#+d^©®çlV°\u0010Sê\u0007lÜ2øm\u001cÊp\u0000= A¡ç¯ÔTR§\tSmâeÁàä= ïþM¡§tªî¡m.¨#ÖÑ¥±\u0010¤pyp\u0018ÑÆ* 2\u00011³\u0006D¶±ø>¢Ô(Ãu³u\u0012D¢W¯\u0000ÔÄ\u0019'\u0006ºêÐ;eV;~Z»\u000f;= »1A{{s½×ÂC%rN\u0002Ì\u001bÛQý%]ó|KªÑüÌÚ+¤n½Bâ\u0007üÞHT\t+hæNç¨1¾\u0001Ë7sËVüê¦d¿õÉ>õÜI5Ù>WI¾\u0016ÌÂ+ÿGÞ®äY£=MÆO$uH\"pÜt\u0005c·Ázìø2£\u000eáH´ØÑ\u0007/ó¡Ò/Ow¶öÛFQ1'µÃ6áÅÁ\u0013·RôOë\u001d<²­_¾µ°ý|ß/\u0000öb=MR©\u0006¡\u0018µg*5ÑI6#ÜU²¸Û<n2Û\u001cGºª\u001eáEW]\bãt¿Àl¸\u0015-{+&å\u0011¡°ð3é\u0018ð³¢\u0002ú¹Ù'7äö\u0007¨\"÷\u000føýìØèAµg#w\b¶L°\u0007ê\u001e7\u001a=}=MB\u0004¤C&hé#ñ4\u0003á´8 \u001c&2\bÉ\u0019ósn\u000fæï\u000f\tî%í\u0007¢-ê·\u0015m\u001a\u0015|h*¤W\u000e\u0002åØ;AÀ>\n@3\u001cÅ[ûNhDîQFü*Ý?uJûØ6\u0001\u001bë\nA§²Âp[ôsFû .oCtï@ÝÚý\u001e#\u0001\u0014\f£=M\u0016Ö#wìî\u001exý\u000fß½GÒÿDó|Ü}5jìÝNÈ°\u001d5EÇ>ïvßøN\u0005Àªf\u000eÈÆHø\u0017ý\t§åpª­( øç°ÓX*)· ©T0¢Ç\u0014\u001cÂ¹ÆÑB¿\u000e¤\u0018\u0012i\u0003Å\u00135mt\u0004ímhâ\u0003¡'»BNiÇ©¦=}{fLÐË+¡ùC}Ø\u001fûÀÓ}\u0010qb³.x;\u0015Ý<¸Ø<å¢ÆrEØø>¬\u0012\u0006C\u0010ä­ ·|\u0016ãKL\u0015QfäÕ65avTõÝýÃ®tÐ\"¦6Ál¬¨6ñý>\bHG8\u001c\u0013¶\u000b\u001f\u0011\u001f\u000b$  =MøÄd»¥BGÁØÇ¼¹$=}¯ã)uYGz\u0018;\u000fC}pd¿\\\u0015|6(L=Mf_ï#ß\u0017«\u000eWÞ¥\u0010§fp\u0017@0N6\n'¤sªQø÷Õ¬Åq¾>.øü·¢D\u00075³TáhÅ8zDvO= ¯óÝ\u0001yàÙåFÆÒçcËóz\u0001?Ê\u00155cèúë.ÌðÐÞ\u0015~O\u000bË|¿ÓQ§\b\f\u001dv)BHX6ø\u0005öÇ\u0007¥kÒ\u0018Úa¡cÙ7¦x©\u0001nº¡6¾}®­i\u0002\u0004\u0016Ï<\u0000ÎWh2 9's\u001a\"IÉ<»ïX\\#F\\Ë_4F[ eÚ\u001b\u000b\u0011¸\u0002ø¹2øH$ß9_\u0015\u001cxì9i\u000b2µã\nã/¸Äyf\u0012\"5TàyÊ0îE\u0018\u0017ê²Þ\u001am6ëÞ\u0018è6ð\u0000Ïâ§9¬\u0011k=}¼àt<¦\u0006Mdç6\"\u0000p_î3,\foO3p\"pw÷\u0011´/(1ñøs.íA/\u0000&Ï\u0017\u0018U\bÃ_XÍpÕ1h\u0012Ì\u000780E\u0018Qö\now÷!x.AÜ\"¢j\u0012+ï¦¹¦¶\u0017®äR\u0002\u000eow÷!xêpnâ#\u001bðù\nz AÍp\\0N\u0011\u001e\u0001HJê´ª\u001eØ^U\nIwu¸öô\u0002ú!3å6³âVq£³¹´RN\u0011£%y1\u001b\u001c0º\u0018:p#\\:J:\u0015b9Hµ7h_:¢I9 _¼µV\u0004\u0003,þ\u000b\u001a<`});\n\nvar imports = {\n  \"a\": wasmImports\n};\n\n// No ATMODULES hooks\n// Begin runtime exports\n// End runtime exports\n// Begin JS library exports\n// End JS library exports\n\nthis.setModule = (data) => {\n  WASMAudioDecoderCommon.setModule(EmscriptenWASM, data);\n};\n\nthis.getModule = () =>\n  WASMAudioDecoderCommon.getModule(EmscriptenWASM);\n\nthis.instantiate = () => {\n  this.getModule().then((wasm) => WebAssembly.instantiate(wasm, imports)).then(instance => {\n    const wasmExports = instance.exports;\n  assignWasmExports(wasmExports);\n  wasmMemory = wasmExports[\"g\"];\n  updateMemoryViews();\n  // No ATPRERUNS hooks\n  initRuntime(wasmExports);\n  ready();\n});\n\n// end include: postamble_minimal.js\n// include: src/opus-decoder/src/emscripten-post.js\nthis.ready = new Promise(resolve => {\n  ready = resolve;\n}).then(() => {\n  this.HEAP = wasmMemory.buffer;\n  this.malloc = _malloc;\n  this.free = _free;\n  this.opus_frame_decoder_create = _opus_frame_decoder_create;\n  this.opus_frame_decode_float_deinterleaved = _opus_frame_decode_float_deinterleaved;\n  this.opus_frame_decoder_destroy = _opus_frame_decoder_destroy;\n});\nreturn this;\n}}","import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\n\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\n\nexport default function OpusDecoder(options = {}) {\n  // static properties\n  if (!OpusDecoder.errors) {\n    // prettier-ignore\n    Object.defineProperties(OpusDecoder, {\n      errors: {\n        value: new Map([\n          [-1, \"OPUS_BAD_ARG: One or more invalid/out of range arguments\"],\n          [-2, \"OPUS_BUFFER_TOO_SMALL: Not enough bytes allocated in the buffer\"],\n          [-3, \"OPUS_INTERNAL_ERROR: An internal error was detected\"],\n          [-4, \"OPUS_INVALID_PACKET: The compressed data passed is corrupted\"],\n          [-5, \"OPUS_UNIMPLEMENTED: Invalid/unsupported request number\"],\n          [-6, \"OPUS_INVALID_STATE: An encoder or decoder structure is invalid or already freed\"],\n          [-7, \"OPUS_ALLOC_FAIL: Memory allocation has failed\"],\n        ]),\n      },\n    });\n  }\n\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () =>\n    new this._WASMAudioDecoderCommon(this)\n      .instantiate(this._EmscriptenWASM, this._module)\n      .then((common) => {\n        this._common = common;\n\n        this._inputBytes = 0;\n        this._outputSamples = 0;\n        this._frameNumber = 0;\n\n        this._input = this._common.allocateTypedArray(\n          this._inputSize,\n          Uint8Array,\n        );\n\n        this._output = this._common.allocateTypedArray(\n          this._outputChannels * this._outputChannelSize,\n          Float32Array,\n        );\n\n        const mapping = this._common.allocateTypedArray(\n          this._channels,\n          Uint8Array,\n        );\n\n        mapping.buf.set(this._channelMappingTable);\n\n        this._decoder = this._common.wasm.opus_frame_decoder_create(\n          this._sampleRate,\n          this._channels,\n          this._streamCount,\n          this._coupledStreamCount,\n          mapping.ptr,\n          this._preSkip,\n          this._forceStereo,\n        );\n      });\n\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready,\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n\n  this.free = () => {\n    this._common.free();\n    this._common.wasm.opus_frame_decoder_destroy(this._decoder);\n    this._common.wasm.free(this._decoder);\n  };\n\n  this._decode = (opusFrame) => {\n    if (!(opusFrame instanceof Uint8Array))\n      throw Error(\n        \"Data to decode must be Uint8Array. Instead got \" + typeof opusFrame,\n      );\n\n    this._input.buf.set(opusFrame);\n\n    let samplesDecoded =\n      this._common.wasm.opus_frame_decode_float_deinterleaved(\n        this._decoder,\n        this._input.ptr,\n        opusFrame.length,\n        this._output.ptr,\n      );\n\n    let error;\n\n    if (samplesDecoded < 0) {\n      error =\n        \"libopus \" +\n        samplesDecoded +\n        \" \" +\n        (OpusDecoder.errors.get(samplesDecoded) || \"Unknown Error\");\n\n      console.error(error);\n      samplesDecoded = 0;\n    }\n\n    return {\n      outputBuffer: this._common.getOutputChannels(\n        this._output.buf,\n        this._outputChannels,\n        samplesDecoded,\n      ),\n      samplesDecoded: samplesDecoded,\n      error: error,\n    };\n  };\n\n  this.decodeFrame = (opusFrame) => {\n    let errors = [];\n\n    const decoded = this._decode(opusFrame);\n\n    if (decoded.error)\n      this._common.addError(\n        errors,\n        decoded.error,\n        opusFrame.length,\n        this._frameNumber,\n        this._inputBytes,\n        this._outputSamples,\n      );\n\n    this._frameNumber++;\n    this._inputBytes += opusFrame.length;\n    this._outputSamples += decoded.samplesDecoded;\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      errors,\n      [decoded.outputBuffer],\n      this._outputChannels,\n      decoded.samplesDecoded,\n      this._sampleRate,\n    );\n  };\n\n  this.decodeFrames = (opusFrames) => {\n    let outputBuffers = [],\n      errors = [],\n      samplesDecoded = 0,\n      i = 0;\n\n    while (i < opusFrames.length) {\n      const opusFrame = opusFrames[i++];\n      const decoded = this._decode(opusFrame);\n\n      outputBuffers.push(decoded.outputBuffer);\n      samplesDecoded += decoded.samplesDecoded;\n\n      if (decoded.error)\n        this._common.addError(\n          errors,\n          decoded.error,\n          opusFrame.length,\n          this._frameNumber,\n          this._inputBytes,\n          this._outputSamples,\n        );\n\n      this._frameNumber++;\n      this._inputBytes += opusFrame.length;\n      this._outputSamples += decoded.samplesDecoded;\n    }\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      errors,\n      outputBuffers,\n      this._outputChannels,\n      samplesDecoded,\n      this._sampleRate,\n    );\n  };\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = OpusDecoder.isWebWorker;\n  this._WASMAudioDecoderCommon =\n    OpusDecoder.WASMAudioDecoderCommon || WASMAudioDecoderCommon;\n  this._EmscriptenWASM = OpusDecoder.EmscriptenWASM || EmscriptenWASM;\n  this._module = OpusDecoder.module;\n\n  const MAX_FORCE_STEREO_CHANNELS = 8;\n  const isNumber = (param) => typeof param === \"number\";\n\n  const sampleRate = options.sampleRate;\n  const channels = options.channels;\n  const streamCount = options.streamCount;\n  const coupledStreamCount = options.coupledStreamCount;\n  const channelMappingTable = options.channelMappingTable;\n  const preSkip = options.preSkip;\n  const forceStereo = options.forceStereo ? 1 : 0;\n\n  // channel mapping family >= 1\n  if (\n    channels > 2 &&\n    (!isNumber(streamCount) ||\n      !isNumber(coupledStreamCount) ||\n      !Array.isArray(channelMappingTable))\n  ) {\n    throw new Error(\"Invalid Opus Decoder Options for multichannel decoding.\");\n  }\n\n  // libopus sample rate\n  this._sampleRate = [8e3, 12e3, 16e3, 24e3, 48e3].includes(sampleRate)\n    ? sampleRate\n    : 48000;\n\n  // channel mapping family 0\n  this._channels = isNumber(channels) ? channels : 2;\n  this._streamCount = isNumber(streamCount) ? streamCount : 1;\n  this._coupledStreamCount = isNumber(coupledStreamCount)\n    ? coupledStreamCount\n    : this._channels - 1;\n  this._channelMappingTable =\n    channelMappingTable || (this._channels === 2 ? [0, 1] : [0]);\n  this._preSkip = preSkip || 0;\n\n  this._forceStereo =\n    channels <= MAX_FORCE_STEREO_CHANNELS && channels != 2 ? forceStereo : 0;\n\n  this._inputSize = 32000 * 0.12 * this._channels; // 256kbs per channel\n  this._outputChannelSize = 120 * 48;\n  this._outputChannels = this._forceStereo ? 2 : this._channels;\n\n  this._ready = this._init();\n\n  return this;\n}\n","import { WASMAudioDecoderWorker } from \"@wasm-audio-decoders/common\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nimport OpusDecoder from \"./OpusDecoder.js\";\n\nexport default class OpusDecoderWebWorker extends WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, \"opus-decoder\", OpusDecoder, EmscriptenWASM);\n  }\n\n  async decodeFrame(data) {\n    return this.postToDecoder(\"decodeFrame\", data);\n  }\n\n  async decodeFrames(data) {\n    return this.postToDecoder(\"decodeFrames\", data);\n  }\n}\n","const symbol = Symbol;\n\n// prettier-ignore\n/*\n[\n  [\n    \"left, right\",\n    \"left, right, center\",\n    \"left, center, right\",\n    \"center, left, right\",\n    \"center\"\n  ],\n  [\n    \"front left, front right\",\n    \"front left, front right, front center\",\n    \"front left, front center, front right\",\n    \"front center, front left, front right\",\n    \"front center\"\n  ],\n  [\n    \"side left, side right\",\n    \"side left, side right, side center\",\n    \"side left, side center, side right\",\n    \"side center, side left, side right\",\n    \"side center\"\n  ],\n  [\n    \"rear left, rear right\",\n    \"rear left, rear right, rear center\",\n    \"rear left, rear center, rear right\",\n    \"rear center, rear left, rear right\",\n    \"rear center\"\n  ]\n]\n*/\n\nconst mappingJoin = \", \";\n\nexport const channelMappings = (() => {\n  const front = \"front\";\n  const side = \"side\";\n  const rear = \"rear\";\n  const left = \"left\";\n  const center = \"center\";\n  const right = \"right\";\n\n  return [\"\", front + \" \", side + \" \", rear + \" \"].map((x) =>\n    [\n      [left, right],\n      [left, right, center],\n      [left, center, right],\n      [center, left, right],\n      [center],\n    ].flatMap((y) => y.map((z) => x + z).join(mappingJoin)),\n  );\n})();\n\nexport const lfe = \"LFE\";\nexport const monophonic = \"monophonic (mono)\";\nexport const stereo = \"stereo\";\nconst surround = \"surround\";\n\nexport const getChannelMapping = (channelCount, ...mappings) =>\n  `${\n    [\n      monophonic,\n      stereo,\n      `linear ${surround}`,\n      \"quadraphonic\",\n      `5.0 ${surround}`,\n      `5.1 ${surround}`,\n      `6.1 ${surround}`,\n      `7.1 ${surround}`,\n    ][channelCount - 1]\n  } (${mappings.join(mappingJoin)})`;\n\n// prettier-ignore\nexport const vorbisOpusChannelMapping = [\n  monophonic,\n  getChannelMapping(2,channelMappings[0][0]),\n  getChannelMapping(3,channelMappings[0][2]),\n  getChannelMapping(4,channelMappings[1][0],channelMappings[3][0]),\n  getChannelMapping(5,channelMappings[1][2],channelMappings[3][0]),\n  getChannelMapping(6,channelMappings[1][2],channelMappings[3][0],lfe),\n  getChannelMapping(7,channelMappings[1][2],channelMappings[2][0],channelMappings[3][4],lfe),\n  getChannelMapping(8,channelMappings[1][2],channelMappings[2][0],channelMappings[3][0],lfe),\n]\n\n// sampleRates\nexport const rate192000 = 192000;\nexport const rate176400 = 176400;\nexport const rate96000 = 96000;\nexport const rate88200 = 88200;\nexport const rate64000 = 64000;\nexport const rate48000 = 48000;\nexport const rate44100 = 44100;\nexport const rate32000 = 32000;\nexport const rate24000 = 24000;\nexport const rate22050 = 22050;\nexport const rate16000 = 16000;\nexport const rate12000 = 12000;\nexport const rate11025 = 11025;\nexport const rate8000 = 8000;\nexport const rate7350 = 7350;\n\n// header key constants\nexport const absoluteGranulePosition = \"absoluteGranulePosition\";\nexport const bandwidth = \"bandwidth\";\nexport const bitDepth = \"bitDepth\";\nexport const bitrate = \"bitrate\";\nexport const bitrateMaximum = bitrate + \"Maximum\";\nexport const bitrateMinimum = bitrate + \"Minimum\";\nexport const bitrateNominal = bitrate + \"Nominal\";\nexport const buffer = \"buffer\";\nexport const bufferFullness = buffer + \"Fullness\";\nexport const codec = \"codec\";\nexport const codecFrames = codec + \"Frames\";\nexport const coupledStreamCount = \"coupledStreamCount\";\nexport const crc = \"crc\";\nexport const crc16 = crc + \"16\";\nexport const crc32 = crc + \"32\";\nexport const data = \"data\";\nexport const description = \"description\";\nexport const duration = \"duration\";\nexport const emphasis = \"emphasis\";\nexport const hasOpusPadding = \"hasOpusPadding\";\nexport const header = \"header\";\nexport const isContinuedPacket = \"isContinuedPacket\";\nexport const isCopyrighted = \"isCopyrighted\";\nexport const isFirstPage = \"isFirstPage\";\nexport const isHome = \"isHome\";\nexport const isLastPage = \"isLastPage\";\nexport const isOriginal = \"isOriginal\";\nexport const isPrivate = \"isPrivate\";\nexport const isVbr = \"isVbr\";\nexport const layer = \"layer\";\nexport const length = \"length\";\nexport const mode = \"mode\";\nexport const modeExtension = mode + \"Extension\";\nexport const mpeg = \"mpeg\";\nexport const mpegVersion = mpeg + \"Version\";\nexport const numberAACFrames = \"numberAAC\" + \"Frames\";\nexport const outputGain = \"outputGain\";\nexport const preSkip = \"preSkip\";\nexport const profile = \"profile\";\nexport const profileBits = symbol();\nexport const protection = \"protection\";\nexport const rawData = \"rawData\";\nexport const segments = \"segments\";\nexport const subarray = \"subarray\";\nexport const version = \"version\";\nexport const vorbis = \"vorbis\";\nexport const vorbisComments = vorbis + \"Comments\";\nexport const vorbisSetup = vorbis + \"Setup\";\n\nconst block = \"block\";\nexport const blockingStrategy = block + \"ingStrategy\";\nexport const blockingStrategyBits = symbol();\nexport const blockSize = block + \"Size\";\nexport const blocksize0 = block + \"size0\";\nexport const blocksize1 = block + \"size1\";\nexport const blockSizeBits = symbol();\n\nconst channel = \"channel\";\nexport const channelMappingFamily = channel + \"MappingFamily\";\nexport const channelMappingTable = channel + \"MappingTable\";\nexport const channelMode = channel + \"Mode\";\nexport const channelModeBits = symbol();\nexport const channels = channel + \"s\";\n\nconst copyright = \"copyright\";\nexport const copyrightId = copyright + \"Id\";\nexport const copyrightIdStart = copyright + \"IdStart\";\n\nexport const frame = \"frame\";\nexport const frameCount = frame + \"Count\";\nexport const frameLength = frame + \"Length\";\n\nconst Number = \"Number\";\nexport const frameNumber = frame + Number;\nexport const framePadding = frame + \"Padding\";\nexport const frameSize = frame + \"Size\";\n\nconst Rate = \"Rate\";\nexport const inputSampleRate = \"inputSample\" + Rate;\n\nconst page = \"page\";\nexport const pageChecksum = page + \"Checksum\";\nexport const pageSegmentBytes = symbol();\nexport const pageSegmentTable = page + \"SegmentTable\";\nexport const pageSequenceNumber = page + \"Sequence\" + Number;\n\nconst sample = \"sample\";\nexport const sampleNumber = sample + Number;\nexport const sampleRate = sample + Rate;\nexport const sampleRateBits = symbol();\nexport const samples = sample + \"s\";\n\nconst stream = \"stream\";\nexport const streamCount = stream + \"Count\";\nexport const streamInfo = stream + \"Info\";\nexport const streamSerialNumber = stream + \"Serial\" + Number;\nexport const streamStructureVersion = stream + \"StructureVersion\";\n\nconst total = \"total\";\nexport const totalBytesOut = total + \"BytesOut\";\nexport const totalDuration = total + \"Duration\";\nexport const totalSamples = total + \"Samples\";\n\n// private methods\nexport const readRawData = symbol();\nexport const incrementRawData = symbol();\nexport const mapCodecFrameStats = symbol();\nexport const mapFrameStats = symbol();\nexport const logWarning = symbol();\nexport const logError = symbol();\nexport const syncFrame = symbol();\nexport const fixedLengthFrameSync = symbol();\nexport const getHeader = symbol();\nexport const setHeader = symbol();\nexport const getFrame = symbol();\nexport const parseFrame = symbol();\nexport const parseOggPage = symbol();\nexport const checkCodecUpdate = symbol();\nexport const reset = symbol();\nexport const enable = symbol();\nexport const getHeaderFromUint8Array = symbol();\nexport const checkFrameFooterCrc16 = symbol();\n\nexport const uint8Array = Uint8Array;\nexport const dataView = DataView;\n\nexport const reserved = \"reserved\";\nexport const bad = \"bad\";\nexport const free = \"free\";\nexport const none = \"none\";\nexport const sixteenBitCRC = \"16bit CRC\";\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { length, uint8Array } from \"./constants.js\";\n\nconst getCrcTable = (crcTable, crcInitialValueFunction, crcFunction) => {\n  for (let byte = 0; byte < crcTable[length]; byte++) {\n    let crc = crcInitialValueFunction(byte);\n\n    for (let bit = 8; bit > 0; bit--) crc = crcFunction(crc);\n\n    crcTable[byte] = crc;\n  }\n  return crcTable;\n};\n\nconst crc8Table = getCrcTable(\n  new uint8Array(256),\n  (b) => b,\n  (crc) => (crc & 0x80 ? 0x07 ^ (crc << 1) : crc << 1),\n);\n\nconst flacCrc16Table = [\n  getCrcTable(\n    new Uint16Array(256),\n    (b) => b << 8,\n    (crc) => (crc << 1) ^ (crc & (1 << 15) ? 0x8005 : 0),\n  ),\n];\n\nconst crc32Table = [\n  getCrcTable(\n    new Uint32Array(256),\n    (b) => b,\n    (crc) => (crc >>> 1) ^ ((crc & 1) * 0xedb88320),\n  ),\n];\n\n// build crc tables\nfor (let i = 0; i < 15; i++) {\n  flacCrc16Table.push(new Uint16Array(256));\n  crc32Table.push(new Uint32Array(256));\n\n  for (let j = 0; j <= 0xff; j++) {\n    flacCrc16Table[i + 1][j] =\n      flacCrc16Table[0][flacCrc16Table[i][j] >>> 8] ^\n      (flacCrc16Table[i][j] << 8);\n\n    crc32Table[i + 1][j] =\n      (crc32Table[i][j] >>> 8) ^ crc32Table[0][crc32Table[i][j] & 0xff];\n  }\n}\n\nconst crc8 = (data) => {\n  let crc = 0;\n  const dataLength = data[length];\n\n  for (let i = 0; i !== dataLength; i++) crc = crc8Table[crc ^ data[i]];\n\n  return crc;\n};\n\nconst flacCrc16 = (data) => {\n  const dataLength = data[length];\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize) {\n    crc ^= (data[i++] << 8) | data[i++];\n    crc =\n      flacCrc16Table[15][crc >> 8] ^\n      flacCrc16Table[14][crc & 0xff] ^\n      flacCrc16Table[13][data[i++]] ^\n      flacCrc16Table[12][data[i++]] ^\n      flacCrc16Table[11][data[i++]] ^\n      flacCrc16Table[10][data[i++]] ^\n      flacCrc16Table[9][data[i++]] ^\n      flacCrc16Table[8][data[i++]] ^\n      flacCrc16Table[7][data[i++]] ^\n      flacCrc16Table[6][data[i++]] ^\n      flacCrc16Table[5][data[i++]] ^\n      flacCrc16Table[4][data[i++]] ^\n      flacCrc16Table[3][data[i++]] ^\n      flacCrc16Table[2][data[i++]] ^\n      flacCrc16Table[1][data[i++]] ^\n      flacCrc16Table[0][data[i++]];\n  }\n\n  while (i !== dataLength)\n    crc = ((crc & 0xff) << 8) ^ flacCrc16Table[0][(crc >> 8) ^ data[i++]];\n\n  return crc;\n};\n\nconst crc32Function = (data) => {\n  const dataLength = data[length];\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize)\n    crc =\n      crc32Table[15][(data[i++] ^ crc) & 0xff] ^\n      crc32Table[14][(data[i++] ^ (crc >>> 8)) & 0xff] ^\n      crc32Table[13][(data[i++] ^ (crc >>> 16)) & 0xff] ^\n      crc32Table[12][data[i++] ^ (crc >>> 24)] ^\n      crc32Table[11][data[i++]] ^\n      crc32Table[10][data[i++]] ^\n      crc32Table[9][data[i++]] ^\n      crc32Table[8][data[i++]] ^\n      crc32Table[7][data[i++]] ^\n      crc32Table[6][data[i++]] ^\n      crc32Table[5][data[i++]] ^\n      crc32Table[4][data[i++]] ^\n      crc32Table[3][data[i++]] ^\n      crc32Table[2][data[i++]] ^\n      crc32Table[1][data[i++]] ^\n      crc32Table[0][data[i++]];\n\n  while (i !== dataLength)\n    crc = crc32Table[0][(crc ^ data[i++]) & 0xff] ^ (crc >>> 8);\n\n  return crc ^ -1;\n};\n\nconst concatBuffers = (...buffers) => {\n  const buffer = new uint8Array(\n    buffers.reduce((acc, buf) => acc + buf[length], 0),\n  );\n\n  buffers.reduce((offset, buf) => {\n    buffer.set(buf, offset);\n    return offset + buf[length];\n  }, 0);\n\n  return buffer;\n};\n\nconst bytesToString = (bytes) => String.fromCharCode(...bytes);\n\n// prettier-ignore\nconst reverseTable = [0x0,0x8,0x4,0xc,0x2,0xa,0x6,0xe,0x1,0x9,0x5,0xd,0x3,0xb,0x7,0xf];\nconst reverse = (val) =>\n  (reverseTable[val & 0b1111] << 4) | reverseTable[val >> 4];\n\nclass BitReader {\n  constructor(data) {\n    this._data = data;\n    this._pos = data[length] * 8;\n  }\n\n  set position(position) {\n    this._pos = position;\n  }\n\n  get position() {\n    return this._pos;\n  }\n\n  read(bits) {\n    const byte = Math.floor(this._pos / 8);\n    const bit = this._pos % 8;\n    this._pos -= bits;\n\n    const window =\n      (reverse(this._data[byte - 1]) << 8) + reverse(this._data[byte]);\n\n    return (window >> (7 - bit)) & 0xff;\n  }\n}\n\n/**\n * @todo Old versions of Safari do not support BigInt\n */\nconst readInt64le = (view, offset) => {\n  try {\n    return view.getBigInt64(offset, true);\n  } catch {\n    const sign = view.getUint8(offset + 7) & 0x80 ? -1 : 1;\n    let firstPart = view.getUint32(offset, true);\n    let secondPart = view.getUint32(offset + 4, true);\n\n    if (sign === -1) {\n      firstPart = ~firstPart + 1;\n      secondPart = ~secondPart + 1;\n    }\n\n    if (secondPart > 0x000fffff) {\n      console.warn(\"This platform does not support BigInt\");\n    }\n\n    return sign * (firstPart + secondPart * 2 ** 32);\n  }\n};\n\nexport {\n  crc8,\n  flacCrc16,\n  crc32Function,\n  reverse,\n  concatBuffers,\n  bytesToString,\n  readInt64le,\n  BitReader,\n};\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport {\n  getHeader,\n  setHeader,\n  checkCodecUpdate,\n  reset,\n  enable,\n} from \"../constants.js\";\n\nexport default class HeaderCache {\n  constructor(onCodecHeader, onCodecUpdate) {\n    this._onCodecHeader = onCodecHeader;\n    this._onCodecUpdate = onCodecUpdate;\n    this[reset]();\n  }\n\n  [enable]() {\n    this._isEnabled = true;\n  }\n\n  [reset]() {\n    this._headerCache = new Map();\n    this._codecUpdateData = new WeakMap();\n    this._codecHeaderSent = false;\n    this._codecShouldUpdate = false;\n    this._bitrate = null;\n    this._isEnabled = false;\n  }\n\n  [checkCodecUpdate](bitrate, totalDuration) {\n    if (this._onCodecUpdate) {\n      if (this._bitrate !== bitrate) {\n        this._bitrate = bitrate;\n        this._codecShouldUpdate = true;\n      }\n\n      // only update if codec data is available\n      const codecData = this._codecUpdateData.get(\n        this._headerCache.get(this._currentHeader),\n      );\n\n      if (this._codecShouldUpdate && codecData) {\n        this._onCodecUpdate(\n          {\n            bitrate,\n            ...codecData,\n          },\n          totalDuration,\n        );\n      }\n\n      this._codecShouldUpdate = false;\n    }\n  }\n\n  [getHeader](key) {\n    const header = this._headerCache.get(key);\n\n    if (header) {\n      this._updateCurrentHeader(key);\n    }\n\n    return header;\n  }\n\n  [setHeader](key, header, codecUpdateFields) {\n    if (this._isEnabled) {\n      if (!this._codecHeaderSent) {\n        this._onCodecHeader({ ...header });\n        this._codecHeaderSent = true;\n      }\n      this._updateCurrentHeader(key);\n\n      this._headerCache.set(key, header);\n      this._codecUpdateData.set(header, codecUpdateFields);\n    }\n  }\n\n  _updateCurrentHeader(key) {\n    if (this._onCodecUpdate && key !== this._currentHeader) {\n      this._codecShouldUpdate = true;\n      this._currentHeader = key;\n    }\n  }\n}\n","export const headerStore = new WeakMap();\nexport const frameStore = new WeakMap();\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../globals.js\";\nimport {\n  frame,\n  length,\n  incrementRawData,\n  mapFrameStats,\n  logWarning,\n  syncFrame,\n  fixedLengthFrameSync,\n  getFrame,\n  getHeader,\n  reset,\n  enable,\n} from \"../constants.js\";\n\n/**\n * @abstract\n * @description Abstract class containing methods for parsing codec frames\n */\nexport default class Parser {\n  constructor(codecParser, headerCache) {\n    this._codecParser = codecParser;\n    this._headerCache = headerCache;\n  }\n\n  *[syncFrame]() {\n    let frameData;\n\n    do {\n      frameData = yield* this.Frame[getFrame](\n        this._codecParser,\n        this._headerCache,\n        0,\n      );\n      if (frameData) return frameData;\n      this._codecParser[incrementRawData](1); // increment to continue syncing\n    } while (true);\n  }\n\n  /**\n   * @description Searches for Frames within bytes containing a sequence of known codec frames.\n   * @param {boolean} ignoreNextFrame Set to true to return frames even if the next frame may not exist at the expected location\n   * @returns {Frame}\n   */\n  *[fixedLengthFrameSync](ignoreNextFrame) {\n    let frameData = yield* this[syncFrame]();\n    const frameLength = frameStore.get(frameData)[length];\n\n    if (\n      ignoreNextFrame ||\n      this._codecParser._flushing ||\n      // check if there is a frame right after this one\n      (yield* this.Header[getHeader](\n        this._codecParser,\n        this._headerCache,\n        frameLength,\n      ))\n    ) {\n      this._headerCache[enable](); // start caching when synced\n\n      this._codecParser[incrementRawData](frameLength); // increment to the next frame\n      this._codecParser[mapFrameStats](frameData);\n      return frameData;\n    }\n\n    this._codecParser[logWarning](\n      `Missing ${frame} at ${frameLength} bytes from current position.`,\n      `Dropping current ${frame} and trying again.`,\n    );\n    this._headerCache[reset](); // frame is invalid and must re-sync and clear cache\n    this._codecParser[incrementRawData](1); // increment to invalidate the current frame\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../globals.js\";\nimport { data, header } from \"../constants.js\";\n\n/**\n * @abstract\n */\nexport default class Frame {\n  constructor(headerValue, dataValue) {\n    frameStore.set(this, { [header]: headerValue });\n\n    this[data] = dataValue;\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore, headerStore } from \"../globals.js\";\nimport {\n  sampleRate,\n  length,\n  frameNumber,\n  header,\n  samples,\n  duration,\n  totalBytesOut,\n  totalSamples,\n  totalDuration,\n  frameLength,\n  subarray,\n  readRawData,\n  getFrame,\n  getHeader,\n} from \"../constants.js\";\nimport Frame from \"../containers/Frame.js\";\n\nexport default class CodecFrame extends Frame {\n  static *[getFrame](Header, Frame, codecParser, headerCache, readOffset) {\n    const headerValue = yield* Header[getHeader](\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (headerValue) {\n      const frameLengthValue = headerStore.get(headerValue)[frameLength];\n      const samplesValue = headerStore.get(headerValue)[samples];\n\n      const frame = (yield* codecParser[readRawData](\n        frameLengthValue,\n        readOffset,\n      ))[subarray](0, frameLengthValue);\n\n      return new Frame(headerValue, frame, samplesValue);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(headerValue, dataValue, samplesValue) {\n    super(headerValue, dataValue);\n\n    this[header] = headerValue;\n    this[samples] = samplesValue;\n    this[duration] = (samplesValue / headerValue[sampleRate]) * 1000;\n    this[frameNumber] = null;\n    this[totalBytesOut] = null;\n    this[totalSamples] = null;\n    this[totalDuration] = null;\n\n    frameStore.get(this)[length] = dataValue[length];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n// https://id3.org/Developer%20Information\n\nimport { length, version, readRawData } from \"../constants.js\";\n\nconst unsynchronizationFlag = \"unsynchronizationFlag\";\nconst extendedHeaderFlag = \"extendedHeaderFlag\";\nconst experimentalFlag = \"experimentalFlag\";\nconst footerPresent = \"footerPresent\";\n\nexport default class ID3v2 {\n  static *getID3v2Header(codecParser, headerCache, readOffset) {\n    const headerLength = 10;\n    const header = {};\n\n    let data = yield* codecParser[readRawData](3, readOffset);\n    // Byte (0-2 of 9)\n    // ID3\n    if (data[0] !== 0x49 || data[1] !== 0x44 || data[2] !== 0x33) return null;\n\n    data = yield* codecParser[readRawData](headerLength, readOffset);\n\n    // Byte (3-4 of 9)\n    // * `BBBBBBBB|........`: Major version\n    // * `........|BBBBBBBB`: Minor version\n    header[version] = `id3v2.${data[3]}.${data[4]}`;\n\n    // Byte (5 of 9)\n    // * `....0000.: Zeros (flags not implemented yet)\n    if (data[5] & 0b00001111) return null;\n\n    // Byte (5 of 9)\n    // * `CDEF0000`: Flags\n    // * `C.......`: Unsynchronisation (indicates whether or not unsynchronisation is used)\n    // * `.D......`: Extended header (indicates whether or not the header is followed by an extended header)\n    // * `..E.....`: Experimental indicator (indicates whether or not the tag is in an experimental stage)\n    // * `...F....`: Footer present (indicates that a footer is present at the very end of the tag)\n    header[unsynchronizationFlag] = !!(data[5] & 0b10000000);\n    header[extendedHeaderFlag] = !!(data[5] & 0b01000000);\n    header[experimentalFlag] = !!(data[5] & 0b00100000);\n    header[footerPresent] = !!(data[5] & 0b00010000);\n\n    // Byte (6-9 of 9)\n    // * `0.......|0.......|0.......|0.......`: Zeros\n    if (\n      data[6] & 0b10000000 ||\n      data[7] & 0b10000000 ||\n      data[8] & 0b10000000 ||\n      data[9] & 0b10000000\n    )\n      return null;\n\n    // Byte (6-9 of 9)\n    // * `.FFFFFFF|.FFFFFFF|.FFFFFFF|.FFFFFFF`: Tag Length\n    // The ID3v2 tag size is encoded with four bytes where the most significant bit (bit 7)\n    // is set to zero in every byte, making a total of 28 bits. The zeroed bits are ignored,\n    // so a 257 bytes long tag is represented as $00 00 02 01.\n    const dataLength =\n      (data[6] << 21) | (data[7] << 14) | (data[8] << 7) | data[9];\n\n    header[length] = headerLength + dataLength;\n\n    return new ID3v2(header);\n  }\n\n  constructor(header) {\n    this[version] = header[version];\n    this[unsynchronizationFlag] = header[unsynchronizationFlag];\n    this[extendedHeaderFlag] = header[extendedHeaderFlag];\n    this[experimentalFlag] = header[experimentalFlag];\n    this[footerPresent] = header[footerPresent];\n    this[length] = header[length];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore } from \"../globals.js\";\nimport {\n  bitDepth,\n  channelMode,\n  sampleRate,\n  bitrate,\n  channels,\n} from \"../constants.js\";\n\nexport default class CodecHeader {\n  /**\n   * @private\n   */\n  constructor(header) {\n    headerStore.set(this, header);\n\n    this[bitDepth] = header[bitDepth];\n    this[bitrate] = null; // set during frame mapping\n    this[channels] = header[channels];\n    this[channelMode] = header[channelMode];\n    this[sampleRate] = header[sampleRate];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport {\n  reserved,\n  bad,\n  free,\n  none,\n  sixteenBitCRC,\n  rate44100,\n  rate48000,\n  rate32000,\n  rate22050,\n  rate24000,\n  rate16000,\n  rate11025,\n  rate12000,\n  rate8000,\n  monophonic,\n  stereo,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  bitrate,\n  channels,\n  isOriginal,\n  isPrivate,\n  layer,\n  length,\n  mpegVersion,\n  frameLength,\n  protection,\n  emphasis,\n  framePadding,\n  isCopyrighted,\n  modeExtension,\n  description,\n  samples,\n  subarray,\n  readRawData,\n  incrementRawData,\n  getHeader,\n  setHeader,\n} from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport ID3v2 from \"../../metadata/ID3v2.js\";\nimport CodecHeader from \"../CodecHeader.js\";\n\n// http://www.mp3-tech.org/programmer/frame_header.html\n\nconst bitrateMatrix = {\n  // bits | V1,L1 | V1,L2 | V1,L3 | V2,L1 | V2,L2 & L3\n  0b00000000: [free, free, free, free, free],\n  0b00010000: [32, 32, 32, 32, 8],\n  // 0b00100000: [64,   48,  40,  48,  16,],\n  // 0b00110000: [96,   56,  48,  56,  24,],\n  // 0b01000000: [128,  64,  56,  64,  32,],\n  // 0b01010000: [160,  80,  64,  80,  40,],\n  // 0b01100000: [192,  96,  80,  96,  48,],\n  // 0b01110000: [224, 112,  96, 112,  56,],\n  // 0b10000000: [256, 128, 112, 128,  64,],\n  // 0b10010000: [288, 160, 128, 144,  80,],\n  // 0b10100000: [320, 192, 160, 160,  96,],\n  // 0b10110000: [352, 224, 192, 176, 112,],\n  // 0b11000000: [384, 256, 224, 192, 128,],\n  // 0b11010000: [416, 320, 256, 224, 144,],\n  // 0b11100000: [448, 384, 320, 256, 160,],\n  0b11110000: [bad, bad, bad, bad, bad],\n};\n\nconst calcBitrate = (idx, interval, intervalOffset) =>\n  8 *\n    (((idx + intervalOffset) % interval) + interval) *\n    (1 << ((idx + intervalOffset) / interval)) -\n  8 * interval * ((interval / 8) | 0);\n\n// generate bitrate matrix\nfor (let i = 2; i < 15; i++)\n  bitrateMatrix[i << 4] = [\n    i * 32, //                V1,L1\n    calcBitrate(i, 4, 0), //  V1,L2\n    calcBitrate(i, 4, -1), // V1,L3\n    calcBitrate(i, 8, 4), //  V2,L1\n    calcBitrate(i, 8, 0), //  V2,L2 & L3\n  ];\n\nconst v1Layer1 = 0;\nconst v1Layer2 = 1;\nconst v1Layer3 = 2;\nconst v2Layer1 = 3;\nconst v2Layer23 = 4;\n\nconst bands = \"bands \";\nconst to31 = \" to 31\";\nconst layer12ModeExtensions = {\n  0b00000000: bands + 4 + to31,\n  0b00010000: bands + 8 + to31,\n  0b00100000: bands + 12 + to31,\n  0b00110000: bands + 16 + to31,\n};\n\nconst bitrateIndex = \"bitrateIndex\";\nconst v2 = \"v2\";\nconst v1 = \"v1\";\n\nconst intensityStereo = \"Intensity stereo \";\nconst msStereo = \", MS stereo \";\nconst on = \"on\";\nconst off = \"off\";\nconst layer3ModeExtensions = {\n  0b00000000: intensityStereo + off + msStereo + off,\n  0b00010000: intensityStereo + on + msStereo + off,\n  0b00100000: intensityStereo + off + msStereo + on,\n  0b00110000: intensityStereo + on + msStereo + on,\n};\n\nconst layersValues = {\n  0b00000000: { [description]: reserved },\n  0b00000010: {\n    [description]: \"Layer III\",\n    [framePadding]: 1,\n    [modeExtension]: layer3ModeExtensions,\n    [v1]: {\n      [bitrateIndex]: v1Layer3,\n      [samples]: 1152,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer23,\n      [samples]: 576,\n    },\n  },\n  0b00000100: {\n    [description]: \"Layer II\",\n    [framePadding]: 1,\n    [modeExtension]: layer12ModeExtensions,\n    [samples]: 1152,\n    [v1]: {\n      [bitrateIndex]: v1Layer2,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer23,\n    },\n  },\n  0b00000110: {\n    [description]: \"Layer I\",\n    [framePadding]: 4,\n    [modeExtension]: layer12ModeExtensions,\n    [samples]: 384,\n    [v1]: {\n      [bitrateIndex]: v1Layer1,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer1,\n    },\n  },\n};\n\nconst mpegVersionDescription = \"MPEG Version \";\nconst isoIec = \"ISO/IEC \";\nconst mpegVersions = {\n  0b00000000: {\n    [description]: `${mpegVersionDescription}2.5 (later extension of MPEG 2)`,\n    [layer]: v2,\n    [sampleRate]: {\n      0b00000000: rate11025,\n      0b00000100: rate12000,\n      0b00001000: rate8000,\n      0b00001100: reserved,\n    },\n  },\n  0b00001000: { [description]: reserved },\n  0b00010000: {\n    [description]: `${mpegVersionDescription}2 (${isoIec}13818-3)`,\n    [layer]: v2,\n    [sampleRate]: {\n      0b00000000: rate22050,\n      0b00000100: rate24000,\n      0b00001000: rate16000,\n      0b00001100: reserved,\n    },\n  },\n  0b00011000: {\n    [description]: `${mpegVersionDescription}1 (${isoIec}11172-3)`,\n    [layer]: v1,\n    [sampleRate]: {\n      0b00000000: rate44100,\n      0b00000100: rate48000,\n      0b00001000: rate32000,\n      0b00001100: reserved,\n    },\n  },\n  length,\n};\n\nconst protectionValues = {\n  0b00000000: sixteenBitCRC,\n  0b00000001: none,\n};\n\nconst emphasisValues = {\n  0b00000000: none,\n  0b00000001: \"50/15 ms\",\n  0b00000010: reserved,\n  0b00000011: \"CCIT J.17\",\n};\n\nconst channelModes = {\n  0b00000000: { [channels]: 2, [description]: stereo },\n  0b01000000: { [channels]: 2, [description]: \"joint \" + stereo },\n  0b10000000: { [channels]: 2, [description]: \"dual channel\" },\n  0b11000000: { [channels]: 1, [description]: monophonic },\n};\n\nexport default class MPEGHeader extends CodecHeader {\n  static *[getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // check for id3 header\n    const id3v2Header = yield* ID3v2.getID3v2Header(\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (id3v2Header) {\n      // throw away the data. id3 parsing is not implemented yet.\n      yield* codecParser[readRawData](id3v2Header[length], readOffset);\n      codecParser[incrementRawData](id3v2Header[length]);\n    }\n\n    // Must be at least four bytes.\n    const data = yield* codecParser[readRawData](4, readOffset);\n\n    // Check header cache\n    const key = bytesToString(data[subarray](0, 4));\n    const cachedHeader = headerCache[getHeader](key);\n    if (cachedHeader) return new MPEGHeader(cachedHeader);\n\n    // Frame sync (all bits must be set): `11111111|111`:\n    if (data[0] !== 0xff || data[1] < 0xe0) return null;\n\n    // Byte (2 of 4)\n    // * `111BBCCD`\n    // * `...BB...`: MPEG Audio version ID\n    // * `.....CC.`: Layer description\n    // * `.......D`: Protection bit (0 - Protected by CRC (16bit CRC follows header), 1 = Not protected)\n\n    // Mpeg version (1, 2, 2.5)\n    const mpegVersionValues = mpegVersions[data[1] & 0b00011000];\n    if (mpegVersionValues[description] === reserved) return null;\n\n    // Layer (I, II, III)\n    const layerBits = data[1] & 0b00000110;\n    if (layersValues[layerBits][description] === reserved) return null;\n    const layerValues = {\n      ...layersValues[layerBits],\n      ...layersValues[layerBits][mpegVersionValues[layer]],\n    };\n\n    header[mpegVersion] = mpegVersionValues[description];\n    header[layer] = layerValues[description];\n    header[samples] = layerValues[samples];\n    header[protection] = protectionValues[data[1] & 0b00000001];\n\n    header[length] = 4;\n\n    // Byte (3 of 4)\n    // * `EEEEFFGH`\n    // * `EEEE....`: Bitrate index. 1111 is invalid, everything else is accepted\n    // * `....FF..`: Sample rate\n    // * `......G.`: Padding bit, 0=frame not padded, 1=frame padded\n    // * `.......H`: Private bit.\n    header[bitrate] =\n      bitrateMatrix[data[2] & 0b11110000][layerValues[bitrateIndex]];\n    if (header[bitrate] === bad) return null;\n\n    header[sampleRate] = mpegVersionValues[sampleRate][data[2] & 0b00001100];\n    if (header[sampleRate] === reserved) return null;\n\n    header[framePadding] = data[2] & 0b00000010 && layerValues[framePadding];\n    header[isPrivate] = !!(data[2] & 0b00000001);\n\n    header[frameLength] = Math.floor(\n      (125 * header[bitrate] * header[samples]) / header[sampleRate] +\n        header[framePadding],\n    );\n    if (!header[frameLength]) return null;\n\n    // Byte (4 of 4)\n    // * `IIJJKLMM`\n    // * `II......`: Channel mode\n    // * `..JJ....`: Mode extension (only if joint stereo)\n    // * `....K...`: Copyright\n    // * `.....L..`: Original\n    // * `......MM`: Emphasis\n    const channelModeBits = data[3] & 0b11000000;\n    header[channelMode] = channelModes[channelModeBits][description];\n    header[channels] = channelModes[channelModeBits][channels];\n\n    header[modeExtension] = layerValues[modeExtension][data[3] & 0b00110000];\n    header[isCopyrighted] = !!(data[3] & 0b00001000);\n    header[isOriginal] = !!(data[3] & 0b00000100);\n\n    header[emphasis] = emphasisValues[data[3] & 0b00000011];\n    if (header[emphasis] === reserved) return null;\n\n    header[bitDepth] = 16;\n\n    // set header cache\n    {\n      const { length, frameLength, samples, ...codecUpdateFields } = header;\n\n      headerCache[setHeader](key, header, codecUpdateFields);\n    }\n    return new MPEGHeader(header);\n  }\n\n  /**\n   * @private\n   * Call MPEGHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[bitrate] = header[bitrate];\n    this[emphasis] = header[emphasis];\n    this[framePadding] = header[framePadding];\n    this[isCopyrighted] = header[isCopyrighted];\n    this[isOriginal] = header[isOriginal];\n    this[isPrivate] = header[isPrivate];\n    this[layer] = header[layer];\n    this[modeExtension] = header[modeExtension];\n    this[mpegVersion] = header[mpegVersion];\n    this[protection] = header[protection];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { getFrame } from \"../../constants.js\";\n\nimport CodecFrame from \"../CodecFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\n\nexport default class MPEGFrame extends CodecFrame {\n  static *[getFrame](codecParser, headerCache, readOffset) {\n    return yield* super[getFrame](\n      MPEGHeader,\n      MPEGFrame,\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport {\n  codec,\n  mpeg,\n  fixedLengthFrameSync,\n  parseFrame,\n} from \"../../constants.js\";\n\nimport Parser from \"../Parser.js\";\nimport MPEGFrame from \"./MPEGFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\n\nexport default class MPEGParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = MPEGFrame;\n    this.Header = MPEGHeader;\n\n    onCodec(this[codec]);\n  }\n\n  get [codec]() {\n    return mpeg;\n  }\n\n  *[parseFrame]() {\n    return yield* this[fixedLengthFrameSync]();\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://wiki.multimedia.cx/index.php/ADTS\n\nAAAAAAAA AAAABCCD EEFFFFGH HHIJKLMM MMMMMMMM MMMOOOOO OOOOOOPP (QQQQQQQQ QQQQQQQQ)\n\nAACHeader consists of 7 or 9 bytes (without or with CRC).\nLetter  Length (bits)  Description\nA  12  syncword 0xFFF, all bits must be 1\nB  1   MPEG Version: 0 for MPEG-4, 1 for MPEG-2\nC  2   Layer: always 0\nD  1   protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\nE  2   profile, the MPEG-4 Audio Object Type minus 1\nF  4   MPEG-4 Sampling Frequency Index (15 is forbidden)\nG  1   private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\nH  3   MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\nI  1   originality, set to 0 when encoding, ignore when decoding\nJ  1   home, set to 0 when encoding, ignore when decoding\nK  1   copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\nL  1   copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\nM  13  frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\nO  11  Buffer fullness // 0x7FF for VBR\nP  2   Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\nQ  16  CRC if protection absent is 0 \n*/\n\nimport { headerStore } from \"../../globals.js\";\nimport { bytesToString } from \"../../utilities.js\";\nimport {\n  reserved,\n  bad,\n  none,\n  sixteenBitCRC,\n  rate96000,\n  rate88200,\n  rate64000,\n  rate48000,\n  rate44100,\n  rate32000,\n  rate24000,\n  rate22050,\n  rate16000,\n  rate12000,\n  rate11025,\n  rate8000,\n  rate7350,\n  channelMappings,\n  getChannelMapping,\n  monophonic,\n  lfe,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  channels,\n  copyrightId,\n  copyrightIdStart,\n  bufferFullness,\n  isHome,\n  isOriginal,\n  isPrivate,\n  layer,\n  length,\n  mpegVersion,\n  numberAACFrames,\n  profile,\n  protection,\n  frameLength,\n  description,\n  samples,\n  sampleRateBits,\n  profileBits,\n  channelModeBits,\n  buffer,\n  readRawData,\n  getHeader,\n  setHeader,\n  uint8Array,\n  dataView,\n} from \"../../constants.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst mpegVersionValues = {\n  0b00000000: \"MPEG-4\",\n  0b00001000: \"MPEG-2\",\n};\n\nconst layerValues = {\n  0b00000000: \"valid\",\n  0b00000010: bad,\n  0b00000100: bad,\n  0b00000110: bad,\n};\n\nconst protectionValues = {\n  0b00000000: sixteenBitCRC,\n  0b00000001: none,\n};\n\nconst profileValues = {\n  0b00000000: \"AAC Main\",\n  0b01000000: \"AAC LC (Low Complexity)\",\n  0b10000000: \"AAC SSR (Scalable Sample Rate)\",\n  0b11000000: \"AAC LTP (Long Term Prediction)\",\n};\n\nconst sampleRates = {\n  0b00000000: rate96000,\n  0b00000100: rate88200,\n  0b00001000: rate64000,\n  0b00001100: rate48000,\n  0b00010000: rate44100,\n  0b00010100: rate32000,\n  0b00011000: rate24000,\n  0b00011100: rate22050,\n  0b00100000: rate16000,\n  0b00100100: rate12000,\n  0b00101000: rate11025,\n  0b00101100: rate8000,\n  0b00110000: rate7350,\n  0b00110100: reserved,\n  0b00111000: reserved,\n  0b00111100: \"frequency is written explicitly\",\n};\n\n// prettier-ignore\nconst channelModeValues = {\n  0b000000000: { [channels]: 0, [description]: \"Defined in AOT Specific Config\" },\n  /*\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (front center, front left, front right)'\n  'quadraphonic (front center, front left, front right, rear center)'\n  '5.0 surround (front center, front left, front right, rear left, rear right)'\n  '5.1 surround (front center, front left, front right, rear left, rear right, LFE)'\n  '7.1 surround (front center, front left, front right, side left, side right, rear left, rear right, LFE)'\n  */\n  0b001000000: { [channels]: 1, [description]: monophonic },\n  0b010000000: { [channels]: 2, [description]: getChannelMapping(2,channelMappings[0][0]) },\n  0b011000000: { [channels]: 3, [description]: getChannelMapping(3,channelMappings[1][3]), },\n  0b100000000: { [channels]: 4, [description]: getChannelMapping(4,channelMappings[1][3],channelMappings[3][4]), },\n  0b101000000: { [channels]: 5, [description]: getChannelMapping(5,channelMappings[1][3],channelMappings[3][0]), },\n  0b110000000: { [channels]: 6, [description]: getChannelMapping(6,channelMappings[1][3],channelMappings[3][0],lfe), },\n  0b111000000: { [channels]: 8, [description]: getChannelMapping(8,channelMappings[1][3],channelMappings[2][0],channelMappings[3][0],lfe), },\n};\n\nexport default class AACHeader extends CodecHeader {\n  static *[getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least seven bytes. Out of data\n    const data = yield* codecParser[readRawData](7, readOffset);\n\n    // Check header cache\n    const key = bytesToString([\n      data[0],\n      data[1],\n      data[2],\n      (data[3] & 0b11111100) | (data[6] & 0b00000011), // frame length, buffer fullness varies so don't cache it\n    ]);\n    const cachedHeader = headerCache[getHeader](key);\n\n    if (!cachedHeader) {\n      // Frame sync (all bits must be set): `11111111|1111`:\n      if (data[0] !== 0xff || data[1] < 0xf0) return null;\n\n      // Byte (2 of 7)\n      // * `1111BCCD`\n      // * `....B...`: MPEG Version: 0 for MPEG-4, 1 for MPEG-2\n      // * `.....CC.`: Layer: always 0\n      // * `.......D`: protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\n      header[mpegVersion] = mpegVersionValues[data[1] & 0b00001000];\n\n      header[layer] = layerValues[data[1] & 0b00000110];\n      if (header[layer] === bad) return null;\n\n      const protectionBit = data[1] & 0b00000001;\n      header[protection] = protectionValues[protectionBit];\n      header[length] = protectionBit ? 7 : 9;\n\n      // Byte (3 of 7)\n      // * `EEFFFFGH`\n      // * `EE......`: profile, the MPEG-4 Audio Object Type minus 1\n      // * `..FFFF..`: MPEG-4 Sampling Frequency Index (15 is forbidden)\n      // * `......G.`: private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\n      header[profileBits] = data[2] & 0b11000000;\n      header[sampleRateBits] = data[2] & 0b00111100;\n      const privateBit = data[2] & 0b00000010;\n\n      header[profile] = profileValues[header[profileBits]];\n\n      header[sampleRate] = sampleRates[header[sampleRateBits]];\n      if (header[sampleRate] === reserved) return null;\n\n      header[isPrivate] = !!privateBit;\n\n      // Byte (3,4 of 7)\n      // * `.......H|HH......`: MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\n      header[channelModeBits] = ((data[2] << 8) | data[3]) & 0b111000000;\n      header[channelMode] =\n        channelModeValues[header[channelModeBits]][description];\n      header[channels] = channelModeValues[header[channelModeBits]][channels];\n\n      // Byte (4 of 7)\n      // * `HHIJKLMM`\n      // * `..I.....`: originality, set to 0 when encoding, ignore when decoding\n      // * `...J....`: home, set to 0 when encoding, ignore when decoding\n      // * `....K...`: copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\n      // * `.....L..`: copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\n      header[isOriginal] = !!(data[3] & 0b00100000);\n      header[isHome] = !!(data[3] & 0b00001000);\n      header[copyrightId] = !!(data[3] & 0b00001000);\n      header[copyrightIdStart] = !!(data[3] & 0b00000100);\n      header[bitDepth] = 16;\n      header[samples] = 1024;\n\n      // Byte (7 of 7)\n      // * `......PP` Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\n      header[numberAACFrames] = data[6] & 0b00000011;\n\n      {\n        const {\n          length,\n          channelModeBits,\n          profileBits,\n          sampleRateBits,\n          frameLength,\n          samples,\n          numberAACFrames,\n          ...codecUpdateFields\n        } = header;\n        headerCache[setHeader](key, header, codecUpdateFields);\n      }\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (4,5,6 of 7)\n    // * `.......MM|MMMMMMMM|MMM.....`: frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\n    header[frameLength] =\n      ((data[3] << 11) | (data[4] << 3) | (data[5] >> 5)) & 0x1fff;\n    if (!header[frameLength]) return null;\n\n    // Byte (6,7 of 7)\n    // * `...OOOOO|OOOOOO..`: Buffer fullness\n    const bufferFullnessBits = ((data[5] << 6) | (data[6] >> 2)) & 0x7ff;\n    header[bufferFullness] =\n      bufferFullnessBits === 0x7ff ? \"VBR\" : bufferFullnessBits;\n\n    return new AACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call AACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[copyrightId] = header[copyrightId];\n    this[copyrightIdStart] = header[copyrightIdStart];\n    this[bufferFullness] = header[bufferFullness];\n    this[isHome] = header[isHome];\n    this[isOriginal] = header[isOriginal];\n    this[isPrivate] = header[isPrivate];\n    this[layer] = header[layer];\n    this[length] = header[length];\n    this[mpegVersion] = header[mpegVersion];\n    this[numberAACFrames] = header[numberAACFrames];\n    this[profile] = header[profile];\n    this[protection] = header[protection];\n  }\n\n  get audioSpecificConfig() {\n    // Audio Specific Configuration\n    // * `000EEFFF|F0HHH000`:\n    // * `000EE...|........`: Object Type (profileBit + 1)\n    // * `.....FFF|F.......`: Sample Rate\n    // * `........|.0HHH...`: Channel Configuration\n    // * `........|.....0..`: Frame Length (1024)\n    // * `........|......0.`: does not depend on core coder\n    // * `........|.......0`: Not Extension\n    const header = headerStore.get(this);\n\n    const audioSpecificConfig =\n      ((header[profileBits] + 0x40) << 5) |\n      (header[sampleRateBits] << 5) |\n      (header[channelModeBits] >> 3);\n\n    const bytes = new uint8Array(2);\n    new dataView(bytes[buffer]).setUint16(0, audioSpecificConfig, false);\n    return bytes;\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { getFrame } from \"../../constants.js\";\n\nimport CodecFrame from \"../CodecFrame.js\";\nimport AACHeader from \"./AACHeader.js\";\n\nexport default class AACFrame extends CodecFrame {\n  static *[getFrame](codecParser, headerCache, readOffset) {\n    return yield* super[getFrame](\n      AACHeader,\n      AACFrame,\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { codec, fixedLengthFrameSync, parseFrame } from \"../../constants.js\";\n\nimport Parser from \"../Parser.js\";\nimport AACFrame from \"./AACFrame.js\";\nimport AACHeader from \"./AACHeader.js\";\n\nexport default class AACParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = AACFrame;\n    this.Header = AACHeader;\n\n    onCodec(this[codec]);\n  }\n\n  get [codec]() {\n    return \"aac\";\n  }\n\n  *[parseFrame]() {\n    return yield* this[fixedLengthFrameSync]();\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore } from \"../../globals.js\";\nimport { flacCrc16 } from \"../../utilities.js\";\nimport {\n  length,\n  streamInfo,\n  crc16,\n  samples,\n  subarray,\n  checkFrameFooterCrc16,\n} from \"../../constants.js\";\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class FLACFrame extends CodecFrame {\n  static _getFrameFooterCrc16(data) {\n    return (data[data[length] - 2] << 8) + data[data[length] - 1];\n  }\n\n  // check frame footer crc\n  // https://xiph.org/flac/format.html#frame_footer\n  static [checkFrameFooterCrc16](data) {\n    const expectedCrc16 = FLACFrame._getFrameFooterCrc16(data);\n    const actualCrc16 = flacCrc16(data[subarray](0, -2));\n\n    return expectedCrc16 === actualCrc16;\n  }\n\n  constructor(data, header, streamInfoValue) {\n    header[streamInfo] = streamInfoValue;\n    header[crc16] = FLACFrame._getFrameFooterCrc16(data);\n\n    super(header, data, headerStore.get(header)[samples]);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/flac/format.html\n\nAAAAAAAA AAAAAABC DDDDEEEE FFFFGGGH \n(IIIIIIII...)\n(JJJJJJJJ|JJJJJJJJ)\n(KKKKKKKK|KKKKKKKK)\nLLLLLLLLL\n\nFLAC Frame Header\nLetter  Length (bits)  Description\nA   13  11111111|11111\nB   1   Reserved 0 - mandatory, 1 - reserved\nC   1   Blocking strategy, 0 - fixed, 1 - variable\nD   4   Block size in inter-channel samples\nE   4   Sample rate\nF   4   Channel assignment\nG   3   Sample size in bits\nH   1   Reserved 0 - mandatory, 1 - reserved\nI   ?   if(variable blocksize)\n           <8-56>:\"UTF-8\" coded sample number (decoded number is 36 bits) [4]\n        else\n           <8-48>:\"UTF-8\" coded frame number (decoded number is 31 bits) [4]\nJ   ?   if(blocksize bits == 011x)\n            8/16 bit (blocksize-1)\nK   ?   if(sample rate bits == 11xx)\n            8/16 bit sample rate\nL   8   CRC-8 (polynomial = x^8 + x^2 + x^1 + x^0, initialized with 0) of everything before the crc, including the sync code\n        \n*/\n\nimport {\n  reserved,\n  bad,\n  rate88200,\n  rate176400,\n  rate192000,\n  rate8000,\n  rate16000,\n  rate22050,\n  rate24000,\n  rate32000,\n  rate44100,\n  rate48000,\n  rate96000,\n  channelMappings,\n  getChannelMapping,\n  monophonic,\n  stereo,\n  lfe,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  channels,\n  length,\n  crc16,\n  blockingStrategy,\n  blockSize,\n  frameNumber,\n  sampleNumber,\n  streamInfo,\n  description,\n  samples,\n  sampleRateBits,\n  blockingStrategyBits,\n  blockSizeBits,\n  crc,\n  subarray,\n  readRawData,\n  getHeader,\n  setHeader,\n  getHeaderFromUint8Array,\n} from \"../../constants.js\";\nimport { bytesToString, crc8 } from \"../../utilities.js\";\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst getFromStreamInfo = \"get from STREAMINFO metadata block\";\n\nconst blockingStrategyValues = {\n  0b00000000: \"Fixed\",\n  0b00000001: \"Variable\",\n};\n\nconst blockSizeValues = {\n  0b00000000: reserved,\n  0b00010000: 192,\n  // 0b00100000: 576,\n  // 0b00110000: 1152,\n  // 0b01000000: 2304,\n  // 0b01010000: 4608,\n  // 0b01100000: \"8-bit (blocksize-1) from end of header\",\n  // 0b01110000: \"16-bit (blocksize-1) from end of header\",\n  // 0b10000000: 256,\n  // 0b10010000: 512,\n  // 0b10100000: 1024,\n  // 0b10110000: 2048,\n  // 0b11000000: 4096,\n  // 0b11010000: 8192,\n  // 0b11100000: 16384,\n  // 0b11110000: 32768,\n};\nfor (let i = 2; i < 16; i++)\n  blockSizeValues[i << 4] = i < 6 ? 576 * 2 ** (i - 2) : 2 ** i;\n\nconst sampleRateValues = {\n  0b00000000: getFromStreamInfo,\n  0b00000001: rate88200,\n  0b00000010: rate176400,\n  0b00000011: rate192000,\n  0b00000100: rate8000,\n  0b00000101: rate16000,\n  0b00000110: rate22050,\n  0b00000111: rate24000,\n  0b00001000: rate32000,\n  0b00001001: rate44100,\n  0b00001010: rate48000,\n  0b00001011: rate96000,\n  // 0b00001100: \"8-bit sample rate (in kHz) from end of header\",\n  // 0b00001101: \"16-bit sample rate (in Hz) from end of header\",\n  // 0b00001110: \"16-bit sample rate (in tens of Hz) from end of header\",\n  0b00001111: bad,\n};\n\n/* prettier-ignore */\nconst channelAssignments = {\n  /*'\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (left, right, center)'\n  'quadraphonic (front left, front right, rear left, rear right)'\n  '5.0 surround (front left, front right, front center, rear left, rear right)'\n  '5.1 surround (front left, front right, front center, LFE, rear left, rear right)'\n  '6.1 surround (front left, front right, front center, LFE, rear center, side left, side right)'\n  '7.1 surround (front left, front right, front center, LFE, rear left, rear right, side left, side right)'\n  */\n  0b00000000: {[channels]: 1, [description]: monophonic},\n  0b00010000: {[channels]: 2, [description]: getChannelMapping(2,channelMappings[0][0])},\n  0b00100000: {[channels]: 3, [description]: getChannelMapping(3,channelMappings[0][1])},\n  0b00110000: {[channels]: 4, [description]: getChannelMapping(4,channelMappings[1][0],channelMappings[3][0])},\n  0b01000000: {[channels]: 5, [description]: getChannelMapping(5,channelMappings[1][1],channelMappings[3][0])},\n  0b01010000: {[channels]: 6, [description]: getChannelMapping(6,channelMappings[1][1],lfe,channelMappings[3][0])},\n  0b01100000: {[channels]: 7, [description]: getChannelMapping(7,channelMappings[1][1],lfe,channelMappings[3][4],channelMappings[2][0])},\n  0b01110000: {[channels]: 8, [description]: getChannelMapping(8,channelMappings[1][1],lfe,channelMappings[3][0],channelMappings[2][0])},\n  0b10000000: {[channels]: 2, [description]: `${stereo} (left, diff)`},\n  0b10010000: {[channels]: 2, [description]: `${stereo} (diff, right)`},\n  0b10100000: {[channels]: 2, [description]: `${stereo} (avg, diff)`},\n  0b10110000: reserved,\n  0b11000000: reserved,\n  0b11010000: reserved,\n  0b11100000: reserved,\n  0b11110000: reserved,\n}\n\nconst bitDepthValues = {\n  0b00000000: getFromStreamInfo,\n  0b00000010: 8,\n  0b00000100: 12,\n  0b00000110: reserved,\n  0b00001000: 16,\n  0b00001010: 20,\n  0b00001100: 24,\n  0b00001110: reserved,\n};\n\nexport default class FLACHeader extends CodecHeader {\n  // https://datatracker.ietf.org/doc/html/rfc3629#section-3\n  //    Char. number range  |        UTF-8 octet sequence\n  //    (hexadecimal)    |              (binary)\n  // --------------------+---------------------------------------------\n  // 0000 0000-0000 007F | 0xxxxxxx\n  // 0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n  // 0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n  // 0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n  static _decodeUTF8Int(data) {\n    if (data[0] > 0xfe) {\n      return null; // length byte must have at least one zero as the lsb\n    }\n\n    if (data[0] < 0x80) return { value: data[0], length: 1 };\n\n    // get length by counting the number of msb that are set to 1\n    let length = 1;\n    for (let zeroMask = 0x40; zeroMask & data[0]; zeroMask >>= 1) length++;\n\n    let idx = length - 1,\n      value = 0,\n      shift = 0;\n\n    // sum together the encoded bits in bytes 2 to length\n    // 1110xxxx 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    //    value = [cccccc] | [bbbbbb] | [aaaaaa]\n    for (; idx > 0; shift += 6, idx--) {\n      if ((data[idx] & 0xc0) !== 0x80) {\n        return null; // each byte should have leading 10xxxxxx\n      }\n      value |= (data[idx] & 0x3f) << shift; // add the encoded bits\n    }\n\n    // read the final encoded bits in byte 1\n    //     1110[dddd] 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    // value = [dddd] | [cccccc] | [bbbbbb] | [aaaaaa]\n    value |= (data[idx] & (0x7f >> length)) << shift;\n\n    return { value, length };\n  }\n\n  static [getHeaderFromUint8Array](data, headerCache) {\n    const codecParserStub = {\n      [readRawData]: function* () {\n        return data;\n      },\n    };\n\n    return FLACHeader[getHeader](codecParserStub, headerCache, 0).next().value;\n  }\n\n  static *[getHeader](codecParser, headerCache, readOffset) {\n    // Must be at least 6 bytes.\n    let data = yield* codecParser[readRawData](6, readOffset);\n\n    // Bytes (1-2 of 6)\n    // * `11111111|111110..`: Frame sync\n    // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n    if (data[0] !== 0xff || !(data[1] === 0xf8 || data[1] === 0xf9)) {\n      return null;\n    }\n\n    const header = {};\n\n    // Check header cache\n    const key = bytesToString(data[subarray](0, 4));\n    const cachedHeader = headerCache[getHeader](key);\n\n    if (!cachedHeader) {\n      // Byte (2 of 6)\n      // * `.......C`: Blocking strategy, 0 - fixed, 1 - variable\n      header[blockingStrategyBits] = data[1] & 0b00000001;\n      header[blockingStrategy] =\n        blockingStrategyValues[header[blockingStrategyBits]];\n\n      // Byte (3 of 6)\n      // * `DDDD....`: Block size in inter-channel samples\n      // * `....EEEE`: Sample rate\n      header[blockSizeBits] = data[2] & 0b11110000;\n      header[sampleRateBits] = data[2] & 0b00001111;\n\n      header[blockSize] = blockSizeValues[header[blockSizeBits]];\n      if (header[blockSize] === reserved) {\n        return null;\n      }\n\n      header[sampleRate] = sampleRateValues[header[sampleRateBits]];\n      if (header[sampleRate] === bad) {\n        return null;\n      }\n\n      // Byte (4 of 6)\n      // * `FFFF....`: Channel assignment\n      // * `....GGG.`: Sample size in bits\n      // * `.......H`: Reserved 0 - mandatory, 1 - reserved\n      if (data[3] & 0b00000001) {\n        return null;\n      }\n\n      const channelAssignment = channelAssignments[data[3] & 0b11110000];\n      if (channelAssignment === reserved) {\n        return null;\n      }\n\n      header[channels] = channelAssignment[channels];\n      header[channelMode] = channelAssignment[description];\n\n      header[bitDepth] = bitDepthValues[data[3] & 0b00001110];\n      if (header[bitDepth] === reserved) {\n        return null;\n      }\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (5...)\n    // * `IIIIIIII|...`: VBR block size ? sample number : frame number\n    header[length] = 5;\n\n    // check if there is enough data to parse UTF8\n    data = yield* codecParser[readRawData](header[length] + 8, readOffset);\n\n    const decodedUtf8 = FLACHeader._decodeUTF8Int(data[subarray](4));\n    if (!decodedUtf8) {\n      return null;\n    }\n\n    if (header[blockingStrategyBits]) {\n      header[sampleNumber] = decodedUtf8.value;\n    } else {\n      header[frameNumber] = decodedUtf8.value;\n    }\n\n    header[length] += decodedUtf8[length];\n\n    // Byte (...)\n    // * `JJJJJJJJ|(JJJJJJJJ)`: Blocksize (8/16bit custom value)\n    if (header[blockSizeBits] === 0b01100000) {\n      // 8 bit\n      if (data[length] < header[length])\n        data = yield* codecParser[readRawData](header[length], readOffset);\n\n      header[blockSize] = data[header[length] - 1] + 1;\n      header[length] += 1;\n    } else if (header[blockSizeBits] === 0b01110000) {\n      // 16 bit\n      if (data[length] < header[length])\n        data = yield* codecParser[readRawData](header[length], readOffset);\n\n      header[blockSize] =\n        (data[header[length] - 1] << 8) + data[header[length]] + 1;\n      header[length] += 2;\n    }\n\n    header[samples] = header[blockSize];\n\n    // Byte (...)\n    // * `KKKKKKKK|(KKKKKKKK)`: Sample rate (8/16bit custom value)\n    if (header[sampleRateBits] === 0b00001100) {\n      // 8 bit\n      if (data[length] < header[length])\n        data = yield* codecParser[readRawData](header[length], readOffset);\n\n      header[sampleRate] = data[header[length] - 1] * 1000;\n      header[length] += 1;\n    } else if (header[sampleRateBits] === 0b00001101) {\n      // 16 bit\n      if (data[length] < header[length])\n        data = yield* codecParser[readRawData](header[length], readOffset);\n\n      header[sampleRate] =\n        (data[header[length] - 1] << 8) + data[header[length]];\n      header[length] += 2;\n    } else if (header[sampleRateBits] === 0b00001110) {\n      // 16 bit\n      if (data[length] < header[length])\n        data = yield* codecParser[readRawData](header[length], readOffset);\n\n      header[sampleRate] =\n        ((data[header[length] - 1] << 8) + data[header[length]]) * 10;\n      header[length] += 2;\n    }\n\n    // Byte (...)\n    // * `LLLLLLLL`: CRC-8\n    if (data[length] < header[length])\n      data = yield* codecParser[readRawData](header[length], readOffset);\n\n    header[crc] = data[header[length] - 1];\n    if (header[crc] !== crc8(data[subarray](0, header[length] - 1))) {\n      return null;\n    }\n\n    {\n      if (!cachedHeader) {\n        const {\n          blockingStrategyBits,\n          frameNumber,\n          sampleNumber,\n          samples,\n          sampleRateBits,\n          blockSizeBits,\n          crc,\n          length,\n          ...codecUpdateFields\n        } = header;\n        headerCache[setHeader](key, header, codecUpdateFields);\n      }\n    }\n    return new FLACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call FLACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[crc16] = null; // set in FLACFrame\n    this[blockingStrategy] = header[blockingStrategy];\n    this[blockSize] = header[blockSize];\n    this[frameNumber] = header[frameNumber];\n    this[sampleNumber] = header[sampleNumber];\n    this[streamInfo] = null; // set during ogg parsing\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore, headerStore } from \"../../globals.js\";\nimport {\n  length,\n  pageSequenceNumber,\n  data,\n  codec,\n  codecFrames,\n  segments,\n  subarray,\n  readRawData,\n  incrementRawData,\n  mapFrameStats,\n  logWarning,\n  parseFrame,\n  parseOggPage,\n  getHeader,\n  enable,\n  checkFrameFooterCrc16,\n  getHeaderFromUint8Array,\n} from \"../../constants.js\";\nimport Parser from \"../Parser.js\";\nimport FLACFrame from \"./FLACFrame.js\";\nimport FLACHeader from \"./FLACHeader.js\";\n\nconst MIN_FLAC_FRAME_SIZE = 2;\nconst MAX_FLAC_FRAME_SIZE = 512 * 1024;\n\nexport default class FLACParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = FLACFrame;\n    this.Header = FLACHeader;\n\n    onCodec(this[codec]);\n  }\n\n  get [codec]() {\n    return \"flac\";\n  }\n\n  *_getNextFrameSyncOffset(offset) {\n    const data = yield* this._codecParser[readRawData](2, 0);\n    const dataLength = data[length] - 2;\n\n    while (offset < dataLength) {\n      // * `11111111|111110..`: Frame sync\n      // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n      const firstByte = data[offset];\n      if (firstByte === 0xff) {\n        const secondByte = data[offset + 1];\n        if (secondByte === 0xf8 || secondByte === 0xf9) break;\n        if (secondByte !== 0xff) offset++; // might as well check for the next sync byte\n      }\n      offset++;\n    }\n\n    return offset;\n  }\n\n  *[parseFrame]() {\n    // find the first valid frame header\n    do {\n      const header = yield* FLACHeader[getHeader](\n        this._codecParser,\n        this._headerCache,\n        0,\n      );\n\n      if (header) {\n        // found a valid frame header\n        // find the next valid frame header\n        let nextHeaderOffset =\n          headerStore.get(header)[length] + MIN_FLAC_FRAME_SIZE;\n\n        while (nextHeaderOffset <= MAX_FLAC_FRAME_SIZE) {\n          if (\n            this._codecParser._flushing ||\n            (yield* FLACHeader[getHeader](\n              this._codecParser,\n              this._headerCache,\n              nextHeaderOffset,\n            ))\n          ) {\n            // found a valid next frame header\n            let frameData =\n              yield* this._codecParser[readRawData](nextHeaderOffset);\n\n            if (!this._codecParser._flushing)\n              frameData = frameData[subarray](0, nextHeaderOffset);\n\n            // check that this is actually the next header by validating the frame footer crc16\n            if (FLACFrame[checkFrameFooterCrc16](frameData)) {\n              // both frame headers, and frame footer crc16 are valid, we are synced (odds are pretty low of a false positive)\n              const frame = new FLACFrame(frameData, header);\n\n              this._headerCache[enable](); // start caching when synced\n              this._codecParser[incrementRawData](nextHeaderOffset); // increment to the next frame\n              this._codecParser[mapFrameStats](frame);\n\n              return frame;\n            }\n          }\n\n          nextHeaderOffset = yield* this._getNextFrameSyncOffset(\n            nextHeaderOffset + 1,\n          );\n        }\n\n        this._codecParser[logWarning](\n          `Unable to sync FLAC frame after searching ${nextHeaderOffset} bytes.`,\n        );\n        this._codecParser[incrementRawData](nextHeaderOffset);\n      } else {\n        // not synced, increment data to continue syncing\n        this._codecParser[incrementRawData](\n          yield* this._getNextFrameSyncOffset(1),\n        );\n      }\n    } while (true);\n  }\n\n  [parseOggPage](oggPage) {\n    if (oggPage[pageSequenceNumber] === 0) {\n      // Identification header\n\n      this._headerCache[enable]();\n      this._streamInfo = oggPage[data][subarray](13);\n    } else if (oggPage[pageSequenceNumber] === 1) {\n      // Vorbis comments\n    } else {\n      oggPage[codecFrames] = frameStore\n        .get(oggPage)\n        [segments].map((segment) => {\n          const header = FLACHeader[getHeaderFromUint8Array](\n            segment,\n            this._headerCache,\n          );\n\n          if (header) {\n            return new FLACFrame(segment, header, this._streamInfo);\n          } else {\n            this._codecParser[logWarning](\n              \"Failed to parse Ogg FLAC frame\",\n              \"Skipping invalid FLAC frame\",\n            );\n          }\n        })\n        .filter((frame) => !!frame);\n    }\n\n    return oggPage;\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/ogg/doc/framing.html\n\nAAAAAAAA AAAAAAAA AAAAAAAA AAAAAAAA BBBBBBBB 00000CDE\n\n(LSB)                                                             (MSB)\nFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF\nGGGGGGGG GGGGGGGG GGGGGGGG GGGGGGGG\nHHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\nIIIIIIII IIIIIIII IIIIIIII IIIIIIII\n\nJJJJJJJJ\nLLLLLLLL...\n\nOgg Page Header\nLetter  Length (bits)  Description\nA   32  0x4f676753, \"OggS\"\nB   8   stream_structure_version\nC   1   (0 no, 1 yes) last page of logical bitstream (eos)\nD   1   (0 no, 1 yes) first page of logical bitstream (bos)\nE   1   (0 no, 1 yes) continued packet\n\nF   64  absolute granule position\nG   32  stream serial number\nH   32  page sequence no\nI   32  page checksum\nJ   8   Number of page segments in the segment table\nL   n   Segment table (n=page_segments+26).\n        Segment table values sum to the total length of the packet.\n        Last value is always < 0xFF. Last lacing value will be 0x00 if evenly divisible by 0xFF.\n        \n*/\n\nimport { headerStore } from \"../../globals.js\";\nimport {\n  absoluteGranulePosition,\n  isContinuedPacket,\n  isFirstPage,\n  isLastPage,\n  pageSequenceNumber,\n  streamSerialNumber,\n  length,\n  pageChecksum,\n  frameLength,\n  streamStructureVersion,\n  pageSegmentTable,\n  pageSegmentBytes,\n  buffer,\n  subarray,\n  readRawData,\n  getHeader,\n  uint8Array,\n  dataView,\n} from \"../../constants.js\";\nimport { readInt64le } from \"../../utilities.js\";\n\nexport default class OggPageHeader {\n  static *[getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least 28 bytes.\n    let data = yield* codecParser[readRawData](28, readOffset);\n\n    // Bytes (1-4 of 28)\n    // Frame sync (must equal OggS): `AAAAAAAA|AAAAAAAA|AAAAAAAA|AAAAAAAA`:\n    if (\n      data[0] !== 0x4f || // O\n      data[1] !== 0x67 || // g\n      data[2] !== 0x67 || // g\n      data[3] !== 0x53 //    S\n    ) {\n      return null;\n    }\n\n    // Byte (5 of 28)\n    // * `BBBBBBBB`: stream_structure_version\n    header[streamStructureVersion] = data[4];\n\n    // Byte (6 of 28)\n    // * `00000CDE`\n    // * `00000...`: All zeros\n    // * `.....C..`: (0 no, 1 yes) last page of logical bitstream (eos)\n    // * `......D.`: (0 no, 1 yes) first page of logical bitstream (bos)\n    // * `.......E`: (0 no, 1 yes) continued packet\n    const zeros = data[5] & 0b11111000;\n    if (zeros) return null;\n\n    header[isLastPage] = !!(data[5] & 0b00000100);\n    header[isFirstPage] = !!(data[5] & 0b00000010);\n    header[isContinuedPacket] = !!(data[5] & 0b00000001);\n\n    const view = new dataView(uint8Array.from(data[subarray](0, 28))[buffer]);\n\n    // Byte (7-14 of 28)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`\n    // * Absolute Granule Position\n    header[absoluteGranulePosition] = readInt64le(view, 6);\n\n    // Byte (15-18 of 28)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`\n    // * Stream Serial Number\n    header[streamSerialNumber] = view.getInt32(14, true);\n\n    // Byte (19-22 of 28)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`\n    // * Page Sequence Number\n    header[pageSequenceNumber] = view.getInt32(18, true);\n\n    // Byte (23-26 of 28)\n    // * `IIIIIIII|IIIIIIII|IIIIIIII|IIIIIIII`\n    // * Page Checksum\n    header[pageChecksum] = view.getInt32(22, true);\n\n    // Byte (27 of 28)\n    // * `JJJJJJJJ`: Number of page segments in the segment table\n    const pageSegmentTableLength = data[26];\n    header[length] = pageSegmentTableLength + 27;\n\n    data = yield* codecParser[readRawData](header[length], readOffset); // read in the page segment table\n\n    header[frameLength] = 0;\n    header[pageSegmentTable] = [];\n    header[pageSegmentBytes] = uint8Array.from(\n      data[subarray](27, header[length]),\n    );\n\n    for (let i = 0, segmentLength = 0; i < pageSegmentTableLength; i++) {\n      const segmentByte = header[pageSegmentBytes][i];\n\n      header[frameLength] += segmentByte;\n      segmentLength += segmentByte;\n\n      if (segmentByte !== 0xff || i === pageSegmentTableLength - 1) {\n        header[pageSegmentTable].push(segmentLength);\n        segmentLength = 0;\n      }\n    }\n\n    return new OggPageHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OggPageHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    headerStore.set(this, header);\n\n    this[absoluteGranulePosition] = header[absoluteGranulePosition];\n    this[isContinuedPacket] = header[isContinuedPacket];\n    this[isFirstPage] = header[isFirstPage];\n    this[isLastPage] = header[isLastPage];\n    this[pageSegmentTable] = header[pageSegmentTable];\n    this[pageSequenceNumber] = header[pageSequenceNumber];\n    this[pageChecksum] = header[pageChecksum];\n    this[streamSerialNumber] = header[streamSerialNumber];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore, frameStore } from \"../../globals.js\";\nimport {\n  codecFrames,\n  rawData,\n  absoluteGranulePosition,\n  crc32,\n  duration,\n  isContinuedPacket,\n  isFirstPage,\n  isLastPage,\n  pageSequenceNumber,\n  samples,\n  streamSerialNumber,\n  length,\n  pageChecksum,\n  frameLength,\n  subarray,\n  readRawData,\n  getFrame,\n  getHeader,\n} from \"../../constants.js\";\n\nimport Frame from \"../Frame.js\";\nimport OggPageHeader from \"./OggPageHeader.js\";\n\nexport default class OggPage extends Frame {\n  static *[getFrame](codecParser, headerCache, readOffset) {\n    const header = yield* OggPageHeader[getHeader](\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (header) {\n      const frameLengthValue = headerStore.get(header)[frameLength];\n      const headerLength = headerStore.get(header)[length];\n      const totalLength = headerLength + frameLengthValue;\n\n      const rawDataValue = (yield* codecParser[readRawData](totalLength, 0))[\n        subarray\n      ](0, totalLength);\n\n      const frame = rawDataValue[subarray](headerLength, totalLength);\n\n      return new OggPage(header, frame, rawDataValue);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(header, frame, rawDataValue) {\n    super(header, frame);\n\n    frameStore.get(this)[length] = rawDataValue[length];\n\n    this[codecFrames] = [];\n    this[rawData] = rawDataValue;\n    this[absoluteGranulePosition] = header[absoluteGranulePosition];\n    this[crc32] = header[pageChecksum];\n    this[duration] = 0;\n    this[isContinuedPacket] = header[isContinuedPacket];\n    this[isFirstPage] = header[isFirstPage];\n    this[isLastPage] = header[isLastPage];\n    this[pageSequenceNumber] = header[pageSequenceNumber];\n    this[samples] = 0;\n    this[streamSerialNumber] = header[streamSerialNumber];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class OpusFrame extends CodecFrame {\n  constructor(data, header, samples) {\n    super(header, data, samples);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://tools.ietf.org/html/rfc7845.html\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'O'      |      'p'      |      'u'      |      's'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'H'      |      'e'      |      'a'      |      'd'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Version = 1  | Channel Count |           Pre-skip            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Input Sample Rate (Hz)                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Output Gain (Q7.8 in dB)    | Mapping Family|               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               :\n|                                                               |\n:               Optional Channel Mapping Table...               :\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLetter  Length (bits)  Description\nA  64  Magic Signature - OpusHead\nB  8   Version number - 00000001\nC  8   Output channel count (unsigned)\nD  16  Pre-skip (unsigned, little endian)\nE  32  Sample rate (unsigned, little endian)\nF  16  Output Gain (signed, little endian)\nG  8   Channel Mapping family (unsigned)\n\n// if(channel mapping !== 0)\nH  8   Stream count (unsigned)\nI  8   Coupled Stream Count (unsigned)\nJ  8*C Channel Mapping\n*/\n\nimport {\n  rate48000,\n  vorbisOpusChannelMapping,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  channels,\n  length,\n  bandwidth,\n  channelMappingFamily,\n  channelMappingTable,\n  coupledStreamCount,\n  frameCount,\n  frameSize,\n  hasOpusPadding,\n  inputSampleRate,\n  isVbr,\n  mode,\n  outputGain,\n  preSkip,\n  streamCount,\n  data,\n  buffer,\n  subarray,\n  getHeader,\n  setHeader,\n  getHeaderFromUint8Array,\n  uint8Array,\n  dataView,\n} from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\n/* prettier-ignore */\nconst channelMappingFamilies = {\n  0b00000000: vorbisOpusChannelMapping.slice(0,2),\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    */\n  0b00000001: vorbisOpusChannelMapping\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    2: \"linear surround (left, center, right)\"\n    3: \"quadraphonic (front left, front right, rear left, rear right)\"\n    4: \"5.0 surround (front left, front center, front right, rear left, rear right)\"\n    5: \"5.1 surround (front left, front center, front right, rear left, rear right, LFE)\"\n    6: \"6.1 surround (front left, front center, front right, side left, side right, rear center, LFE)\"\n    7: \"7.1 surround (front left, front center, front right, side left, side right, rear left, rear right, LFE)\"\n    */\n  // additional channel mappings are user defined\n};\n\nconst silkOnly = \"SILK-only\";\nconst celtOnly = \"CELT-only\";\nconst hybrid = \"Hybrid\";\n\nconst narrowBand = \"narrowband\";\nconst mediumBand = \"medium-band\";\nconst wideBand = \"wideband\";\nconst superWideBand = \"super-wideband\";\nconst fullBand = \"fullband\";\n\n//  0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// | config  |s| c |\n// +-+-+-+-+-+-+-+-+\n// prettier-ignore\nconst configTable = {\n  0b00000000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 10 },\n  0b00001000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 20 },\n  0b00010000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 40 },\n  0b00011000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 60 },\n  0b00100000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 10 },\n  0b00101000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 20 },\n  0b00110000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 40 },\n  0b00111000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 60 },\n  0b01000000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 10 },\n  0b01001000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 20 },\n  0b01010000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 40 },\n  0b01011000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 60 },\n  0b01100000: { [mode]: hybrid, [bandwidth]: superWideBand, [frameSize]: 10 },\n  0b01101000: { [mode]: hybrid, [bandwidth]: superWideBand, [frameSize]: 20 },\n  0b01110000: { [mode]: hybrid, [bandwidth]: fullBand, [frameSize]: 10 },\n  0b01111000: { [mode]: hybrid, [bandwidth]: fullBand, [frameSize]: 20 },\n  0b10000000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 2.5 },\n  0b10001000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 5 },\n  0b10010000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 10 },\n  0b10011000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 20 },\n  0b10100000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 2.5 },\n  0b10101000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 5 },\n  0b10110000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 10 },\n  0b10111000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 20 },\n  0b11000000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 2.5 },\n  0b11001000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 5 },\n  0b11010000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 10 },\n  0b11011000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 20 },\n  0b11100000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 2.5 },\n  0b11101000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 5 },\n  0b11110000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 10 },\n  0b11111000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 20 },\n};\n\nexport default class OpusHeader extends CodecHeader {\n  static [getHeaderFromUint8Array](dataValue, packetData, headerCache) {\n    const header = {};\n\n    // get length of header\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    header[channels] = dataValue[9];\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    header[channelMappingFamily] = dataValue[18];\n\n    header[length] =\n      header[channelMappingFamily] !== 0 ? 21 + header[channels] : 19;\n\n    if (dataValue[length] < header[length])\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Page Segment Bytes (1-2)\n    // * `AAAAA...`: Packet config\n    // * `.....B..`:\n    // * `......CC`: Packet code\n    const packetMode = packetData[0] & 0b00000011;\n    const packetLength = packetMode === 3 ? 2 : 1;\n\n    // Check header cache\n    const key =\n      bytesToString(dataValue[subarray](0, header[length])) +\n      bytesToString(packetData[subarray](0, packetLength));\n    const cachedHeader = headerCache[getHeader](key);\n\n    if (cachedHeader) return new OpusHeader(cachedHeader);\n\n    // Bytes (1-8 of 19): OpusHead - Magic Signature\n    if (key.substr(0, 8) !== \"OpusHead\") {\n      return null;\n    }\n\n    // Byte (9 of 19)\n    // * `00000001`: Version number\n    if (dataValue[8] !== 1) return null;\n\n    header[data] = uint8Array.from(dataValue[subarray](0, header[length]));\n\n    const view = new dataView(header[data][buffer]);\n\n    header[bitDepth] = 16;\n\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    // set earlier to determine length\n\n    // Byte (11-12 of 19)\n    // * `DDDDDDDD|DDDDDDDD`: Pre skip\n    header[preSkip] = view.getUint16(10, true);\n\n    // Byte (13-16 of 19)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[inputSampleRate] = view.getUint32(12, true);\n    // Opus is always decoded at 48kHz\n    header[sampleRate] = rate48000;\n\n    // Byte (17-18 of 19)\n    // * `FFFFFFFF|FFFFFFFF`: Output Gain\n    header[outputGain] = view.getInt16(16, true);\n\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    // set earlier to determine length\n    if (header[channelMappingFamily] in channelMappingFamilies) {\n      header[channelMode] =\n        channelMappingFamilies[header[channelMappingFamily]][\n          header[channels] - 1\n        ];\n      if (!header[channelMode]) return null;\n    }\n\n    if (header[channelMappingFamily] !== 0) {\n      // * `HHHHHHHH`: Stream count\n      header[streamCount] = dataValue[19];\n\n      // * `IIIIIIII`: Coupled Stream count\n      header[coupledStreamCount] = dataValue[20];\n\n      // * `JJJJJJJJ|...` Channel Mapping table\n      header[channelMappingTable] = [\n        ...dataValue[subarray](21, header[channels] + 21),\n      ];\n    }\n\n    const packetConfig = configTable[0b11111000 & packetData[0]];\n    header[mode] = packetConfig[mode];\n    header[bandwidth] = packetConfig[bandwidth];\n    header[frameSize] = packetConfig[frameSize];\n\n    // https://tools.ietf.org/html/rfc6716#appendix-B\n    switch (packetMode) {\n      case 0:\n        // 0: 1 frame in the packet\n        header[frameCount] = 1;\n        break;\n      case 1:\n      // 1: 2 frames in the packet, each with equal compressed size\n      case 2:\n        // 2: 2 frames in the packet, with different compressed sizes\n        header[frameCount] = 2;\n        break;\n      case 3:\n        // 3: an arbitrary number of frames in the packet\n        header[isVbr] = !!(0b10000000 & packetData[1]);\n        header[hasOpusPadding] = !!(0b01000000 & packetData[1]);\n        header[frameCount] = 0b00111111 & packetData[1];\n        break;\n      default:\n        return null;\n    }\n\n    // set header cache\n    {\n      const {\n        length,\n        data: headerData,\n        channelMappingFamily,\n        ...codecUpdateFields\n      } = header;\n\n      headerCache[setHeader](key, header, codecUpdateFields);\n    }\n\n    return new OpusHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OpusHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[data] = header[data];\n    this[bandwidth] = header[bandwidth];\n    this[channelMappingFamily] = header[channelMappingFamily];\n    this[channelMappingTable] = header[channelMappingTable];\n    this[coupledStreamCount] = header[coupledStreamCount];\n    this[frameCount] = header[frameCount];\n    this[frameSize] = header[frameSize];\n    this[hasOpusPadding] = header[hasOpusPadding];\n    this[inputSampleRate] = header[inputSampleRate];\n    this[isVbr] = header[isVbr];\n    this[mode] = header[mode];\n    this[outputGain] = header[outputGain];\n    this[preSkip] = header[preSkip];\n    this[streamCount] = header[streamCount];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../../globals.js\";\nimport {\n  codecFrames,\n  data,\n  pageSequenceNumber,\n  codec,\n  segments,\n  logError,\n  parseOggPage,\n  enable,\n  getHeaderFromUint8Array,\n  preSkip,\n  frameSize,\n  frameCount,\n  sampleRate,\n} from \"../../constants.js\";\nimport Parser from \"../Parser.js\";\nimport OpusFrame from \"./OpusFrame.js\";\nimport OpusHeader from \"./OpusHeader.js\";\n\nexport default class OpusParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = OpusFrame;\n    this.Header = OpusHeader;\n\n    onCodec(this[codec]);\n    this._identificationHeader = null;\n    this._preSkipRemaining = null;\n  }\n\n  get [codec]() {\n    return \"opus\";\n  }\n\n  /**\n   * @todo implement continued page support\n   */\n  [parseOggPage](oggPage) {\n    if (oggPage[pageSequenceNumber] === 0) {\n      // Identification header\n\n      this._headerCache[enable]();\n      this._identificationHeader = oggPage[data];\n    } else if (oggPage[pageSequenceNumber] === 1) {\n      // OpusTags\n    } else {\n      oggPage[codecFrames] = frameStore\n        .get(oggPage)\n        [segments].map((segment) => {\n          const header = OpusHeader[getHeaderFromUint8Array](\n            this._identificationHeader,\n            segment,\n            this._headerCache,\n          );\n\n          if (header) {\n            if (this._preSkipRemaining === null)\n              this._preSkipRemaining = header[preSkip];\n\n            let samples =\n              ((header[frameSize] * header[frameCount]) / 1000) *\n              header[sampleRate];\n\n            if (this._preSkipRemaining > 0) {\n              this._preSkipRemaining -= samples;\n              samples =\n                this._preSkipRemaining < 0 ? -this._preSkipRemaining : 0;\n            }\n\n            return new OpusFrame(segment, header, samples);\n          }\n\n          this._codecParser[logError](\n            \"Failed to parse Ogg Opus Header\",\n            \"Not a valid Ogg Opus file\",\n          );\n        });\n    }\n\n    return oggPage;\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class VorbisFrame extends CodecFrame {\n  constructor(data, header, samples) {\n    super(header, data, samples);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\n\n1  1) [packet_type] : 8 bit value\n2  2) 0x76, 0x6f, 0x72, 0x62, 0x69, 0x73: the characters ’v’,’o’,’r’,’b’,’i’,’s’ as six octets\n\nLetter bits Description\nA      8    Packet type\nB      48   Magic signature (vorbis)\nC      32   Version number\nD      8    Channels\nE      32   Sample rate\nF      32   Bitrate Maximum (signed)\nG      32   Bitrate Nominal (signed)\nH      32   Bitrate Minimum (signed)\nI      4    blocksize 1\nJ      4    blocksize 0\nK      1    Framing flag\n*/\n\nimport {\n  vorbisOpusChannelMapping,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  channels,\n  length,\n  bitrateMaximum,\n  bitrateMinimum,\n  bitrateNominal,\n  blocksize0,\n  blocksize1,\n  data,\n  vorbisComments,\n  vorbisSetup,\n  version,\n  buffer,\n  subarray,\n  getHeader,\n  setHeader,\n  getHeaderFromUint8Array,\n  uint8Array,\n  dataView,\n} from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst blockSizes = {\n  // 0b0110: 64,\n  // 0b0111: 128,\n  // 0b1000: 256,\n  // 0b1001: 512,\n  // 0b1010: 1024,\n  // 0b1011: 2048,\n  // 0b1100: 4096,\n  // 0b1101: 8192\n};\nfor (let i = 0; i < 8; i++) blockSizes[i + 6] = 2 ** (6 + i);\n\nexport default class VorbisHeader extends CodecHeader {\n  static [getHeaderFromUint8Array](\n    dataValue,\n    headerCache,\n    vorbisCommentsData,\n    vorbisSetupData,\n  ) {\n    // Must be at least 30 bytes.\n    if (dataValue[length] < 30)\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Check header cache\n    const key = bytesToString(dataValue[subarray](0, 30));\n    const cachedHeader = headerCache[getHeader](key);\n    if (cachedHeader) return new VorbisHeader(cachedHeader);\n\n    const header = { [length]: 30 };\n\n    // Bytes (1-7 of 30): /01vorbis - Magic Signature\n    if (key.substr(0, 7) !== \"\\x01vorbis\") {\n      return null;\n    }\n\n    header[data] = uint8Array.from(dataValue[subarray](0, 30));\n    const view = new dataView(header[data][buffer]);\n\n    // Byte (8-11 of 30)\n    // * `CCCCCCCC|CCCCCCCC|CCCCCCCC|CCCCCCCC`: Version number\n    header[version] = view.getUint32(7, true);\n    if (header[version] !== 0) return null;\n\n    // Byte (12 of 30)\n    // * `DDDDDDDD`: Channel Count\n    header[channels] = dataValue[11];\n    header[channelMode] =\n      vorbisOpusChannelMapping[header[channels] - 1] || \"application defined\";\n\n    // Byte (13-16 of 30)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[sampleRate] = view.getUint32(12, true);\n\n    // Byte (17-20 of 30)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`: Bitrate Maximum\n    header[bitrateMaximum] = view.getInt32(16, true);\n\n    // Byte (21-24 of 30)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`: Bitrate Nominal\n    header[bitrateNominal] = view.getInt32(20, true);\n\n    // Byte (25-28 of 30)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`: Bitrate Minimum\n    header[bitrateMinimum] = view.getInt32(24, true);\n\n    // Byte (29 of 30)\n    // * `IIII....` Blocksize 1\n    // * `....JJJJ` Blocksize 0\n    header[blocksize1] = blockSizes[(dataValue[28] & 0b11110000) >> 4];\n    header[blocksize0] = blockSizes[dataValue[28] & 0b00001111];\n    if (header[blocksize0] > header[blocksize1]) return null;\n\n    // Byte (29 of 30)\n    // * `00000001` Framing bit\n    if (dataValue[29] !== 0x01) return null;\n\n    header[bitDepth] = 32;\n    header[vorbisSetup] = vorbisSetupData;\n    header[vorbisComments] = vorbisCommentsData;\n\n    {\n      // set header cache\n      const {\n        length,\n        data,\n        version,\n        vorbisSetup,\n        vorbisComments,\n        ...codecUpdateFields\n      } = header;\n      headerCache[setHeader](key, header, codecUpdateFields);\n    }\n\n    return new VorbisHeader(header);\n  }\n\n  /**\n   * @private\n   * Call VorbisHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[bitrateMaximum] = header[bitrateMaximum];\n    this[bitrateMinimum] = header[bitrateMinimum];\n    this[bitrateNominal] = header[bitrateNominal];\n    this[blocksize0] = header[blocksize0];\n    this[blocksize1] = header[blocksize1];\n    this[data] = header[data];\n    this[vorbisComments] = header[vorbisComments];\n    this[vorbisSetup] = header[vorbisSetup];\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../../globals.js\";\nimport { BitReader, reverse } from \"../../utilities.js\";\nimport {\n  data,\n  codec,\n  blocksize0,\n  blocksize1,\n  codecFrames,\n  segments,\n  vorbis,\n  logWarning,\n  parseOggPage,\n  enable,\n  getHeaderFromUint8Array,\n} from \"../../constants.js\";\n\nimport Parser from \"../Parser.js\";\nimport VorbisFrame from \"./VorbisFrame.js\";\nimport VorbisHeader from \"./VorbisHeader.js\";\n\nexport default class VorbisParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = VorbisFrame;\n\n    onCodec(this[codec]);\n\n    this._identificationHeader = null;\n    this._setupComplete = false;\n\n    this._prevBlockSize = null;\n  }\n\n  get [codec]() {\n    return vorbis;\n  }\n\n  [parseOggPage](oggPage) {\n    oggPage[codecFrames] = [];\n\n    for (const oggPageSegment of frameStore.get(oggPage)[segments]) {\n      if (oggPageSegment[0] === 1) {\n        // Identification header\n\n        this._headerCache[enable]();\n        this._identificationHeader = oggPage[data];\n        this._setupComplete = false;\n      } else if (oggPageSegment[0] === 3) {\n        // comment header\n\n        this._vorbisComments = oggPageSegment;\n      } else if (oggPageSegment[0] === 5) {\n        // setup header\n\n        this._vorbisSetup = oggPageSegment;\n        this._mode = this._parseSetupHeader(oggPageSegment);\n        this._setupComplete = true;\n      } else if (this._setupComplete) {\n        const header = VorbisHeader[getHeaderFromUint8Array](\n          this._identificationHeader,\n          this._headerCache,\n          this._vorbisComments,\n          this._vorbisSetup,\n        );\n\n        if (header) {\n          oggPage[codecFrames].push(\n            new VorbisFrame(\n              oggPageSegment,\n              header,\n              this._getSamples(oggPageSegment, header),\n            ),\n          );\n        } else {\n          this._codecParser[logError](\n            \"Failed to parse Ogg Vorbis Header\",\n            \"Not a valid Ogg Vorbis file\",\n          );\n        }\n      }\n    }\n\n    return oggPage;\n  }\n\n  _getSamples(segment, header) {\n    const blockFlag =\n      this._mode.blockFlags[(segment[0] >> 1) & this._mode.mask];\n\n    const currentBlockSize = blockFlag\n      ? header[blocksize1]\n      : header[blocksize0];\n\n    // data is not returned on the first frame, but is used to prime the decoder\n    // https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-590004\n    const samplesValue =\n      this._prevBlockSize === null\n        ? 0\n        : (this._prevBlockSize + currentBlockSize) / 4;\n\n    this._prevBlockSize = currentBlockSize;\n\n    return samplesValue;\n  }\n\n  // https://gitlab.xiph.org/xiph/liboggz/-/blob/master/src/liboggz/oggz_auto.c#L911\n  // https://github.com/FFmpeg/FFmpeg/blob/master/libavcodec/vorbis_parser.c\n  /*\n   * This is the format of the mode data at the end of the packet for all\n   * Vorbis Version 1 :\n   *\n   * [ 6:number_of_modes ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:framing(1) ]\n   *\n   * e.g.:\n   *\n   * MsB         LsB\n   *              <-\n   * 0 0 0 0 0 1 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1|0 0 0 0 0\n   * 0 0 0 0|0|0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0|1|0 0 0 0 |\n   * 0 0 0 0 0 0 0 0 V\n   * 0 0 0|0 0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0|1 0 0 0 0 0\n   *\n   * The simplest way to approach this is to start at the end\n   * and read backwards to determine the mode configuration.\n   *\n   * liboggz and ffmpeg both use this method.\n   */\n  _parseSetupHeader(setup) {\n    const bitReader = new BitReader(setup);\n    const mode = {\n      count: 0,\n      blockFlags: [],\n    };\n\n    // sync with the framing bit\n    while ((bitReader.read(1) & 0x01) !== 1) {}\n\n    let modeBits;\n    // search in reverse to parse out the mode entries\n    // limit mode count to 63 so previous block flag will be in first packet byte\n    while (mode.count < 64 && bitReader.position > 0) {\n      reverse(bitReader.read(8)); // read mapping\n\n      // 16 bits transform type, 16 bits window type, all values must be zero\n      let currentByte = 0;\n      while (bitReader.read(8) === 0x00 && currentByte++ < 3) {} // a non-zero value may indicate the end of the mode entries, or invalid data\n\n      if (currentByte === 4) {\n        // transform type and window type were all zeros\n        modeBits = bitReader.read(7); // modeBits may need to be used in the next iteration if this is the last mode entry\n        mode.blockFlags.unshift(modeBits & 0x01); // read and store mode number -> block flag\n        bitReader.position += 6; // go back 6 bits so next iteration starts right after the block flag\n        mode.count++;\n      } else {\n        // transform type and window type were not all zeros\n        // check for mode count using previous iteration modeBits\n        if (((reverse(modeBits) & 0b01111110) >> 1) + 1 !== mode.count) {\n          this._codecParser[logWarning](\n            \"vorbis derived mode count did not match actual mode count\",\n          );\n        }\n\n        break;\n      }\n    }\n\n    // xxxxxxxa packet type\n    // xxxxxxbx mode count (number of mode count bits)\n    // xxxxxcxx previous window flag\n    // xxxxdxxx next window flag\n    mode.mask = (1 << Math.log2(mode.count)) - 1;\n\n    return mode;\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore, frameStore } from \"../../globals.js\";\nimport { bytesToString, concatBuffers } from \"../../utilities.js\";\nimport {\n  header,\n  pageSequenceNumber,\n  pageSegmentBytes,\n  pageSegmentTable,\n  codec,\n  data,\n  length,\n  samples,\n  segments,\n  subarray,\n  vorbis,\n  mapFrameStats,\n  logWarning,\n  fixedLengthFrameSync,\n  parseFrame,\n  parseOggPage,\n  reset,\n  uint8Array,\n  isLastPage,\n  streamSerialNumber,\n  absoluteGranulePosition,\n} from \"../../constants.js\";\n\nimport Parser from \"../../codecs/Parser.js\";\nimport OggPage from \"./OggPage.js\";\nimport OggPageHeader from \"./OggPageHeader.js\";\n\nimport FLACParser from \"../../codecs/flac/FLACParser.js\";\nimport OpusParser from \"../../codecs/opus/OpusParser.js\";\nimport VorbisParser from \"../../codecs/vorbis/VorbisParser.js\";\n\nclass OggStream {\n  constructor(codecParser, headerCache, onCodec) {\n    this._codecParser = codecParser;\n    this._headerCache = headerCache;\n    this._onCodec = onCodec;\n\n    this._continuedPacket = new uint8Array();\n    this._codec = null;\n    this._isSupported = null;\n    this._previousAbsoluteGranulePosition = null;\n  }\n\n  get [codec]() {\n    return this._codec || \"\";\n  }\n\n  _updateCodec(codec, Parser) {\n    if (this._codec !== codec) {\n      this._headerCache[reset]();\n      this._parser = new Parser(\n        this._codecParser,\n        this._headerCache,\n        this._onCodec,\n      );\n      this._codec = codec;\n    }\n  }\n\n  _checkCodecSupport({ data }) {\n    const idString = bytesToString(data[subarray](0, 8));\n\n    switch (idString) {\n      case \"fishead\\0\":\n        return false; // ignore ogg skeleton packets\n      case \"OpusHead\":\n        this._updateCodec(\"opus\", OpusParser);\n        return true;\n      case /^\\x7fFLAC/.test(idString) && idString:\n        this._updateCodec(\"flac\", FLACParser);\n        return true;\n      case /^\\x01vorbis/.test(idString) && idString:\n        this._updateCodec(vorbis, VorbisParser);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _checkPageSequenceNumber(oggPage) {\n    if (\n      oggPage[pageSequenceNumber] !== this._pageSequenceNumber + 1 &&\n      this._pageSequenceNumber > 1 &&\n      oggPage[pageSequenceNumber] > 1\n    ) {\n      this._codecParser[logWarning](\n        \"Unexpected gap in Ogg Page Sequence Number.\",\n        `Expected: ${this._pageSequenceNumber + 1}, Got: ${\n          oggPage[pageSequenceNumber]\n        }`,\n      );\n    }\n\n    this._pageSequenceNumber = oggPage[pageSequenceNumber];\n  }\n\n  _parsePage(oggPage) {\n    if (this._isSupported === null) {\n      this._pageSequenceNumber = oggPage[pageSequenceNumber];\n      this._isSupported = this._checkCodecSupport(oggPage);\n    }\n\n    this._checkPageSequenceNumber(oggPage);\n\n    const oggPageStore = frameStore.get(oggPage);\n    const headerData = headerStore.get(oggPageStore[header]);\n\n    let offset = 0;\n    oggPageStore[segments] = headerData[pageSegmentTable].map((segmentLength) =>\n      oggPage[data][subarray](offset, (offset += segmentLength)),\n    );\n\n    // prepend any existing continued packet data\n    if (this._continuedPacket[length]) {\n      oggPageStore[segments][0] = concatBuffers(\n        this._continuedPacket,\n        oggPageStore[segments][0],\n      );\n\n      this._continuedPacket = new uint8Array();\n    }\n\n    // save any new continued packet data\n    if (\n      headerData[pageSegmentBytes][headerData[pageSegmentBytes][length] - 1] ===\n      0xff\n    ) {\n      this._continuedPacket = concatBuffers(\n        this._continuedPacket,\n        oggPageStore[segments].pop(),\n      );\n    }\n\n    // set total samples in this ogg page\n    if (this._previousAbsoluteGranulePosition !== null) {\n      oggPage[samples] = Number(\n        oggPage[absoluteGranulePosition] -\n          this._previousAbsoluteGranulePosition,\n      );\n    }\n\n    this._previousAbsoluteGranulePosition = oggPage[absoluteGranulePosition];\n\n    if (this._isSupported) {\n      const frame = this._parser[parseOggPage](oggPage);\n      this._codecParser[mapFrameStats](frame);\n\n      return frame;\n    } else {\n      return oggPage;\n    }\n  }\n}\n\nexport default class OggParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n\n    this._onCodec = onCodec;\n    this.Frame = OggPage;\n    this.Header = OggPageHeader;\n\n    this._streams = new Map();\n    this._currentSerialNumber = null;\n  }\n\n  get [codec]() {\n    const oggStream = this._streams.get(this._currentSerialNumber);\n\n    return oggStream ? oggStream.codec : \"\";\n  }\n\n  *[parseFrame]() {\n    const oggPage = yield* this[fixedLengthFrameSync](true);\n    this._currentSerialNumber = oggPage[streamSerialNumber];\n\n    let oggStream = this._streams.get(this._currentSerialNumber);\n    if (!oggStream) {\n      oggStream = new OggStream(\n        this._codecParser,\n        this._headerCache,\n        this._onCodec,\n      );\n      this._streams.set(this._currentSerialNumber, oggStream);\n    }\n\n    if (oggPage[isLastPage]) this._streams.delete(this._currentSerialNumber);\n\n    return oggStream._parsePage(oggPage);\n  }\n}\n","/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { crc32Function, concatBuffers } from \"./utilities.js\";\nimport {\n  header,\n  sampleRate,\n  bitrate,\n  length,\n  frameNumber,\n  data,\n  samples,\n  codec,\n  codecFrames,\n  totalBytesOut,\n  totalSamples,\n  totalDuration,\n  crc32,\n  duration,\n  subarray,\n  readRawData,\n  incrementRawData,\n  mapCodecFrameStats,\n  mapFrameStats,\n  logWarning,\n  logError,\n  parseFrame,\n  checkCodecUpdate,\n  reset,\n  isLastPage,\n} from \"./constants.js\";\nimport HeaderCache from \"./codecs/HeaderCache.js\";\nimport MPEGParser from \"./codecs/mpeg/MPEGParser.js\";\nimport AACParser from \"./codecs/aac/AACParser.js\";\nimport FLACParser from \"./codecs/flac/FLACParser.js\";\nimport OggParser from \"./containers/ogg/OggParser.js\";\n\nconst noOp = () => {};\n\nexport default class CodecParser {\n  constructor(\n    mimeType,\n    {\n      onCodec,\n      onCodecHeader,\n      onCodecUpdate,\n      enableLogging = false,\n      enableFrameCRC32 = true,\n    } = {},\n  ) {\n    this._inputMimeType = mimeType;\n    this._onCodec = onCodec || noOp;\n    this._onCodecHeader = onCodecHeader || noOp;\n    this._onCodecUpdate = onCodecUpdate;\n    this._enableLogging = enableLogging;\n    this._crc32 = enableFrameCRC32 ? crc32Function : noOp;\n\n    this[reset]();\n  }\n\n  /**\n   * @public\n   * @returns The detected codec\n   */\n  get [codec]() {\n    return this._parser ? this._parser[codec] : \"\";\n  }\n\n  [reset]() {\n    this._headerCache = new HeaderCache(\n      this._onCodecHeader,\n      this._onCodecUpdate,\n    );\n\n    this._generator = this._getGenerator();\n    this._generator.next();\n  }\n\n  /**\n   * @public\n   * @description Generator function that yields any buffered CodecFrames and resets the CodecParser\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *flush() {\n    this._flushing = true;\n\n    for (let i = this._generator.next(); i.value; i = this._generator.next()) {\n      yield i.value;\n    }\n\n    this._flushing = false;\n\n    this[reset]();\n  }\n\n  /**\n   * @public\n   * @description Generator function takes in a Uint8Array of data and returns a CodecFrame from the data for each iteration\n   * @param {Uint8Array} chunk Next chunk of codec data to read\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *parseChunk(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      yield i.value;\n    }\n  }\n\n  /**\n   * @public\n   * @description Parses an entire file and returns all of the contained frames.\n   * @param {Uint8Array} fileData Coded data to read\n   * @returns {Array<CodecFrame|OggPage>} CodecFrames\n   */\n  parseAll(fileData) {\n    return [...this.parseChunk(fileData), ...this.flush()];\n  }\n\n  /**\n   * @private\n   */\n  *_getGenerator() {\n    if (this._inputMimeType.match(/aac/)) {\n      this._parser = new AACParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/mpeg/)) {\n      this._parser = new MPEGParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/flac/)) {\n      this._parser = new FLACParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/ogg/)) {\n      this._parser = new OggParser(this, this._headerCache, this._onCodec);\n    } else {\n      throw new Error(`Unsupported Codec ${mimeType}`);\n    }\n\n    this._frameNumber = 0;\n    this._currentReadPosition = 0;\n    this._totalBytesIn = 0;\n    this._totalBytesOut = 0;\n    this._totalSamples = 0;\n    this._sampleRate = undefined;\n\n    this._rawData = new Uint8Array(0);\n\n    // start parsing out frames\n    while (true) {\n      const frame = yield* this._parser[parseFrame]();\n      if (frame) yield frame;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {number} minSize Minimum bytes to have present in buffer\n   * @returns {Uint8Array} rawData\n   */\n  *[readRawData](minSize = 0, readOffset = 0) {\n    let rawData;\n\n    while (this._rawData[length] <= minSize + readOffset) {\n      rawData = yield;\n\n      if (this._flushing) return this._rawData[subarray](readOffset);\n\n      if (rawData) {\n        this._totalBytesIn += rawData[length];\n        this._rawData = concatBuffers(this._rawData, rawData);\n      }\n    }\n\n    return this._rawData[subarray](readOffset);\n  }\n\n  /**\n   * @protected\n   * @param {number} increment Bytes to increment codec data\n   */\n  [incrementRawData](increment) {\n    this._currentReadPosition += increment;\n    this._rawData = this._rawData[subarray](increment);\n  }\n\n  /**\n   * @protected\n   */\n  [mapCodecFrameStats](frame) {\n    this._sampleRate = frame[header][sampleRate];\n\n    frame[header][bitrate] =\n      frame[duration] > 0\n        ? Math.round(frame[data][length] / frame[duration]) * 8\n        : 0;\n    frame[frameNumber] = this._frameNumber++;\n    frame[totalBytesOut] = this._totalBytesOut;\n    frame[totalSamples] = this._totalSamples;\n    frame[totalDuration] = (this._totalSamples / this._sampleRate) * 1000;\n    frame[crc32] = this._crc32(frame[data]);\n\n    this._headerCache[checkCodecUpdate](\n      frame[header][bitrate],\n      frame[totalDuration],\n    );\n\n    this._totalBytesOut += frame[data][length];\n    this._totalSamples += frame[samples];\n  }\n\n  /**\n   * @protected\n   */\n  [mapFrameStats](frame) {\n    if (frame[codecFrames]) {\n      // Ogg container\n      if (frame[isLastPage]) {\n        // cut any excess samples that fall outside of the absolute granule position\n        // some streams put invalid data in absolute granule position, so only do this\n        // for the end of the stream\n        let absoluteGranulePositionSamples = frame[samples];\n\n        frame[codecFrames].forEach((codecFrame) => {\n          const untrimmedCodecSamples = codecFrame[samples];\n\n          if (absoluteGranulePositionSamples < untrimmedCodecSamples) {\n            codecFrame[samples] =\n              absoluteGranulePositionSamples > 0\n                ? absoluteGranulePositionSamples\n                : 0;\n            codecFrame[duration] =\n              (codecFrame[samples] / codecFrame[header][sampleRate]) * 1000;\n          }\n\n          absoluteGranulePositionSamples -= untrimmedCodecSamples;\n\n          this[mapCodecFrameStats](codecFrame);\n        });\n      } else {\n        frame[samples] = 0;\n        frame[codecFrames].forEach((codecFrame) => {\n          frame[samples] += codecFrame[samples];\n          this[mapCodecFrameStats](codecFrame);\n        });\n      }\n\n      frame[duration] = (frame[samples] / this._sampleRate) * 1000 || 0;\n      frame[totalSamples] = this._totalSamples;\n      frame[totalDuration] =\n        (this._totalSamples / this._sampleRate) * 1000 || 0;\n      frame[totalBytesOut] = this._totalBytesOut;\n    } else {\n      this[mapCodecFrameStats](frame);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _log(logger, messages) {\n    if (this._enableLogging) {\n      const stats = [\n        `${codec}:         ${this[codec]}`,\n        `inputMimeType: ${this._inputMimeType}`,\n        `readPosition:  ${this._currentReadPosition}`,\n        `totalBytesIn:  ${this._totalBytesIn}`,\n        `${totalBytesOut}: ${this._totalBytesOut}`,\n      ];\n\n      const width = Math.max(...stats.map((s) => s[length]));\n\n      messages.push(\n        `--stats--${\"-\".repeat(width - 9)}`,\n        ...stats,\n        \"-\".repeat(width),\n      );\n\n      logger(\n        \"codec-parser\",\n        messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\"),\n      );\n    }\n  }\n\n  /**\n   * @protected\n   */\n  [logWarning](...messages) {\n    this._log(console.warn, messages);\n  }\n\n  /**\n   * @protected\n   */\n  [logError](...messages) {\n    this._log(console.error, messages);\n  }\n}\n","import CodecParser from \"./src/CodecParser.js\";\nimport * as constants from \"./src/constants.js\";\n\nexport default CodecParser;\n\nexport const absoluteGranulePosition = constants.absoluteGranulePosition;\nexport const bandwidth = constants.bandwidth;\nexport const bitDepth = constants.bitDepth;\nexport const bitrate = constants.bitrate;\nexport const bitrateMaximum = constants.bitrateMaximum;\nexport const bitrateMinimum = constants.bitrateMinimum;\nexport const bitrateNominal = constants.bitrateNominal;\nexport const buffer = constants.buffer;\nexport const bufferFullness = constants.bufferFullness;\nexport const codec = constants.codec;\nexport const codecFrames = constants.codecFrames;\nexport const coupledStreamCount = constants.coupledStreamCount;\nexport const crc = constants.crc;\nexport const crc16 = constants.crc16;\nexport const crc32 = constants.crc32;\nexport const data = constants.data;\nexport const description = constants.description;\nexport const duration = constants.duration;\nexport const emphasis = constants.emphasis;\nexport const hasOpusPadding = constants.hasOpusPadding;\nexport const header = constants.header;\nexport const isContinuedPacket = constants.isContinuedPacket;\nexport const isCopyrighted = constants.isCopyrighted;\nexport const isFirstPage = constants.isFirstPage;\nexport const isHome = constants.isHome;\nexport const isLastPage = constants.isLastPage;\nexport const isOriginal = constants.isOriginal;\nexport const isPrivate = constants.isPrivate;\nexport const isVbr = constants.isVbr;\nexport const layer = constants.layer;\nexport const length = constants.length;\nexport const mode = constants.mode;\nexport const modeExtension = constants.modeExtension;\nexport const mpeg = constants.mpeg;\nexport const mpegVersion = constants.mpegVersion;\nexport const numberAACFrames = constants.numberAACFrames;\nexport const outputGain = constants.outputGain;\nexport const preSkip = constants.preSkip;\nexport const profile = constants.profile;\nexport const protection = constants.protection;\nexport const rawData = constants.rawData;\nexport const segments = constants.segments;\nexport const subarray = constants.subarray;\nexport const version = constants.version;\nexport const vorbis = constants.vorbis;\nexport const vorbisComments = constants.vorbisComments;\nexport const vorbisSetup = constants.vorbisSetup;\nexport const blockingStrategy = constants.blockingStrategy;\nexport const blockSize = constants.blockSize;\nexport const blocksize0 = constants.blocksize0;\nexport const blocksize1 = constants.blocksize1;\nexport const channelMappingFamily = constants.channelMappingFamily;\nexport const channelMappingTable = constants.channelMappingTable;\nexport const channelMode = constants.channelMode;\nexport const channels = constants.channels;\nexport const copyrightId = constants.copyrightId;\nexport const copyrightIdStart = constants.copyrightIdStart;\nexport const frame = constants.frame;\nexport const frameCount = constants.frameCount;\nexport const frameLength = constants.frameLength;\nexport const frameNumber = constants.frameNumber;\nexport const framePadding = constants.framePadding;\nexport const frameSize = constants.frameSize;\nexport const inputSampleRate = constants.inputSampleRate;\nexport const pageChecksum = constants.pageChecksum;\nexport const pageSegmentTable = constants.pageSegmentTable;\nexport const pageSequenceNumber = constants.pageSequenceNumber;\nexport const sampleNumber = constants.sampleNumber;\nexport const sampleRate = constants.sampleRate;\nexport const samples = constants.samples;\nexport const streamCount = constants.streamCount;\nexport const streamInfo = constants.streamInfo;\nexport const streamSerialNumber = constants.streamSerialNumber;\nexport const streamStructureVersion = constants.streamStructureVersion;\nexport const totalBytesOut = constants.totalBytesOut;\nexport const totalDuration = constants.totalDuration;\nexport const totalSamples = constants.totalSamples;\n","import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\nimport { OpusDecoder, OpusDecoderWebWorker } from \"opus-decoder\";\nimport CodecParser, {\n  codecFrames,\n  header,\n  channels,\n  streamCount,\n  coupledStreamCount,\n  channelMappingTable,\n  preSkip,\n  isLastPage,\n  absoluteGranulePosition,\n  data,\n  totalSamples,\n} from \"codec-parser\";\n\n// prettier-ignore\nconst simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]))\n\nexport default class OggOpusDecoder {\n  constructor(options = {}) {\n    this._sampleRate = options.sampleRate || 48000;\n    this._speechQualityEnhancement = options.speechQualityEnhancement;\n    this._forceStereo =\n      options.forceStereo !== undefined ? options.forceStereo : false;\n\n    this._onCodec = (codec) => {\n      if (codec !== \"opus\")\n        throw new Error(\n          \"ogg-opus-decoder does not support this codec \" + codec,\n        );\n    };\n\n    // instantiate to create static properties\n    new WASMAudioDecoderCommon();\n    this._useMLDecoder = [\"lace\", \"nolace\"].includes(\n      this._speechQualityEnhancement,\n    );\n\n    this._decoderLibraryLoaded = this._loadDecoderLibrary();\n    this._ready = this._init();\n  }\n\n  _initDecoderClass() {\n    this._decoderClass = this._useMLDecoder\n      ? this.OpusMLDecoder\n      : this.OpusDecoder;\n  }\n\n  async _loadDecoderLibrary() {\n    if (this._useMLDecoder) {\n      const simdSupported = await simd();\n\n      if (simdSupported) {\n        const { OpusMLDecoder, OpusMLDecoderWebWorker } = await import(\n          /* webpackChunkName: \"opus-ml\" */ \"@wasm-audio-decoders/opus-ml\"\n        );\n        this.OpusMLDecoder = OpusMLDecoder;\n        this.OpusMLDecoderWebWorker = OpusMLDecoderWebWorker;\n      } else {\n        console.warn(\n          `ogg-opus-decoder: This platform does not support WebAssembly SIMD; { speechQualityEnhancements: '${this._speechQualityEnhancement}' } has been disabled`,\n        );\n        this._useMLDecoder = false;\n      }\n    }\n    this.OpusDecoder = OpusDecoder;\n    this.OpusDecoderWebWorker = OpusDecoderWebWorker;\n\n    this._initDecoderClass();\n  }\n\n  async _init() {\n    if (this._decoder) await this._decoder.free();\n    this._decoder = null;\n\n    this._codecParser = new CodecParser(\"application/ogg\", {\n      onCodec: this._onCodec,\n      enableFrameCRC32: false,\n    });\n  }\n\n  async _instantiateDecoder(header) {\n    this._totalSamplesDecoded = 0;\n    this._preSkip = header[preSkip];\n    this._channels = this._forceStereo ? 2 : header[channels];\n\n    await this._decoderLibraryLoaded;\n\n    this._decoder = new this._decoderClass({\n      channels: header[channels],\n      streamCount: header[streamCount],\n      coupledStreamCount: header[coupledStreamCount],\n      channelMappingTable: header[channelMappingTable],\n      preSkip: Math.round((this._preSkip / 48000) * this._sampleRate),\n      sampleRate: this._sampleRate,\n      speechQualityEnhancement: this._speechQualityEnhancement,\n      forceStereo: this._forceStereo,\n    });\n    return this._decoder.ready;\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  async reset() {\n    this._ready = this._init();\n    await this._ready;\n  }\n\n  free() {\n    this._ready = this._init();\n  }\n\n  async _decode(oggPages) {\n    let opusFrames = [],\n      allErrors = [],\n      allChannelData = [],\n      samplesThisDecode = 0;\n\n    const flushFrames = async () => {\n      if (opusFrames.length) {\n        await this._decoderReady;\n\n        const { channelData, samplesDecoded, errors } =\n          await this._decoder.decodeFrames(opusFrames);\n\n        allChannelData.push(channelData);\n        allErrors.push(...errors);\n        samplesThisDecode += samplesDecoded;\n        this._totalSamplesDecoded += samplesDecoded;\n\n        opusFrames = [];\n      }\n    };\n\n    for (let i = 0; i < oggPages.length; i++) {\n      const oggPage = oggPages[i];\n\n      // only decode Ogg pages that have codec frames\n      const frames = oggPage[codecFrames].map((f) => f[data]);\n      if (frames.length) {\n        opusFrames.push(...frames);\n\n        if (!this._decoder)\n          // wait until there is an Opus header before instantiating\n          this._decoderReady = this._instantiateDecoder(\n            oggPage[codecFrames][0][header],\n          );\n      }\n\n      if (oggPage[isLastPage]) {\n        // decode anything left in the current ogg file\n        await flushFrames();\n\n        // in cases where BigInt isn't supported, don't do any absoluteGranulePosition logic (i.e. old iOS versions)\n        if (\n          oggPage[absoluteGranulePosition] !== undefined &&\n          allChannelData.length\n        ) {\n          const totalDecodedSamples_48000 =\n            (this._totalSamplesDecoded / this._sampleRate) * 48000;\n\n          // trim any extra samples that are decoded beyond the absoluteGranulePosition, relative to where we started in the stream\n          const samplesToTrim = Math.round(\n            ((totalDecodedSamples_48000 - oggPage[totalSamples]) / 48000) *\n              this._sampleRate,\n          );\n\n          const channelData = allChannelData[allChannelData.length - 1];\n          if (samplesToTrim > 0) {\n            for (let i = 0; i < channelData.length; i++) {\n              channelData[i] = channelData[i].subarray(\n                0,\n                channelData[i].length - samplesToTrim,\n              );\n            }\n          }\n\n          samplesThisDecode -= samplesToTrim;\n          this._totalSamplesDecoded -= samplesToTrim;\n        }\n\n        // reached the end of an ogg stream, reset the decoder\n        await this.reset();\n      }\n    }\n\n    await flushFrames();\n\n    return [\n      allErrors,\n      allChannelData,\n      this._channels,\n      samplesThisDecode,\n      this._sampleRate,\n      16,\n    ];\n  }\n\n  async decode(oggOpusData) {\n    const decoded = await this._decode([\n      ...this._codecParser.parseChunk(oggOpusData),\n    ]);\n\n    return WASMAudioDecoderCommon.getDecodedAudioMultiChannel(...decoded);\n  }\n\n  async decodeFile(oggOpusData) {\n    const decoded = await this._decode([\n      ...this._codecParser.parseAll(oggOpusData),\n    ]);\n    await this.reset();\n\n    return WASMAudioDecoderCommon.getDecodedAudioMultiChannel(...decoded);\n  }\n\n  async flush() {\n    const decoded = await this._decode([...this._codecParser.flush()]);\n    await this.reset();\n\n    return WASMAudioDecoderCommon.getDecodedAudioMultiChannel(...decoded);\n  }\n}\n","import OggOpusDecoder from \"./OggOpusDecoder.js\";\n\nexport default class OggOpusDecoderWebWorker extends OggOpusDecoder {\n  constructor(options) {\n    super(options);\n  }\n\n  _initDecoderClass() {\n    this._decoderClass = this._useMLDecoder\n      ? this.OpusMLDecoderWebWorker\n      : this.OpusDecoderWebWorker;\n  }\n\n  async free() {\n    await super.reset();\n  }\n}\n","import OggOpusDecoder from \"./src/OggOpusDecoder.js\";\nimport OggOpusDecoderWebWorker from \"./src/OggOpusDecoderWebWorker.js\";\nimport { assignNames } from \"@wasm-audio-decoders/common\";\n\nassignNames(OggOpusDecoder, \"OggOpusDecoder\");\nassignNames(OggOpusDecoderWebWorker, \"OggOpusDecoderWebWorker\");\n\nexport { OggOpusDecoder, OggOpusDecoderWebWorker };\n"],"names":["factory","inProgress","dataWebpackPrefix","assignNames","Class","name","Object","defineProperty","value","WASMAudioDecoderWorker","globalThis","Worker","getWorker","constructor","options","Decoder","EmscriptenWASM","modules","source","get","isNode","type","webworkerSourceCode","_Decoder","_WASMAudioDecoderCommon","_EmscriptenWASM","decoder","moduleResolve","modulePromise","Promise","resolve","self","onmessage","data","id","command","transferList","messagePromise","messagePayload","defineProperties","WASMAudioDecoderCommon","module","isWebWorker","free","then","ready","reset","assign","Array","isArray","map","Uint8Array","channelData","channel","buffer","postMessage","process","versions","node","Buffer","from","toString","URL","createObjectURL","Blob","set","super","this","_id","Number","MIN_SAFE_INTEGER","_enqueuedOperations","Map","rest","delete","getModule","postToDecoder","finally","terminate","t","n","e","r","Int32Array","o","s","i","c","length","parseInt","substring","forEach","a","l","f","g","h","p","u","DataView","getInt32","d","charCodeAt","m","subarray","console","error","Error","uint8Array","float32Array","Float32Array","WeakMap","setModule","Ref","wasmString","WebAssembly","compile","wasm","inflateDynEncodeString","concatFloat32","buffers","ret","offset","getDecodedAudio","errors","samplesDecoded","sampleRate","bitDepth","getDecodedAudioMultiChannel","input","channelsDecoded","j","push","puffString","String","raw","instantiate","exports","instanceExports","entries","puff","memory","dataArray","heapView","heapPos","sourceLength","sourceLengthPtr","setInt32","sourcePtr","destLengthPtr","byteLength","slice","enumerable","_wasm","getOutputChannels","outputData","output","allocateTypedArray","len","TypedArray","setPointer","ptr","malloc","BYTES_PER_ELEMENT","_pointers","add","buf","HEAP","clear","codeToString","characters","heap","character","fromCharCode","apply","addError","message","frameLength","frameNumber","inputBytes","outputSamples","_module","Set","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","key","chunkId","all","keys","reduce","promises","Function","window","obj","prop","prototype","hasOwnProperty","call","url","done","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","timeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","replace","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","HEAPU8","wasmMemory","timers","_emscripten_math_cos","Math","cos","base64ReverseLookup","_opus_frame_decoder_create","_malloc","_opus_frame_decode_float_deinterleaved","_opus_frame_decoder_destroy","_free","__emscripten_timeout","wasmImports","abort","__emscripten_runtime_keepalive_clear","__setitimer_js","which","timeout_ms","performance","now","requestedSize","_proc_exit","code","imports","instance","wasmExports","b","assignWasmExports","Int8Array","Int16Array","Uint16Array","Uint32Array","Float64Array","BigInt64Array","BigUint64Array","initRuntime","opus_frame_decoder_create","opus_frame_decode_float_deinterleaved","opus_frame_decoder_destroy","OpusDecoder","_init","common","_common","_inputBytes","_outputSamples","_frameNumber","_input","_inputSize","_output","_outputChannels","_outputChannelSize","mapping","_channels","_channelMappingTable","_decoder","_sampleRate","_streamCount","_coupledStreamCount","_preSkip","_forceStereo","_ready","_decode","opusFrame","outputBuffer","decodeFrame","decoded","decodeFrames","opusFrames","outputBuffers","_isWebWorker","isNumber","param","channels","streamCount","coupledStreamCount","channelMappingTable","preSkip","forceStereo","includes","OpusDecoderWebWorker","symbol","channelMappings","left","center","right","front","side","rear","x","flatMap","y","z","join","lfe","monophonic","stereo","surround","getChannelMapping","channelCount","mappings","vorbisOpusChannelMapping","rate48000","rate44100","rate32000","rate24000","rate22050","rate16000","rate8000","absoluteGranulePosition","bandwidth","bitrate","bitrateMaximum","bitrateMinimum","bitrateNominal","bufferFullness","codec","codecFrames","crc","crc16","crc32","description","duration","emphasis","hasOpusPadding","header","isContinuedPacket","isCopyrighted","isFirstPage","isHome","isLastPage","isOriginal","isPrivate","isVbr","mode","modeExtension","mpeg","mpegVersion","numberAACFrames","outputGain","profile","profileBits","protection","segments","version","vorbis","vorbisComments","vorbisSetup","block","blockingStrategy","blockingStrategyBits","blockSize","blocksize0","blocksize1","blockSizeBits","channelMappingFamily","channelMode","channelModeBits","copyright","copyrightId","copyrightIdStart","frameCount","framePadding","frameSize","Rate","inputSampleRate","page","pageChecksum","pageSegmentBytes","pageSegmentTable","pageSequenceNumber","sample","sampleNumber","sampleRateBits","samples","stream","streamInfo","streamSerialNumber","streamStructureVersion","total","totalBytesOut","totalDuration","totalSamples","readRawData","incrementRawData","mapCodecFrameStats","mapFrameStats","logWarning","syncFrame","fixedLengthFrameSync","getHeader","setHeader","getFrame","parseFrame","parseOggPage","checkCodecUpdate","enable","getHeaderFromUint8Array","checkFrameFooterCrc16","dataView","reserved","bad","none","sixteenBitCRC","getCrcTable","crcTable","crcInitialValueFunction","crcFunction","byte","bit","crc8Table","flacCrc16Table","crc32Table","crc32Function","dataLength","crcChunkSize","concatBuffers","acc","bytesToString","bytes","reverseTable","reverse","val","BitReader","_data","_pos","position","read","bits","floor","HeaderCache","onCodecHeader","onCodecUpdate","_onCodecHeader","_onCodecUpdate","_isEnabled","_headerCache","_codecUpdateData","_codecHeaderSent","_codecShouldUpdate","_bitrate","codecData","_currentHeader","_updateCurrentHeader","codecUpdateFields","headerStore","frameStore","Parser","codecParser","headerCache","_codecParser","frameData","Frame","ignoreNextFrame","_flushing","Header","headerValue","dataValue","CodecFrame","readOffset","frameLengthValue","samplesValue","unsynchronizationFlag","extendedHeaderFlag","experimentalFlag","footerPresent","ID3v2","getID3v2Header","CodecHeader","bitrateMatrix","calcBitrate","idx","interval","intervalOffset","bands","to31","layer12ModeExtensions","bitrateIndex","v2","v1","intensityStereo","msStereo","on","off","layer3ModeExtensions","layersValues","mpegVersionDescription","isoIec","mpegVersions","protectionValues","emphasisValues","channelModes","MPEGHeader","id3v2Header","cachedHeader","mpegVersionValues","layerBits","layerValues","MPEGFrame","frame","MPEGParser","onCodec","profileValues","sampleRates","channelModeValues","AACHeader","protectionBit","privateBit","bufferFullnessBits","audioSpecificConfig","setUint16","AACFrame","AACParser","FLACFrame","_getFrameFooterCrc16","expectedCrc16","actualCrc16","flacCrc16","streamInfoValue","getFromStreamInfo","blockingStrategyValues","blockSizeValues","sampleRateValues","channelAssignments","bitDepthValues","FLACHeader","_decodeUTF8Int","zeroMask","shift","codecParserStub","next","channelAssignment","decodedUtf8","crc8","FLACParser","_getNextFrameSyncOffset","secondByte","nextHeaderOffset","oggPage","_streamInfo","segment","filter","OggPageHeader","view","getBigInt64","sign","getUint8","firstPart","getUint32","secondPart","warn","readInt64le","pageSegmentTableLength","segmentLength","segmentByte","OggPage","headerLength","totalLength","rawDataValue","OpusFrame","channelMappingFamilies","silkOnly","celtOnly","hybrid","narrowBand","mediumBand","wideBand","superWideBand","fullBand","configTable","OpusHeader","packetData","packetMode","packetLength","substr","getUint16","getInt16","packetConfig","headerData","OpusParser","_identificationHeader","_preSkipRemaining","VorbisFrame","blockSizes","VorbisHeader","vorbisCommentsData","vorbisSetupData","VorbisParser","_setupComplete","_prevBlockSize","oggPageSegment","_vorbisComments","_vorbisSetup","_mode","_parseSetupHeader","_getSamples","logError","currentBlockSize","blockFlags","mask","setup","bitReader","count","modeBits","currentByte","unshift","log2","OggStream","_onCodec","_continuedPacket","_codec","_isSupported","_previousAbsoluteGranulePosition","_updateCodec","_parser","_checkCodecSupport","idString","_checkPageSequenceNumber","_pageSequenceNumber","_parsePage","oggPageStore","pop","OggParser","_streams","_currentSerialNumber","oggStream","noOp","mimeType","enableLogging","enableFrameCRC32","_inputMimeType","_enableLogging","_crc32","_generator","_getGenerator","flush","parseChunk","chunk","parseAll","fileData","match","_currentReadPosition","_totalBytesIn","_totalBytesOut","_totalSamples","_rawData","minSize","rawData","increment","round","absoluteGranulePositionSamples","codecFrame","untrimmedCodecSamples","_log","logger","messages","stats","width","max","repeat","OggOpusDecoder","_speechQualityEnhancement","speechQualityEnhancement","_useMLDecoder","_decoderLibraryLoaded","_loadDecoderLibrary","_initDecoderClass","_decoderClass","OpusMLDecoder","async","validate","simd","OpusMLDecoderWebWorker","_instantiateDecoder","_totalSamplesDecoded","oggPages","allErrors","allChannelData","samplesThisDecode","flushFrames","_decoderReady","frames","totalDecodedSamples_48000","samplesToTrim","decode","oggOpusData","decodeFile","OggOpusDecoderWebWorker","define","amd"],"sourceRoot":""}